{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newResolver",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "newBeneficiary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "is721",
          "type": "bool"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lenderAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lendingID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "maxRentDuration",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "dailyRentPrice",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "lendAmount",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "enum IResolver.PaymentToken",
          "name": "paymentToken",
          "type": "uint8"
        }
      ],
      "name": "Lend",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "renterAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "lendingID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "rentingID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "rentAmount",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "rentDuration",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "rentedAt",
          "type": "uint32"
        }
      ],
      "name": "Rent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "rentingID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "collectedAt",
          "type": "uint32"
        }
      ],
      "name": "RentClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "lendingID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "stoppedAt",
          "type": "uint32"
        }
      ],
      "name": "StopLend",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "rentingID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "stoppedAt",
          "type": "uint32"
        }
      ],
      "name": "StopRent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_lendingID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_rentingID",
          "type": "uint256[]"
        }
      ],
      "name": "claimRent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lendingID",
          "type": "uint256"
        }
      ],
      "name": "getLending",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rentingID",
          "type": "uint256"
        }
      ],
      "name": "getRenting",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "lendAmount",
          "type": "uint256[]"
        },
        {
          "internalType": "uint8[]",
          "name": "maxRentDuration",
          "type": "uint8[]"
        },
        {
          "internalType": "bytes4[]",
          "name": "dailyRentPrice",
          "type": "bytes4[]"
        },
        {
          "internalType": "enum IResolver.PaymentToken[]",
          "name": "paymentToken",
          "type": "uint8[]"
        }
      ],
      "name": "lend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_lendingID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint8[]",
          "name": "rentDuration",
          "type": "uint8[]"
        },
        {
          "internalType": "uint256[]",
          "name": "rentAmount",
          "type": "uint256[]"
        }
      ],
      "name": "rent",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rentFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newBeneficiary",
          "type": "address"
        }
      ],
      "name": "setBeneficiary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "newPaused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newRentFee",
          "type": "uint256"
        }
      ],
      "name": "setRentFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_lendingID",
          "type": "uint256[]"
        }
      ],
      "name": "stopLend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_lendingID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_rentingID",
          "type": "uint256[]"
        }
      ],
      "name": "stopRent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155.sol",
    "1": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155Receiver.sol",
    "10": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/utils/ERC721Holder.sol",
    "11": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Address.sol",
    "12": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol",
    "13": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/introspection/ERC165.sol",
    "14": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/introspection/IERC165.sol",
    "15": "contracts/Registry.sol",
    "16": "contracts/interfaces/IRegistry.sol",
    "17": "contracts/interfaces/IResolver.sol",
    "2": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Holder.sol",
    "3": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
    "4": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/ERC20.sol",
    "5": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
    "6": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "7": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "8": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol",
    "9": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721Receiver.sol"
  },
  "ast": {
    "absolutePath": "contracts/Registry.sol",
    "exportedSymbols": {
      "Address": [
        4343
      ],
      "Context": [
        4046
      ],
      "ERC1155Holder": [
        2669
      ],
      "ERC1155Receiver": [
        2703
      ],
      "ERC165": [
        3999
      ],
      "ERC20": [
        3249
      ],
      "ERC721Holder": [
        3694
      ],
      "IERC1155": [
        2618
      ],
      "IERC1155Receiver": [
        3975
      ],
      "IERC165": [
        3934
      ],
      "IERC20": [
        3327
      ],
      "IERC20Metadata": [
        4024
      ],
      "IERC721": [
        3667
      ],
      "IERC721Receiver": [
        4361
      ],
      "IRegistry": [
        3922
      ],
      "IResolver": [
        4383
      ],
      "Registry": [
        2496
      ],
      "SafeERC20": [
        3551
      ]
    },
    "id": 2497,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:15"
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/ERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2497,
        "sourceUnit": 3250,
        "src": "57:83:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2497,
        "sourceUnit": 3328,
        "src": "141:84:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2497,
        "sourceUnit": 3552,
        "src": "226:93:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2497,
        "sourceUnit": 3668,
        "src": "320:86:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/utils/ERC721Holder.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/utils/ERC721Holder.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2497,
        "sourceUnit": 3695,
        "src": "407:97:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2497,
        "sourceUnit": 2619,
        "src": "505:88:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2497,
        "sourceUnit": 2670,
        "src": "594:99:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2497,
        "sourceUnit": 2704,
        "src": "694:101:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IRegistry.sol",
        "file": "./interfaces/IRegistry.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2497,
        "sourceUnit": 3923,
        "src": "797:36:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11,
              "name": "IRegistry",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3922,
              "src": "2134:9:15"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "2134:9:15"
          },
          {
            "baseName": {
              "id": 13,
              "name": "ERC721Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3694,
              "src": "2145:12:15"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "2145:12:15"
          },
          {
            "baseName": {
              "id": 15,
              "name": "ERC1155Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2703,
              "src": "2159:15:15"
            },
            "id": 16,
            "nodeType": "InheritanceSpecifier",
            "src": "2159:15:15"
          },
          {
            "baseName": {
              "id": 17,
              "name": "ERC1155Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2669,
              "src": "2176:13:15"
            },
            "id": 18,
            "nodeType": "InheritanceSpecifier",
            "src": "2176:13:15"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2496,
        "linearizedBaseContracts": [
          2496,
          2669,
          2703,
          3975,
          3999,
          3934,
          3694,
          4361,
          3922
        ],
        "name": "Registry",
        "nameLocation": "2122:8:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "id": 19,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3551,
              "src": "2202:9:15"
            },
            "nodeType": "UsingForDirective",
            "src": "2196:26:15",
            "typeName": {
              "id": 21,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 20,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3249,
                "src": "2216:5:15"
              },
              "referencedDeclaration": 3249,
              "src": "2216:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3249",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "resolver",
            "nameLocation": "2246:8:15",
            "nodeType": "VariableDeclaration",
            "scope": 2496,
            "src": "2228:26:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IResolver_$4383",
              "typeString": "contract IResolver"
            },
            "typeName": {
              "id": 24,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23,
                "name": "IResolver",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4383,
                "src": "2228:9:15"
              },
              "referencedDeclaration": 4383,
              "src": "2228:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IResolver_$4383",
                "typeString": "contract IResolver"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 27,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "2276:5:15",
            "nodeType": "VariableDeclaration",
            "scope": 2496,
            "src": "2260:21:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2260:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "beneficiary",
            "nameLocation": "2311:11:15",
            "nodeType": "VariableDeclaration",
            "scope": 2496,
            "src": "2287:35:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 28,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2287:15:15",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 32,
            "mutability": "mutable",
            "name": "lendingID",
            "nameLocation": "2344:9:15",
            "nodeType": "VariableDeclaration",
            "scope": 2496,
            "src": "2328:29:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2328:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 31,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2356:1:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 35,
            "mutability": "mutable",
            "name": "rentingID",
            "nameLocation": "2379:9:15",
            "nodeType": "VariableDeclaration",
            "scope": 2496,
            "src": "2363:29:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2363:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 34,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2391:1:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "5c975abb",
            "id": 38,
            "mutability": "mutable",
            "name": "paused",
            "nameLocation": "2410:6:15",
            "nodeType": "VariableDeclaration",
            "scope": 2496,
            "src": "2398:26:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 36,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2398:4:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 37,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2419:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bf2b23ea",
            "id": 41,
            "mutability": "mutable",
            "name": "rentFee",
            "nameLocation": "2445:7:15",
            "nodeType": "VariableDeclaration",
            "scope": 2496,
            "src": "2430:26:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2430:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 40,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2455:1:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 44,
            "mutability": "constant",
            "name": "SECONDS_IN_DAY",
            "nameLocation": "2487:14:15",
            "nodeType": "VariableDeclaration",
            "scope": 2496,
            "src": "2462:47:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2462:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3836343030",
              "id": 43,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2504:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "86400"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 49,
            "mutability": "mutable",
            "name": "lendings",
            "nameLocation": "2551:8:15",
            "nodeType": "VariableDeclaration",
            "scope": 2496,
            "src": "2515:44:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3810_storage_$",
              "typeString": "mapping(bytes32 => struct IRegistry.Lending)"
            },
            "typeName": {
              "id": 48,
              "keyType": {
                "id": 45,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2523:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2515:27:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3810_storage_$",
                "typeString": "mapping(bytes32 => struct IRegistry.Lending)"
              },
              "valueType": {
                "id": 47,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 46,
                  "name": "Lending",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3810,
                  "src": "2534:7:15"
                },
                "referencedDeclaration": 3810,
                "src": "2534:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                  "typeString": "struct IRegistry.Lending"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 54,
            "mutability": "mutable",
            "name": "rentings",
            "nameLocation": "2601:8:15",
            "nodeType": "VariableDeclaration",
            "scope": 2496,
            "src": "2565:44:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$3819_storage_$",
              "typeString": "mapping(bytes32 => struct IRegistry.Renting)"
            },
            "typeName": {
              "id": 53,
              "keyType": {
                "id": 50,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2573:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2565:27:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$3819_storage_$",
                "typeString": "mapping(bytes32 => struct IRegistry.Renting)"
              },
              "valueType": {
                "id": 52,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 51,
                  "name": "Renting",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3819,
                  "src": "2584:7:15"
                },
                "referencedDeclaration": 3819,
                "src": "2584:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                  "typeString": "struct IRegistry.Renting"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "2637:76:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 57,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2655:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2655:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 59,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "2669:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2655:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742061646d696e",
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2676:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fffda9afd14b13f1ffa3513e2d92d121d7733f26c16415b40abbc0ddd4e865f5",
                          "typeString": "literal_string \"ReNFT::not admin\""
                        },
                        "value": "ReNFT::not admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fffda9afd14b13f1ffa3513e2d92d121d7733f26c16415b40abbc0ddd4e865f5",
                          "typeString": "literal_string \"ReNFT::not admin\""
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2647:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2647:48:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "2647:48:15"
                },
                {
                  "id": 64,
                  "nodeType": "PlaceholderStatement",
                  "src": "2705:1:15"
                }
              ]
            },
            "id": 66,
            "name": "onlyAdmin",
            "nameLocation": "2625:9:15",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2634:2:15"
            },
            "src": "2616:97:15",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "2740:61:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2758:7:15",
                        "subExpression": {
                          "id": 69,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "2759:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a706175736564",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2767:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5d99b6a43b76cee309429437a6188b1bc1cbad53dcd0ea4c7a16fe9d2f6f25a",
                          "typeString": "literal_string \"ReNFT::paused\""
                        },
                        "value": "ReNFT::paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d5d99b6a43b76cee309429437a6188b1bc1cbad53dcd0ea4c7a16fe9d2f6f25a",
                          "typeString": "literal_string \"ReNFT::paused\""
                        }
                      ],
                      "id": 68,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2750:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2750:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "2750:33:15"
                },
                {
                  "id": 74,
                  "nodeType": "PlaceholderStatement",
                  "src": "2793:1:15"
                }
              ]
            },
            "id": 76,
            "name": "notPaused",
            "nameLocation": "2728:9:15",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2737:2:15"
            },
            "src": "2719:82:15",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "2920:240:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86,
                        "name": "newResolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "2950:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2044,
                      "src": "2930:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2930:32:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "2930:32:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90,
                        "name": "newBeneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "2992:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 89,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2044,
                      "src": "2972:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2972:35:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "2972:35:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 94,
                        "name": "newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "3037:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 93,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2044,
                      "src": "3017:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3017:29:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "3017:29:15"
                },
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97,
                      "name": "resolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "3056:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IResolver_$4383",
                        "typeString": "contract IResolver"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 99,
                          "name": "newResolver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3077:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 98,
                        "name": "IResolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4383,
                        "src": "3067:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IResolver_$4383_$",
                          "typeString": "type(contract IResolver)"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3067:22:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IResolver_$4383",
                        "typeString": "contract IResolver"
                      }
                    },
                    "src": "3056:33:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IResolver_$4383",
                      "typeString": "contract IResolver"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "3056:33:15"
                },
                {
                  "expression": {
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "3099:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 104,
                      "name": "newBeneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "3113:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3099:28:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "3099:28:15"
                },
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 107,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "3137:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 108,
                      "name": "newAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "3145:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3137:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "3137:16:15"
                }
              ]
            },
            "id": 112,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "newResolver",
                  "nameLocation": "2836:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "2828:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2828:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "newBeneficiary",
                  "nameLocation": "2873:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "2857:30:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2857:15:15",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "2905:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "2897:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2897:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2818:101:15"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2920:0:15"
            },
            "scope": 2496,
            "src": "2807:353:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3845
            ],
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "3508:312:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 142,
                        "name": "handleLend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 494,
                        "src": "3542:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 144,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "3602:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 145,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 119,
                            "src": "3631:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 146,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "3659:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 147,
                            "name": "lendAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "3684:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 148,
                            "name": "maxRentDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "3712:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          {
                            "id": 149,
                            "name": "dailyRentPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 131,
                            "src": "3745:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                              "typeString": "bytes4[] memory"
                            }
                          },
                          {
                            "id": 150,
                            "name": "paymentToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "3777:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4368_$dyn_memory_ptr",
                              "typeString": "enum IResolver.PaymentToken[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                              "typeString": "bytes4[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4368_$dyn_memory_ptr",
                              "typeString": "enum IResolver.PaymentToken[] memory"
                            }
                          ],
                          "id": 143,
                          "name": "createLendCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1766,
                          "src": "3566:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_bytes4_$dyn_memory_ptr_$_t_array$_t_enum$_PaymentToken_$4368_$dyn_memory_ptr_$returns$_t_struct$_CallData_$3793_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint8[] memory,bytes4[] memory,enum IResolver.PaymentToken[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3566:237:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 141,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1265,
                      "src": "3518:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$returns$__$_$_t_struct$_CallData_$3793_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3518:295:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "3518:295:15"
                }
              ]
            },
            "functionSelector": "1cbb410f",
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 139,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 138,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "3498:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "3498:9:15"
              }
            ],
            "name": "lend",
            "nameLocation": "3175:4:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 137,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3489:8:15"
            },
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "3220:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3189:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 114,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 113,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3753,
                        "src": "3189:21:15"
                      },
                      "referencedDeclaration": 3753,
                      "src": "3189:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3753",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 115,
                    "nodeType": "ArrayTypeName",
                    "src": "3189:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "3258:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3241:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 117,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3241:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 118,
                    "nodeType": "ArrayTypeName",
                    "src": "3241:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "3295:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3278:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 120,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3278:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 121,
                    "nodeType": "ArrayTypeName",
                    "src": "3278:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "lendAmount",
                  "nameLocation": "3329:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3312:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 123,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3312:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 124,
                    "nodeType": "ArrayTypeName",
                    "src": "3312:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "maxRentDuration",
                  "nameLocation": "3364:15:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3349:30:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 126,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "3349:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 127,
                    "nodeType": "ArrayTypeName",
                    "src": "3349:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "dailyRentPrice",
                  "nameLocation": "3405:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3389:30:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                    "typeString": "bytes4[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 129,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "3389:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 130,
                    "nodeType": "ArrayTypeName",
                    "src": "3389:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                      "typeString": "bytes4[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "paymentToken",
                  "nameLocation": "3461:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3429:44:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4368_$dyn_memory_ptr",
                    "typeString": "enum IResolver.PaymentToken[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 133,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 132,
                        "name": "IResolver.PaymentToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4368,
                        "src": "3429:22:15"
                      },
                      "referencedDeclaration": 4368,
                      "src": "3429:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PaymentToken_$4368",
                        "typeString": "enum IResolver.PaymentToken"
                      }
                    },
                    "id": 134,
                    "nodeType": "ArrayTypeName",
                    "src": "3429:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4368_$dyn_storage_ptr",
                      "typeString": "enum IResolver.PaymentToken[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3179:300:15"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3508:0:15"
            },
            "scope": 2496,
            "src": "3166:654:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3861
            ],
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "4038:257:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 175,
                        "name": "handleStopLend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "4072:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 177,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "4138:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 178,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 162,
                            "src": "4167:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 179,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "4195:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 180,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "4220:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4262:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "4248:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (uint256[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 181,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4252:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 182,
                                "nodeType": "ArrayTypeName",
                                "src": "4252:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4248:16:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 176,
                          "name": "createActionCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1897,
                          "src": "4100:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_struct$_CallData_$3793_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint256[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4100:178:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 174,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1265,
                      "src": "4048:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$returns$__$_$_t_struct$_CallData_$3793_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4048:240:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "4048:240:15"
                }
              ]
            },
            "functionSelector": "c9c40183",
            "id": 190,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 172,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 171,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "4028:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "4028:9:15"
              }
            ],
            "name": "stopLend",
            "nameLocation": "3835:8:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 170,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4019:8:15"
            },
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "3884:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "3853:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 157,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 156,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3753,
                        "src": "3853:21:15"
                      },
                      "referencedDeclaration": 3753,
                      "src": "3853:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3753",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 158,
                    "nodeType": "ArrayTypeName",
                    "src": "3853:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "3922:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "3905:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 160,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3905:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 161,
                    "nodeType": "ArrayTypeName",
                    "src": "3905:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "3959:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "3942:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 163,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3942:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 164,
                    "nodeType": "ArrayTypeName",
                    "src": "3942:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "3993:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "3976:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 166,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3976:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 167,
                    "nodeType": "ArrayTypeName",
                    "src": "3976:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3843:166:15"
            },
            "returnParameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4038:0:15"
            },
            "scope": 2496,
            "src": "3826:469:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3883
            ],
            "body": {
              "id": 227,
              "nodeType": "Block",
              "src": "4591:275:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 216,
                        "name": "handleRent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 899,
                        "src": "4625:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 218,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 194,
                            "src": "4685:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 219,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "4714:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 220,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "4742:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 221,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 203,
                            "src": "4767:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 222,
                            "name": "rentDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "4795:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          {
                            "id": 223,
                            "name": "rentAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 209,
                            "src": "4825:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 217,
                          "name": "createRentCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1831,
                          "src": "4649:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_struct$_CallData_$3793_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint8[] memory,uint256[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4649:200:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 215,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1265,
                      "src": "4601:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$returns$__$_$_t_struct$_CallData_$3793_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4601:258:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "4601:258:15"
                }
              ]
            },
            "functionSelector": "cbe55e54",
            "id": 228,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 213,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 212,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "4581:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "4581:9:15"
              }
            ],
            "name": "rent",
            "nameLocation": "4310:4:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 211,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4572:8:15"
            },
            "parameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "4355:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "4324:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 192,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 191,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3753,
                        "src": "4324:21:15"
                      },
                      "referencedDeclaration": 3753,
                      "src": "4324:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3753",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 193,
                    "nodeType": "ArrayTypeName",
                    "src": "4324:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "4393:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "4376:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 195,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4376:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 196,
                    "nodeType": "ArrayTypeName",
                    "src": "4376:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "4430:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "4413:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 198,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4413:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 199,
                    "nodeType": "ArrayTypeName",
                    "src": "4413:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "4464:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "4447:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 201,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4447:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 202,
                    "nodeType": "ArrayTypeName",
                    "src": "4447:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "rentDuration",
                  "nameLocation": "4499:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "4484:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 204,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "4484:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 205,
                    "nodeType": "ArrayTypeName",
                    "src": "4484:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "rentAmount",
                  "nameLocation": "4538:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "4521:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 207,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4521:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 208,
                    "nodeType": "ArrayTypeName",
                    "src": "4521:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4314:240:15"
            },
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4591:0:15"
            },
            "scope": 2496,
            "src": "4301:565:15",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3902
            ],
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "5121:251:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 251,
                        "name": "handleStopRent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1057,
                        "src": "5155:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 253,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "5221:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 254,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 235,
                            "src": "5250:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 255,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 238,
                            "src": "5278:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 256,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "5303:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 257,
                            "name": "_rentingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 244,
                            "src": "5331:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 252,
                          "name": "createActionCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1897,
                          "src": "5183:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_struct$_CallData_$3793_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint256[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5183:172:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 250,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1265,
                      "src": "5131:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$returns$__$_$_t_struct$_CallData_$3793_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5131:234:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 260,
                  "nodeType": "ExpressionStatement",
                  "src": "5131:234:15"
                }
              ]
            },
            "functionSelector": "14b5685c",
            "id": 262,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 248,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 247,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "5111:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "5111:9:15"
              }
            ],
            "name": "stopRent",
            "nameLocation": "4881:8:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 246,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5102:8:15"
            },
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 232,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "4930:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "4899:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 230,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 229,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3753,
                        "src": "4899:21:15"
                      },
                      "referencedDeclaration": 3753,
                      "src": "4899:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3753",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 231,
                    "nodeType": "ArrayTypeName",
                    "src": "4899:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "4968:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "4951:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 233,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4951:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 234,
                    "nodeType": "ArrayTypeName",
                    "src": "4951:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "5005:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "4988:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 236,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4988:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 237,
                    "nodeType": "ArrayTypeName",
                    "src": "4988:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 241,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "5039:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5022:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 239,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5022:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 240,
                    "nodeType": "ArrayTypeName",
                    "src": "5022:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "_rentingID",
                  "nameLocation": "5076:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5059:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 242,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5059:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 243,
                    "nodeType": "ArrayTypeName",
                    "src": "5059:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4889:203:15"
            },
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5121:0:15"
            },
            "scope": 2496,
            "src": "4872:500:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3921
            ],
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "5628:252:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 285,
                        "name": "handleClaimRent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1183,
                        "src": "5662:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 287,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "5729:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 288,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "5758:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 289,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 272,
                            "src": "5786:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 290,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "5811:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 291,
                            "name": "_rentingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "5839:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 286,
                          "name": "createActionCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1897,
                          "src": "5691:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_struct$_CallData_$3793_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint256[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5691:172:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 284,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1265,
                      "src": "5638:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$returns$__$_$_t_struct$_CallData_$3793_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5638:235:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "5638:235:15"
                }
              ]
            },
            "functionSelector": "937821a1",
            "id": 296,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 282,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 281,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "5618:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "5618:9:15"
              }
            ],
            "name": "claimRent",
            "nameLocation": "5387:9:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 280,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5609:8:15"
            },
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "5437:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "5406:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 264,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 263,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3753,
                        "src": "5406:21:15"
                      },
                      "referencedDeclaration": 3753,
                      "src": "5406:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3753",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 265,
                    "nodeType": "ArrayTypeName",
                    "src": "5406:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "5475:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "5458:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 267,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5458:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 268,
                    "nodeType": "ArrayTypeName",
                    "src": "5458:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 272,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "5512:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "5495:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 270,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5495:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 271,
                    "nodeType": "ArrayTypeName",
                    "src": "5495:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "5546:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "5529:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 273,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5529:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 274,
                    "nodeType": "ArrayTypeName",
                    "src": "5529:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "_rentingID",
                  "nameLocation": "5583:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "5566:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 276,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5566:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 277,
                    "nodeType": "ArrayTypeName",
                    "src": "5566:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5396:203:15"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5628:0:15"
            },
            "scope": 2496,
            "src": "5378:502:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 493,
              "nodeType": "Block",
              "src": "6126:1640:15",
              "statements": [
                {
                  "body": {
                    "id": 463,
                    "nodeType": "Block",
                    "src": "6181:1365:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 315,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "6212:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            {
                              "id": 316,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 303,
                              "src": "6216:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 314,
                            "name": "ensureIsLendable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2242,
                            "src": "6195:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_CallData_$3793_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (struct IRegistry.CallData memory,uint256) pure"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6195:23:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 318,
                        "nodeType": "ExpressionStatement",
                        "src": "6195:23:15"
                      },
                      {
                        "assignments": [
                          320
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 320,
                            "mutability": "mutable",
                            "name": "identifier",
                            "nameLocation": "6240:10:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 463,
                            "src": "6232:18:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 319,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6232:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 336,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 324,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 299,
                                      "src": "6318:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 325,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3764,
                                    "src": "6318:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 328,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 326,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 299,
                                      "src": "6332:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 327,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3755,
                                    "src": "6332:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6318:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 329,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 299,
                                      "src": "6362:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 330,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3767,
                                    "src": "6362:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 332,
                                  "indexExpression": {
                                    "id": 331,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 303,
                                    "src": "6373:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6362:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 333,
                                  "name": "lendingID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "6397:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 322,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6280:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "6280:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6280:144:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 321,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "6253:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6253:185:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6232:206:15"
                      },
                      {
                        "assignments": [
                          341
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 341,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "6478:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 463,
                            "src": "6452:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 340,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 339,
                                "name": "IRegistry.Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3810,
                                "src": "6452:17:15"
                              },
                              "referencedDeclaration": 3810,
                              "src": "6452:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 345,
                        "initialValue": {
                          "baseExpression": {
                            "id": 342,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "6488:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3810_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 344,
                          "indexExpression": {
                            "id": 343,
                            "name": "identifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "6497:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6488:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3810_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6452:56:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 347,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 341,
                              "src": "6535:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 346,
                            "name": "ensureIsNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2088,
                              2144
                            ],
                            "referencedDeclaration": 2088,
                            "src": "6522:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$3810_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6522:21:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 349,
                        "nodeType": "ExpressionStatement",
                        "src": "6522:21:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 353,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 299,
                                      "src": "6586:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 354,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "paymentToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3792,
                                    "src": "6586:15:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4368_$dyn_memory_ptr",
                                      "typeString": "enum IResolver.PaymentToken[] memory"
                                    }
                                  },
                                  "id": 356,
                                  "indexExpression": {
                                    "id": 355,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 303,
                                    "src": "6602:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6586:18:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PaymentToken_$4368",
                                    "typeString": "enum IResolver.PaymentToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_PaymentToken_$4368",
                                    "typeString": "enum IResolver.PaymentToken"
                                  }
                                ],
                                "id": 352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6580:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 351,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6580:5:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6580:25:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 350,
                            "name": "ensureTokenNotSentinel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2406,
                            "src": "6557:22:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint8_$returns$__$",
                              "typeString": "function (uint8) pure"
                            }
                          },
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6557:49:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 359,
                        "nodeType": "ExpressionStatement",
                        "src": "6557:49:15"
                      },
                      {
                        "assignments": [
                          361
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 361,
                            "mutability": "mutable",
                            "name": "is721",
                            "nameLocation": "6625:5:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 463,
                            "src": "6620:10:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 360,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6620:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 370,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_NFTStandard_$3753",
                            "typeString": "enum IRegistry.NFTStandard"
                          },
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 362,
                                "name": "cd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 299,
                                "src": "6633:2:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                  "typeString": "struct IRegistry.CallData memory"
                                }
                              },
                              "id": 363,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nftStandard",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3761,
                              "src": "6633:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                                "typeString": "enum IRegistry.NFTStandard[] memory"
                              }
                            },
                            "id": 365,
                            "indexExpression": {
                              "id": 364,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 303,
                              "src": "6648:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6633:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTStandard_$3753",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 366,
                                "name": "IRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3922,
                                "src": "6654:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRegistry_$3922_$",
                                  "typeString": "type(contract IRegistry)"
                                }
                              },
                              "id": 367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NFTStandard",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3753,
                              "src": "6654:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_NFTStandard_$3753_$",
                                "typeString": "type(enum IRegistry.NFTStandard)"
                              }
                            },
                            "id": 368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "E721",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3751,
                            "src": "6654:26:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTStandard_$3753",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          },
                          "src": "6633:47:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6620:60:15"
                      },
                      {
                        "expression": {
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 371,
                              "name": "lendings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "6694:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3810_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                              }
                            },
                            "id": 373,
                            "indexExpression": {
                              "id": 372,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 320,
                              "src": "6703:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6694:20:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3810_storage",
                              "typeString": "struct IRegistry.Lending storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 376,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 299,
                                    "src": "6766:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 377,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3761,
                                  "src": "6766:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                                    "typeString": "enum IRegistry.NFTStandard[] memory"
                                  }
                                },
                                "id": 379,
                                "indexExpression": {
                                  "id": 378,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 303,
                                  "src": "6781:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6766:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$3753",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 382,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6824:3:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 383,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6824:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6816:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 380,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6816:8:15",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6816:19:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 385,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 299,
                                    "src": "6870:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 386,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "maxRentDuration",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3773,
                                  "src": "6870:18:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                    "typeString": "uint8[] memory"
                                  }
                                },
                                "id": 388,
                                "indexExpression": {
                                  "id": 387,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 303,
                                  "src": "6889:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6870:21:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 389,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 299,
                                    "src": "6925:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 390,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "dailyRentPrice",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3776,
                                  "src": "6925:17:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                    "typeString": "bytes4[] memory"
                                  }
                                },
                                "id": 392,
                                "indexExpression": {
                                  "id": 391,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 303,
                                  "src": "6943:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6925:20:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "condition": {
                                  "id": 393,
                                  "name": "is721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 361,
                                  "src": "6975:5:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 397,
                                          "name": "cd",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 299,
                                          "src": "6994:2:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                            "typeString": "struct IRegistry.CallData memory"
                                          }
                                        },
                                        "id": 398,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "lendAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3770,
                                        "src": "6994:13:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 400,
                                      "indexExpression": {
                                        "id": 399,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 303,
                                        "src": "7008:1:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6994:16:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 396,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6987:6:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 395,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6987:6:15",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 401,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6987:24:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "id": 402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "6975:36:15",
                                "trueExpression": {
                                  "hexValue": "31",
                                  "id": 394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6983:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              {
                                "condition": {
                                  "id": 403,
                                  "name": "is721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 361,
                                  "src": "7046:5:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 407,
                                          "name": "cd",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 299,
                                          "src": "7065:2:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                            "typeString": "struct IRegistry.CallData memory"
                                          }
                                        },
                                        "id": 408,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "lendAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3770,
                                        "src": "7065:13:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 410,
                                      "indexExpression": {
                                        "id": 409,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 303,
                                        "src": "7079:1:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7065:16:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 406,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7058:6:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 405,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7058:6:15",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 411,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7058:24:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "id": 412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "7046:36:15",
                                "trueExpression": {
                                  "hexValue": "31",
                                  "id": 404,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7054:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 413,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 299,
                                    "src": "7114:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 414,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "paymentToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3792,
                                  "src": "7114:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4368_$dyn_memory_ptr",
                                    "typeString": "enum IResolver.PaymentToken[] memory"
                                  }
                                },
                                "id": 416,
                                "indexExpression": {
                                  "id": 415,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 303,
                                  "src": "7130:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7114:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PaymentToken_$4368",
                                  "typeString": "enum IResolver.PaymentToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_NFTStandard_$3753",
                                  "typeString": "enum IRegistry.NFTStandard"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                },
                                {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                },
                                {
                                  "typeIdentifier": "t_enum$_PaymentToken_$4368",
                                  "typeString": "enum IResolver.PaymentToken"
                                }
                              ],
                              "expression": {
                                "id": 374,
                                "name": "IRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3922,
                                "src": "6717:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRegistry_$3922_$",
                                  "typeString": "type(contract IRegistry)"
                                }
                              },
                              "id": 375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Lending",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3810,
                              "src": "6717:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Lending_$3810_storage_ptr_$",
                                "typeString": "type(struct IRegistry.Lending storage pointer)"
                              }
                            },
                            "id": 417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "nftStandard",
                              "lenderAddress",
                              "maxRentDuration",
                              "dailyRentPrice",
                              "lendAmount",
                              "availableAmount",
                              "paymentToken"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "6717:430:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "src": "6694:453:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3810_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "id": 419,
                        "nodeType": "ExpressionStatement",
                        "src": "6694:453:15"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 423,
                              "name": "is721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 361,
                              "src": "7198:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 424,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7221:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7221:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 426,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "7249:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 427,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3764,
                                "src": "7249:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 430,
                              "indexExpression": {
                                "expression": {
                                  "id": 428,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "7263:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 429,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "left",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3755,
                                "src": "7263:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7249:22:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 431,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "7289:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 432,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3767,
                                "src": "7289:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 434,
                              "indexExpression": {
                                "id": 433,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "7300:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7289:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 435,
                              "name": "lendingID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "7320:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 436,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "7347:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 437,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "maxRentDuration",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3773,
                                "src": "7347:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                  "typeString": "uint8[] memory"
                                }
                              },
                              "id": 439,
                              "indexExpression": {
                                "id": 438,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "7366:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7347:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 440,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "7386:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 441,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "dailyRentPrice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3776,
                                "src": "7386:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                  "typeString": "bytes4[] memory"
                                }
                              },
                              "id": 443,
                              "indexExpression": {
                                "id": 442,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "7404:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7386:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "condition": {
                                "id": 444,
                                "name": "is721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 361,
                                "src": "7424:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 448,
                                        "name": "cd",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 299,
                                        "src": "7443:2:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                          "typeString": "struct IRegistry.CallData memory"
                                        }
                                      },
                                      "id": 449,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "lendAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3770,
                                      "src": "7443:13:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 451,
                                    "indexExpression": {
                                      "id": 450,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 303,
                                      "src": "7457:1:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7443:16:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 447,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7436:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint16_$",
                                    "typeString": "type(uint16)"
                                  },
                                  "typeName": {
                                    "id": 446,
                                    "name": "uint16",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7436:6:15",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7436:24:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "7424:36:15",
                              "trueExpression": {
                                "hexValue": "31",
                                "id": 445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7432:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 454,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "7478:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 455,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "paymentToken",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3792,
                                "src": "7478:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4368_$dyn_memory_ptr",
                                  "typeString": "enum IResolver.PaymentToken[] memory"
                                }
                              },
                              "id": 457,
                              "indexExpression": {
                                "id": 456,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "7494:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7478:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PaymentToken_$4368",
                                "typeString": "enum IResolver.PaymentToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_enum$_PaymentToken_$4368",
                                "typeString": "enum IResolver.PaymentToken"
                              }
                            ],
                            "expression": {
                              "id": 420,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3922,
                              "src": "7166:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$3922_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Lend",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3718,
                            "src": "7166:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes4_$_t_uint16_$_t_enum$_PaymentToken_$4368_$returns$__$",
                              "typeString": "function (bool,address,address,uint256,uint256,uint8,bytes4,uint16,enum IResolver.PaymentToken)"
                            }
                          },
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7166:344:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 459,
                        "nodeType": "EmitStatement",
                        "src": "7161:349:15"
                      },
                      {
                        "expression": {
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7524:11:15",
                          "subExpression": {
                            "id": 460,
                            "name": "lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "7524:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 462,
                        "nodeType": "ExpressionStatement",
                        "src": "7524:11:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 307,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "6162:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 308,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "6166:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3757,
                      "src": "6166:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6162:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 464,
                  "initializationExpression": {
                    "assignments": [
                      303
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6149:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 464,
                        "src": "6141:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6141:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 306,
                    "initialValue": {
                      "expression": {
                        "id": 304,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "6153:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3755,
                      "src": "6153:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6141:19:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6176:3:15",
                      "subExpression": {
                        "id": 311,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "6176:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 313,
                    "nodeType": "ExpressionStatement",
                    "src": "6176:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "6136:1410:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 466,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "7581:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 467,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7597:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7597:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 471,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7629:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Registry_$2496",
                              "typeString": "contract Registry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Registry_$2496",
                              "typeString": "contract Registry"
                            }
                          ],
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7621:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 469,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7621:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7621:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 474,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "7657:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 475,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3767,
                            "src": "7657:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 476,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "7669:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 477,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3755,
                            "src": "7669:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 478,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "7678:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 479,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "right",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3757,
                            "src": "7678:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7688:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 473,
                          "name": "sliceArr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2028,
                          "src": "7648:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory,uint256,uint256,uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7648:42:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 483,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "7713:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 484,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lendAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3770,
                            "src": "7713:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 485,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "7728:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 486,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3755,
                            "src": "7728:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 487,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "7737:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 488,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "right",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3757,
                            "src": "7737:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7747:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 482,
                          "name": "sliceArr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2028,
                          "src": "7704:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory,uint256,uint256,uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7704:45:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 465,
                      "name": "safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1588,
                      "src": "7555:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct IRegistry.CallData memory,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7555:204:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "7555:204:15"
                }
              ]
            },
            "id": 494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleLend",
            "nameLocation": "6077:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 299,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "6114:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 494,
                  "src": "6088:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 298,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 297,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3793,
                      "src": "6088:18:15"
                    },
                    "referencedDeclaration": 3793,
                    "src": "6088:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3793_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6087:30:15"
            },
            "returnParameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6126:0:15"
            },
            "scope": 2496,
            "src": "6068:1698:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 644,
              "nodeType": "Block",
              "src": "7834:1220:15",
              "statements": [
                {
                  "assignments": [
                    504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 504,
                      "mutability": "mutable",
                      "name": "lentAmounts",
                      "nameLocation": "7861:11:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 644,
                      "src": "7844:28:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 502,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7844:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 503,
                        "nodeType": "ArrayTypeName",
                        "src": "7844:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 514,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 508,
                            "name": "cd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 497,
                            "src": "7889:2:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                              "typeString": "struct IRegistry.CallData memory"
                            }
                          },
                          "id": 509,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "right",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3757,
                          "src": "7889:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 510,
                            "name": "cd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 497,
                            "src": "7900:2:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                              "typeString": "struct IRegistry.CallData memory"
                            }
                          },
                          "id": 511,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "left",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3755,
                          "src": "7900:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7889:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7875:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 505,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7879:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 506,
                        "nodeType": "ArrayTypeName",
                        "src": "7879:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7875:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7844:64:15"
                },
                {
                  "body": {
                    "id": 614,
                    "nodeType": "Block",
                    "src": "7963:867:15",
                    "statements": [
                      {
                        "assignments": [
                          528
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 528,
                            "mutability": "mutable",
                            "name": "lendingIdentifier",
                            "nameLocation": "7985:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 614,
                            "src": "7977:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 527,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "7977:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 547,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 532,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 497,
                                      "src": "8070:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 533,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3764,
                                    "src": "8070:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 536,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 534,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 497,
                                      "src": "8084:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 535,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3755,
                                    "src": "8084:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8070:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 537,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 497,
                                      "src": "8114:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 538,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3767,
                                    "src": "8114:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 540,
                                  "indexExpression": {
                                    "id": 539,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 516,
                                    "src": "8125:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8114:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 541,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 497,
                                      "src": "8149:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 542,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lendingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3779,
                                    "src": "8149:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 544,
                                  "indexExpression": {
                                    "id": 543,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 516,
                                    "src": "8162:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8149:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 530,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8032:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8032:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8032:150:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 529,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "8005:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8005:191:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7977:219:15"
                      },
                      {
                        "assignments": [
                          550
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 550,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "8226:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 614,
                            "src": "8210:23:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 549,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 548,
                                "name": "Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3810,
                                "src": "8210:7:15"
                              },
                              "referencedDeclaration": 3810,
                              "src": "8210:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 554,
                        "initialValue": {
                          "baseExpression": {
                            "id": 551,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "8236:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3810_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 553,
                          "indexExpression": {
                            "id": 552,
                            "name": "lendingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 528,
                            "src": "8245:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8236:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3810_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8210:53:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 556,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 550,
                              "src": "8293:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 555,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2116,
                              2172
                            ],
                            "referencedDeclaration": 2116,
                            "src": "8277:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$3810_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8277:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 558,
                        "nodeType": "ExpressionStatement",
                        "src": "8277:24:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 560,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 550,
                              "src": "8333:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            {
                              "expression": {
                                "id": 561,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8342:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8342:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 559,
                            "name": "ensureIsStoppable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2368,
                            "src": "8315:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$3810_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory,address) pure"
                            }
                          },
                          "id": 563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8315:38:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 564,
                        "nodeType": "ExpressionStatement",
                        "src": "8315:38:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_NFTStandard_$3753",
                                "typeString": "enum IRegistry.NFTStandard"
                              },
                              "id": 572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 566,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 497,
                                    "src": "8392:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 567,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3761,
                                  "src": "8392:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                                    "typeString": "enum IRegistry.NFTStandard[] memory"
                                  }
                                },
                                "id": 569,
                                "indexExpression": {
                                  "id": 568,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 516,
                                  "src": "8407:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8392:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$3753",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 570,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 550,
                                  "src": "8413:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 571,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftStandard",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3796,
                                "src": "8413:19:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$3753",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "src": "8392:40:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a696e76616c6964206e6674207374616e64617264",
                              "id": 573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8450:29:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              },
                              "value": "ReNFT::invalid nft standard"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              }
                            ],
                            "id": 565,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8367:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8367:126:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 575,
                        "nodeType": "ExpressionStatement",
                        "src": "8367:126:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              "id": 581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 577,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 550,
                                  "src": "8532:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 578,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3804,
                                "src": "8532:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 579,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 550,
                                  "src": "8554:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 580,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "availableAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3806,
                                "src": "8554:23:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "src": "8532:45:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a6163746976656c792072656e746564",
                              "id": 582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8595:24:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2ef5838968650c7efefdf8d494bc0563f961ca6e785a771b24da2223f90dafab",
                                "typeString": "literal_string \"ReNFT::actively rented\""
                              },
                              "value": "ReNFT::actively rented"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2ef5838968650c7efefdf8d494bc0563f961ca6e785a771b24da2223f90dafab",
                                "typeString": "literal_string \"ReNFT::actively rented\""
                              }
                            ],
                            "id": 576,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8507:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8507:126:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 584,
                        "nodeType": "ExpressionStatement",
                        "src": "8507:126:15"
                      },
                      {
                        "expression": {
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 585,
                              "name": "lentAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "8647:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 590,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 586,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 516,
                                "src": "8659:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 587,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 497,
                                  "src": "8663:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 588,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "left",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3755,
                                "src": "8663:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8659:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8647:24:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 591,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 550,
                              "src": "8674:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            "id": 592,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lendAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3804,
                            "src": "8674:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "8647:45:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 594,
                        "nodeType": "ExpressionStatement",
                        "src": "8647:45:15"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 598,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 497,
                                  "src": "8730:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 599,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendingID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3779,
                                "src": "8730:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 601,
                              "indexExpression": {
                                "id": 600,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 516,
                                "src": "8743:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8730:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 604,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8754:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 605,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "8754:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 603,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8747:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": {
                                  "id": 602,
                                  "name": "uint32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8747:6:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8747:23:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 595,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3922,
                              "src": "8711:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$3922_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "StopLend",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3738,
                            "src": "8711:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$returns$__$",
                              "typeString": "function (uint256,uint32)"
                            }
                          },
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8711:60:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 608,
                        "nodeType": "EmitStatement",
                        "src": "8706:65:15"
                      },
                      {
                        "expression": {
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "8785:34:15",
                          "subExpression": {
                            "baseExpression": {
                              "id": 609,
                              "name": "lendings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "8792:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3810_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                              }
                            },
                            "id": 611,
                            "indexExpression": {
                              "id": 610,
                              "name": "lendingIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 528,
                              "src": "8801:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8792:27:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3810_storage",
                              "typeString": "struct IRegistry.Lending storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 613,
                        "nodeType": "ExpressionStatement",
                        "src": "8785:34:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 520,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 516,
                      "src": "7944:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 521,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "7948:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 522,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3757,
                      "src": "7948:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7944:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 615,
                  "initializationExpression": {
                    "assignments": [
                      516
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 516,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7931:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 615,
                        "src": "7923:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 515,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7923:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 519,
                    "initialValue": {
                      "expression": {
                        "id": 517,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "7935:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3755,
                      "src": "7935:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7923:19:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7958:3:15",
                      "subExpression": {
                        "id": 524,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "7958:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 526,
                    "nodeType": "ExpressionStatement",
                    "src": "7958:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "7918:912:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 617,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "8865:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 620,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8889:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Registry_$2496",
                              "typeString": "contract Registry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Registry_$2496",
                              "typeString": "contract Registry"
                            }
                          ],
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8881:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 618,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8881:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8881:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 622,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8908:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8908:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 625,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "8941:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 626,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3767,
                            "src": "8941:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 627,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "8953:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 628,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3755,
                            "src": "8953:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 629,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "8962:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 630,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "right",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3757,
                            "src": "8962:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8972:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 624,
                          "name": "sliceArr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2028,
                          "src": "8932:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory,uint256,uint256,uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8932:42:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 634,
                            "name": "lentAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 504,
                            "src": "8997:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 635,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "9010:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 636,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3755,
                            "src": "9010:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 637,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "9019:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 638,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "right",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3757,
                            "src": "9019:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 639,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "9029:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 640,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3755,
                            "src": "9029:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 633,
                          "name": "sliceArr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2028,
                          "src": "8988:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory,uint256,uint256,uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8988:49:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 616,
                      "name": "safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1588,
                      "src": "8839:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct IRegistry.CallData memory,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8839:208:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 643,
                  "nodeType": "ExpressionStatement",
                  "src": "8839:208:15"
                }
              ]
            },
            "id": 645,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleStopLend",
            "nameLocation": "7781:14:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "7822:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "7796:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 496,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 495,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3793,
                      "src": "7796:18:15"
                    },
                    "referencedDeclaration": 3793,
                    "src": "7796:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3793_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7795:30:15"
            },
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7834:0:15"
            },
            "scope": 2496,
            "src": "7772:1282:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 898,
              "nodeType": "Block",
              "src": "9118:2447:15",
              "statements": [
                {
                  "body": {
                    "id": 896,
                    "nodeType": "Block",
                    "src": "9173:2386:15",
                    "statements": [
                      {
                        "assignments": [
                          664
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 664,
                            "mutability": "mutable",
                            "name": "lendingIdentifier",
                            "nameLocation": "9195:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 896,
                            "src": "9187:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 663,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9187:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 683,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 668,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 648,
                                      "src": "9280:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 669,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3764,
                                    "src": "9280:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 672,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 670,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 648,
                                      "src": "9294:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 671,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3755,
                                    "src": "9294:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9280:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 673,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 648,
                                      "src": "9324:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 674,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3767,
                                    "src": "9324:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 676,
                                  "indexExpression": {
                                    "id": 675,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 652,
                                    "src": "9335:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9324:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 677,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 648,
                                      "src": "9359:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 678,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lendingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3779,
                                    "src": "9359:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 680,
                                  "indexExpression": {
                                    "id": 679,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 652,
                                    "src": "9372:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9359:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 666,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "9242:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9242:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9242:150:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 665,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "9215:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9215:191:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9187:219:15"
                      },
                      {
                        "assignments": [
                          685
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 685,
                            "mutability": "mutable",
                            "name": "rentingIdentifier",
                            "nameLocation": "9428:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 896,
                            "src": "9420:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 684,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9420:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 701,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 689,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 648,
                                      "src": "9513:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 690,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3764,
                                    "src": "9513:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 693,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 691,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 648,
                                      "src": "9527:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 692,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3755,
                                    "src": "9527:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9513:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 694,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 648,
                                      "src": "9557:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 695,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3767,
                                    "src": "9557:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 697,
                                  "indexExpression": {
                                    "id": 696,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 652,
                                    "src": "9568:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9557:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 698,
                                  "name": "rentingID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "9592:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 687,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "9475:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9475:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9475:144:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 686,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "9448:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9448:185:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9420:213:15"
                      },
                      {
                        "assignments": [
                          706
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 706,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "9673:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 896,
                            "src": "9647:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 705,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 704,
                                "name": "IRegistry.Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3810,
                                "src": "9647:17:15"
                              },
                              "referencedDeclaration": 3810,
                              "src": "9647:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 710,
                        "initialValue": {
                          "baseExpression": {
                            "id": 707,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "9683:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3810_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 709,
                          "indexExpression": {
                            "id": 708,
                            "name": "lendingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 664,
                            "src": "9692:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9683:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3810_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9647:63:15"
                      },
                      {
                        "assignments": [
                          715
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 715,
                            "mutability": "mutable",
                            "name": "renting",
                            "nameLocation": "9750:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 896,
                            "src": "9724:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                              "typeString": "struct IRegistry.Renting"
                            },
                            "typeName": {
                              "id": 714,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 713,
                                "name": "IRegistry.Renting",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3819,
                                "src": "9724:17:15"
                              },
                              "referencedDeclaration": 3819,
                              "src": "9724:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 719,
                        "initialValue": {
                          "baseExpression": {
                            "id": 716,
                            "name": "rentings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "9760:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$3819_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                            }
                          },
                          "id": 718,
                          "indexExpression": {
                            "id": 717,
                            "name": "rentingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 685,
                            "src": "9769:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9760:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3819_storage",
                            "typeString": "struct IRegistry.Renting storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9724:63:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 721,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 706,
                              "src": "9817:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 720,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2116,
                              2172
                            ],
                            "referencedDeclaration": 2116,
                            "src": "9801:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$3810_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9801:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 723,
                        "nodeType": "ExpressionStatement",
                        "src": "9801:24:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 725,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 715,
                              "src": "9852:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            ],
                            "id": 724,
                            "name": "ensureIsNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2088,
                              2144
                            ],
                            "referencedDeclaration": 2144,
                            "src": "9839:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$3819_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Renting memory) pure"
                            }
                          },
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9839:21:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 727,
                        "nodeType": "ExpressionStatement",
                        "src": "9839:21:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 729,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 706,
                              "src": "9891:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            {
                              "id": 730,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 648,
                              "src": "9900:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            {
                              "id": 731,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 652,
                              "src": "9904:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 732,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9907:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9907:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              },
                              {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 728,
                            "name": "ensureIsRentable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2323,
                            "src": "9874:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$3810_memory_ptr_$_t_struct$_CallData_$3793_memory_ptr_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory,struct IRegistry.CallData memory,uint256,address) pure"
                            }
                          },
                          "id": 734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9874:44:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 735,
                        "nodeType": "ExpressionStatement",
                        "src": "9874:44:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_NFTStandard_$3753",
                                "typeString": "enum IRegistry.NFTStandard"
                              },
                              "id": 743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 737,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 648,
                                    "src": "9957:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 738,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3761,
                                  "src": "9957:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                                    "typeString": "enum IRegistry.NFTStandard[] memory"
                                  }
                                },
                                "id": 740,
                                "indexExpression": {
                                  "id": 739,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 652,
                                  "src": "9972:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9957:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$3753",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 741,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 706,
                                  "src": "9978:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 742,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftStandard",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3796,
                                "src": "9978:19:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$3753",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "src": "9957:40:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a696e76616c6964206e6674207374616e64617264",
                              "id": 744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10015:29:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              },
                              "value": "ReNFT::invalid nft standard"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              }
                            ],
                            "id": 736,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9932:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9932:126:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 746,
                        "nodeType": "ExpressionStatement",
                        "src": "9932:126:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 748,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 648,
                                    "src": "10097:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 749,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rentAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3788,
                                  "src": "10097:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 751,
                                "indexExpression": {
                                  "id": 750,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 652,
                                  "src": "10111:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10097:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 752,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 706,
                                  "src": "10117:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 753,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "availableAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3806,
                                "src": "10117:23:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "src": "10097:43:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a696e76616c69642072656e7420616d6f756e74",
                              "id": 755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10158:28:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_289f2ee4b6fe280149d7a3a54002c0794b4fb41f312f746fa1a3070143a3c53c",
                                "typeString": "literal_string \"ReNFT::invalid rent amount\""
                              },
                              "value": "ReNFT::invalid rent amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_289f2ee4b6fe280149d7a3a54002c0794b4fb41f312f746fa1a3070143a3c53c",
                                "typeString": "literal_string \"ReNFT::invalid rent amount\""
                              }
                            ],
                            "id": 747,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10072:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10072:128:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 757,
                        "nodeType": "ExpressionStatement",
                        "src": "10072:128:15"
                      },
                      {
                        "assignments": [
                          759
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 759,
                            "mutability": "mutable",
                            "name": "paymentTokenIx",
                            "nameLocation": "10220:14:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 896,
                            "src": "10214:20:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 758,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "10214:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 765,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 762,
                                "name": "lending",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 706,
                                "src": "10243:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                  "typeString": "struct IRegistry.Lending storage pointer"
                                }
                              },
                              "id": 763,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "paymentToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3809,
                              "src": "10243:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PaymentToken_$4368",
                                "typeString": "enum IResolver.PaymentToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_PaymentToken_$4368",
                                "typeString": "enum IResolver.PaymentToken"
                              }
                            ],
                            "id": 761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10237:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 760,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "10237:5:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10237:27:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10214:50:15"
                      },
                      {
                        "assignments": [
                          767
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 767,
                            "mutability": "mutable",
                            "name": "paymentToken",
                            "nameLocation": "10286:12:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 896,
                            "src": "10278:20:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 766,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10278:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 772,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 770,
                              "name": "paymentTokenIx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "10326:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "expression": {
                              "id": 768,
                              "name": "resolver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "10301:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IResolver_$4383",
                                "typeString": "contract IResolver"
                              }
                            },
                            "id": 769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPaymentToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4375,
                            "src": "10301:24:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_address_$",
                              "typeString": "function (uint8) view external returns (address)"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10301:40:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10278:63:15"
                      },
                      {
                        "assignments": [
                          774
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 774,
                            "mutability": "mutable",
                            "name": "decimals",
                            "nameLocation": "10363:8:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 896,
                            "src": "10355:16:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 773,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10355:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 780,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 776,
                                  "name": "paymentToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 767,
                                  "src": "10380:12:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 775,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3249,
                                "src": "10374:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$3249_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10374:19:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3249",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2778,
                            "src": "10374:28:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                              "typeString": "function () view external returns (uint8)"
                            }
                          },
                          "id": 779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10374:30:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10355:49:15"
                      },
                      {
                        "id": 825,
                        "nodeType": "Block",
                        "src": "10418:460:15",
                        "statements": [
                          {
                            "assignments": [
                              782
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 782,
                                "mutability": "mutable",
                                "name": "scale",
                                "nameLocation": "10444:5:15",
                                "nodeType": "VariableDeclaration",
                                "scope": 825,
                                "src": "10436:13:15",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 781,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10436:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 786,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 783,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10452:2:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "id": 784,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 774,
                                "src": "10456:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10452:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "10436:28:15"
                          },
                          {
                            "assignments": [
                              788
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 788,
                                "mutability": "mutable",
                                "name": "rentPrice",
                                "nameLocation": "10490:9:15",
                                "nodeType": "VariableDeclaration",
                                "scope": 825,
                                "src": "10482:17:15",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 787,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10482:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 804,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 789,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 648,
                                      "src": "10502:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 790,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rentAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3788,
                                    "src": "10502:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 792,
                                  "indexExpression": {
                                    "id": 791,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 652,
                                    "src": "10516:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10502:16:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 793,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 648,
                                      "src": "10541:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 794,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rentDuration",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3785,
                                    "src": "10541:15:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                      "typeString": "uint8[] memory"
                                    }
                                  },
                                  "id": 796,
                                  "indexExpression": {
                                    "id": 795,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 652,
                                    "src": "10557:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10541:18:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "10502:57:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 799,
                                      "name": "lending",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 706,
                                      "src": "10594:7:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                        "typeString": "struct IRegistry.Lending storage pointer"
                                      }
                                    },
                                    "id": 800,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "dailyRentPrice",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3802,
                                    "src": "10594:22:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 801,
                                    "name": "scale",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 782,
                                    "src": "10618:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 798,
                                  "name": "unpackPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1978,
                                  "src": "10582:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes4_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (bytes4,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10582:42:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10502:122:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "10482:142:15"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 808,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 806,
                                    "name": "rentPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 788,
                                    "src": "10650:9:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 807,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10662:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "10650:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "52654e46543a3a72656e74207072696365206973207a65726f",
                                  "id": 809,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10665:27:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                                    "typeString": "literal_string \"ReNFT::rent price is zero\""
                                  },
                                  "value": "ReNFT::rent price is zero"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                                    "typeString": "literal_string \"ReNFT::rent price is zero\""
                                  }
                                ],
                                "id": 805,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "10642:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10642:51:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 811,
                            "nodeType": "ExpressionStatement",
                            "src": "10642:51:15"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 816,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "10769:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 817,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "10769:10:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 820,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "10809:4:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Registry_$2496",
                                        "typeString": "contract Registry"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Registry_$2496",
                                        "typeString": "contract Registry"
                                      }
                                    ],
                                    "id": 819,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10801:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 818,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10801:7:15",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 821,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10801:13:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 822,
                                  "name": "rentPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 788,
                                  "src": "10836:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 813,
                                      "name": "paymentToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 767,
                                      "src": "10717:12:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 812,
                                    "name": "ERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3249,
                                    "src": "10711:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC20_$3249_$",
                                      "typeString": "type(contract ERC20)"
                                    }
                                  },
                                  "id": 814,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10711:19:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$3249",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "safeTransferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3384,
                                "src": "10711:36:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3327_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3327_$",
                                  "typeString": "function (contract IERC20,address,address,uint256)"
                                }
                              },
                              "id": 823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10711:152:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 824,
                            "nodeType": "ExpressionStatement",
                            "src": "10711:152:15"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 826,
                              "name": "rentings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "10891:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$3819_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                              }
                            },
                            "id": 828,
                            "indexExpression": {
                              "id": 827,
                              "name": "rentingIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 685,
                              "src": "10900:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10891:27:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3819_storage",
                              "typeString": "struct IRegistry.Renting storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 833,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "10980:3:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 834,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "10980:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 832,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10972:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 831,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10972:8:15",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10972:19:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 838,
                                        "name": "cd",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 648,
                                        "src": "11028:2:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                          "typeString": "struct IRegistry.CallData memory"
                                        }
                                      },
                                      "id": 839,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "rentAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3788,
                                      "src": "11028:13:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 841,
                                    "indexExpression": {
                                      "id": 840,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 652,
                                      "src": "11042:1:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11028:16:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 837,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11021:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint16_$",
                                    "typeString": "type(uint16)"
                                  },
                                  "typeName": {
                                    "id": 836,
                                    "name": "uint16",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11021:6:15",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11021:24:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 843,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 648,
                                    "src": "11077:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 844,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rentDuration",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3785,
                                  "src": "11077:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                    "typeString": "uint8[] memory"
                                  }
                                },
                                "id": 846,
                                "indexExpression": {
                                  "id": 845,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 652,
                                  "src": "11093:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11077:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 849,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "11130:5:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 850,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "11130:15:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 848,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11123:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint32_$",
                                    "typeString": "type(uint32)"
                                  },
                                  "typeName": {
                                    "id": 847,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11123:6:15",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 851,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11123:23:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "expression": {
                                "id": 829,
                                "name": "IRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3922,
                                "src": "10921:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRegistry_$3922_$",
                                  "typeString": "type(contract IRegistry)"
                                }
                              },
                              "id": 830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Renting",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3819,
                              "src": "10921:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Renting_$3819_storage_ptr_$",
                                "typeString": "type(struct IRegistry.Renting storage pointer)"
                              }
                            },
                            "id": 852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "renterAddress",
                              "rentAmount",
                              "rentDuration",
                              "rentedAt"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "10921:240:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "src": "10891:270:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3819_storage",
                            "typeString": "struct IRegistry.Renting storage ref"
                          }
                        },
                        "id": 854,
                        "nodeType": "ExpressionStatement",
                        "src": "10891:270:15"
                      },
                      {
                        "expression": {
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 855,
                                "name": "lendings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49,
                                "src": "11175:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3810_storage_$",
                                  "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                                }
                              },
                              "id": 857,
                              "indexExpression": {
                                "id": 856,
                                "name": "lendingIdentifier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 664,
                                "src": "11184:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11175:27:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage",
                                "typeString": "struct IRegistry.Lending storage ref"
                              }
                            },
                            "id": 858,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "availableAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3806,
                            "src": "11175:43:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 861,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 648,
                                    "src": "11246:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 862,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rentAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3788,
                                  "src": "11246:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 864,
                                "indexExpression": {
                                  "id": 863,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 652,
                                  "src": "11260:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11246:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11222:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint16_$",
                                "typeString": "type(uint16)"
                              },
                              "typeName": {
                                "id": 859,
                                "name": "uint16",
                                "nodeType": "ElementaryTypeName",
                                "src": "11222:6:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11222:54:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "11175:101:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 867,
                        "nodeType": "ExpressionStatement",
                        "src": "11175:101:15"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 871,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11327:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11327:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 873,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 648,
                                  "src": "11355:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 874,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendingID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3779,
                                "src": "11355:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 876,
                              "indexExpression": {
                                "id": 875,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 652,
                                "src": "11368:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11355:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 877,
                              "name": "rentingID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "11388:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 880,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 648,
                                      "src": "11422:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 881,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rentAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3788,
                                    "src": "11422:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 883,
                                  "indexExpression": {
                                    "id": 882,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 652,
                                    "src": "11436:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11422:16:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11415:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint16_$",
                                  "typeString": "type(uint16)"
                                },
                                "typeName": {
                                  "id": 878,
                                  "name": "uint16",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11415:6:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 884,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11415:24:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 885,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 648,
                                  "src": "11457:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 886,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rentDuration",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3785,
                                "src": "11457:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                  "typeString": "uint8[] memory"
                                }
                              },
                              "id": 888,
                              "indexExpression": {
                                "id": 887,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 652,
                                "src": "11473:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11457:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "expression": {
                                "id": 889,
                                "name": "renting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 715,
                                "src": "11493:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                  "typeString": "struct IRegistry.Renting storage pointer"
                                }
                              },
                              "id": 890,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rentedAt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3816,
                              "src": "11493:16:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 868,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3922,
                              "src": "11295:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$3922_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Rent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3732,
                            "src": "11295:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint16_$_t_uint8_$_t_uint32_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint16,uint8,uint32)"
                            }
                          },
                          "id": 891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11295:228:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 892,
                        "nodeType": "EmitStatement",
                        "src": "11290:233:15"
                      },
                      {
                        "expression": {
                          "id": 894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "11537:11:15",
                          "subExpression": {
                            "id": 893,
                            "name": "rentingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "11537:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 895,
                        "nodeType": "ExpressionStatement",
                        "src": "11537:11:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 656,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 652,
                      "src": "9154:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 657,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "9158:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 658,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3757,
                      "src": "9158:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9154:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 897,
                  "initializationExpression": {
                    "assignments": [
                      652
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 652,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9141:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 897,
                        "src": "9133:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 651,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9133:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 655,
                    "initialValue": {
                      "expression": {
                        "id": 653,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "9145:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 654,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3755,
                      "src": "9145:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9133:19:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9168:3:15",
                      "subExpression": {
                        "id": 660,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 652,
                        "src": "9168:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 662,
                    "nodeType": "ExpressionStatement",
                    "src": "9168:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "9128:2431:15"
                }
              ]
            },
            "id": 899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleRent",
            "nameLocation": "9069:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 648,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "9106:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 899,
                  "src": "9080:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 647,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 646,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3793,
                      "src": "9080:18:15"
                    },
                    "referencedDeclaration": 3793,
                    "src": "9080:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3793_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9079:30:15"
            },
            "returnParameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9118:0:15"
            },
            "scope": 2496,
            "src": "9060:2505:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1056,
              "nodeType": "Block",
              "src": "11633:1471:15",
              "statements": [
                {
                  "body": {
                    "id": 1054,
                    "nodeType": "Block",
                    "src": "11688:1410:15",
                    "statements": [
                      {
                        "assignments": [
                          918
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 918,
                            "mutability": "mutable",
                            "name": "lendingIdentifier",
                            "nameLocation": "11710:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1054,
                            "src": "11702:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 917,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "11702:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 937,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 922,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 902,
                                      "src": "11795:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 923,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3764,
                                    "src": "11795:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 926,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 924,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 902,
                                      "src": "11809:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 925,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3755,
                                    "src": "11809:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11795:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 927,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 902,
                                      "src": "11839:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 928,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3767,
                                    "src": "11839:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 930,
                                  "indexExpression": {
                                    "id": 929,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 906,
                                    "src": "11850:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11839:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 931,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 902,
                                      "src": "11874:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 932,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lendingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3779,
                                    "src": "11874:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 934,
                                  "indexExpression": {
                                    "id": 933,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 906,
                                    "src": "11887:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11874:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 920,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "11757:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "11757:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11757:150:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 919,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "11730:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11730:191:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11702:219:15"
                      },
                      {
                        "assignments": [
                          939
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 939,
                            "mutability": "mutable",
                            "name": "rentingIdentifier",
                            "nameLocation": "11943:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1054,
                            "src": "11935:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 938,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "11935:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 958,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 943,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 902,
                                      "src": "12028:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 944,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3764,
                                    "src": "12028:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 947,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 945,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 902,
                                      "src": "12042:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 946,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3755,
                                    "src": "12042:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12028:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 948,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 902,
                                      "src": "12072:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 949,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3767,
                                    "src": "12072:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 951,
                                  "indexExpression": {
                                    "id": 950,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 906,
                                    "src": "12083:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12072:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 952,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 902,
                                      "src": "12107:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 953,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rentingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3782,
                                    "src": "12107:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 955,
                                  "indexExpression": {
                                    "id": 954,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 906,
                                    "src": "12120:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12107:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 941,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "11990:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 942,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "11990:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11990:150:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 940,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "11963:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11963:191:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11935:219:15"
                      },
                      {
                        "assignments": [
                          963
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 963,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "12194:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1054,
                            "src": "12168:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 962,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 961,
                                "name": "IRegistry.Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3810,
                                "src": "12168:17:15"
                              },
                              "referencedDeclaration": 3810,
                              "src": "12168:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 967,
                        "initialValue": {
                          "baseExpression": {
                            "id": 964,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "12204:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3810_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 966,
                          "indexExpression": {
                            "id": 965,
                            "name": "lendingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 918,
                            "src": "12213:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12204:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3810_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12168:63:15"
                      },
                      {
                        "assignments": [
                          972
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 972,
                            "mutability": "mutable",
                            "name": "renting",
                            "nameLocation": "12271:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1054,
                            "src": "12245:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                              "typeString": "struct IRegistry.Renting"
                            },
                            "typeName": {
                              "id": 971,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 970,
                                "name": "IRegistry.Renting",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3819,
                                "src": "12245:17:15"
                              },
                              "referencedDeclaration": 3819,
                              "src": "12245:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 976,
                        "initialValue": {
                          "baseExpression": {
                            "id": 973,
                            "name": "rentings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "12281:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$3819_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                            }
                          },
                          "id": 975,
                          "indexExpression": {
                            "id": 974,
                            "name": "rentingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 939,
                            "src": "12290:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12281:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3819_storage",
                            "typeString": "struct IRegistry.Renting storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12245:63:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 978,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 963,
                              "src": "12338:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 977,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2116,
                              2172
                            ],
                            "referencedDeclaration": 2116,
                            "src": "12322:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$3810_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12322:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 980,
                        "nodeType": "ExpressionStatement",
                        "src": "12322:24:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 982,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 972,
                              "src": "12376:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            ],
                            "id": 981,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2116,
                              2172
                            ],
                            "referencedDeclaration": 2172,
                            "src": "12360:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$3819_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Renting memory) pure"
                            }
                          },
                          "id": 983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12360:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 984,
                        "nodeType": "ExpressionStatement",
                        "src": "12360:24:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 986,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 972,
                              "src": "12417:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            {
                              "expression": {
                                "id": 987,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12426:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12426:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 989,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "12438:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "12438:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 985,
                            "name": "ensureIsReturnable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2351,
                            "src": "12398:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$3819_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (struct IRegistry.Renting memory,address,uint256) pure"
                            }
                          },
                          "id": 991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12398:56:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 992,
                        "nodeType": "ExpressionStatement",
                        "src": "12398:56:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_NFTStandard_$3753",
                                "typeString": "enum IRegistry.NFTStandard"
                              },
                              "id": 1000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 994,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 902,
                                    "src": "12493:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 995,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3761,
                                  "src": "12493:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                                    "typeString": "enum IRegistry.NFTStandard[] memory"
                                  }
                                },
                                "id": 997,
                                "indexExpression": {
                                  "id": 996,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 906,
                                  "src": "12508:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12493:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$3753",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 998,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 963,
                                  "src": "12514:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 999,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftStandard",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3796,
                                "src": "12514:19:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$3753",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "src": "12493:40:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a696e76616c6964206e6674207374616e64617264",
                              "id": 1001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12551:29:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              },
                              "value": "ReNFT::invalid nft standard"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              }
                            ],
                            "id": 993,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12468:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12468:126:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1003,
                        "nodeType": "ExpressionStatement",
                        "src": "12468:126:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              "id": 1009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1005,
                                  "name": "renting",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 972,
                                  "src": "12633:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                    "typeString": "struct IRegistry.Renting storage pointer"
                                  }
                                },
                                "id": 1006,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rentAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3818,
                                "src": "12633:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1007,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 963,
                                  "src": "12655:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 1008,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3804,
                                "src": "12655:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "src": "12633:40:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a637269746963616c206572726f72",
                              "id": 1010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12691:23:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d6f1984363b73db9750fba0dec0d544ce17b2982d6dbdcc9dc348e2b30cda508",
                                "typeString": "literal_string \"ReNFT::critical error\""
                              },
                              "value": "ReNFT::critical error"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d6f1984363b73db9750fba0dec0d544ce17b2982d6dbdcc9dc348e2b30cda508",
                                "typeString": "literal_string \"ReNFT::critical error\""
                              }
                            ],
                            "id": 1004,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12608:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12608:120:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1012,
                        "nodeType": "ExpressionStatement",
                        "src": "12608:120:15"
                      },
                      {
                        "assignments": [
                          1014
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1014,
                            "mutability": "mutable",
                            "name": "secondsSinceRentStart",
                            "nameLocation": "12750:21:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1054,
                            "src": "12742:29:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1013,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12742:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1020,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1015,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "12774:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "12774:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 1017,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 972,
                              "src": "12792:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            "id": 1018,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3816,
                            "src": "12792:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "12774:34:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12742:66:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1022,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 963,
                              "src": "12841:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            {
                              "id": 1023,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 972,
                              "src": "12850:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            {
                              "id": 1024,
                              "name": "secondsSinceRentStart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1014,
                              "src": "12859:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              },
                              {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1021,
                            "name": "distributePayments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1438,
                            "src": "12822:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Lending_$3810_memory_ptr_$_t_struct$_Renting_$3819_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory,struct IRegistry.Renting memory,uint256)"
                            }
                          },
                          "id": 1025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12822:59:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1026,
                        "nodeType": "ExpressionStatement",
                        "src": "12822:59:15"
                      },
                      {
                        "expression": {
                          "id": 1033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1027,
                                "name": "lendings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49,
                                "src": "12895:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3810_storage_$",
                                  "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                                }
                              },
                              "id": 1029,
                              "indexExpression": {
                                "id": 1028,
                                "name": "lendingIdentifier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 918,
                                "src": "12904:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12895:27:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage",
                                "typeString": "struct IRegistry.Lending storage ref"
                              }
                            },
                            "id": 1030,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "availableAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3806,
                            "src": "12895:43:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1031,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 972,
                              "src": "12942:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            "id": 1032,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3818,
                            "src": "12942:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "12895:65:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1034,
                        "nodeType": "ExpressionStatement",
                        "src": "12895:65:15"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1038,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 902,
                                  "src": "12998:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1039,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rentingID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3782,
                                "src": "12998:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1041,
                              "indexExpression": {
                                "id": 1040,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 906,
                                "src": "13011:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12998:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1044,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "13022:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1045,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "13022:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13015:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": {
                                  "id": 1042,
                                  "name": "uint32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13015:6:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13015:23:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 1035,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3922,
                              "src": "12979:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$3922_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 1037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "StopRent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3744,
                            "src": "12979:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$returns$__$",
                              "typeString": "function (uint256,uint32)"
                            }
                          },
                          "id": 1047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12979:60:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1048,
                        "nodeType": "EmitStatement",
                        "src": "12974:65:15"
                      },
                      {
                        "expression": {
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "13053:34:15",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1049,
                              "name": "rentings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "13060:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$3819_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                              }
                            },
                            "id": 1051,
                            "indexExpression": {
                              "id": 1050,
                              "name": "rentingIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 939,
                              "src": "13069:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13060:27:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3819_storage",
                              "typeString": "struct IRegistry.Renting storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1053,
                        "nodeType": "ExpressionStatement",
                        "src": "13053:34:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 910,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 906,
                      "src": "11669:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 911,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 902,
                        "src": "11673:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 912,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3757,
                      "src": "11673:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11669:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1055,
                  "initializationExpression": {
                    "assignments": [
                      906
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 906,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11656:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 1055,
                        "src": "11648:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 905,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11648:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 909,
                    "initialValue": {
                      "expression": {
                        "id": 907,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 902,
                        "src": "11660:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 908,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3755,
                      "src": "11660:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11648:19:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11683:3:15",
                      "subExpression": {
                        "id": 914,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 906,
                        "src": "11683:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 916,
                    "nodeType": "ExpressionStatement",
                    "src": "11683:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "11643:1455:15"
                }
              ]
            },
            "id": 1057,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleStopRent",
            "nameLocation": "11580:14:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 902,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "11621:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "11595:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 901,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 900,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3793,
                      "src": "11595:18:15"
                    },
                    "referencedDeclaration": 3793,
                    "src": "11595:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3793_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11594:30:15"
            },
            "returnParameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11633:0:15"
            },
            "scope": 2496,
            "src": "11571:1533:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1182,
              "nodeType": "Block",
              "src": "13163:1114:15",
              "statements": [
                {
                  "body": {
                    "id": 1180,
                    "nodeType": "Block",
                    "src": "13218:1053:15",
                    "statements": [
                      {
                        "assignments": [
                          1076
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1076,
                            "mutability": "mutable",
                            "name": "lendingIdentifier",
                            "nameLocation": "13240:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1180,
                            "src": "13232:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1075,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "13232:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1095,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1080,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1060,
                                      "src": "13325:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1081,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3764,
                                    "src": "13325:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1084,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1082,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1060,
                                      "src": "13339:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1083,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3755,
                                    "src": "13339:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13325:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1085,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1060,
                                      "src": "13369:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1086,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3767,
                                    "src": "13369:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1088,
                                  "indexExpression": {
                                    "id": 1087,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1064,
                                    "src": "13380:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13369:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1089,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1060,
                                      "src": "13404:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1090,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lendingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3779,
                                    "src": "13404:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1092,
                                  "indexExpression": {
                                    "id": 1091,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1064,
                                    "src": "13417:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13404:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1078,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "13287:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1079,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "13287:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13287:150:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1077,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "13260:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13260:191:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13232:219:15"
                      },
                      {
                        "assignments": [
                          1097
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1097,
                            "mutability": "mutable",
                            "name": "rentingIdentifier",
                            "nameLocation": "13473:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1180,
                            "src": "13465:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1096,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "13465:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1116,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1101,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1060,
                                      "src": "13558:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1102,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3764,
                                    "src": "13558:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1105,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1103,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1060,
                                      "src": "13572:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1104,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3755,
                                    "src": "13572:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13558:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1106,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1060,
                                      "src": "13602:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1107,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3767,
                                    "src": "13602:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1109,
                                  "indexExpression": {
                                    "id": 1108,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1064,
                                    "src": "13613:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13602:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1110,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1060,
                                      "src": "13637:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1111,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rentingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3782,
                                    "src": "13637:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1113,
                                  "indexExpression": {
                                    "id": 1112,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1064,
                                    "src": "13650:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13637:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1099,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "13520:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "13520:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13520:150:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1098,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "13493:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13493:191:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13465:219:15"
                      },
                      {
                        "assignments": [
                          1121
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1121,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "13724:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1180,
                            "src": "13698:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 1120,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1119,
                                "name": "IRegistry.Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3810,
                                "src": "13698:17:15"
                              },
                              "referencedDeclaration": 3810,
                              "src": "13698:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1125,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1122,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "13734:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3810_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 1124,
                          "indexExpression": {
                            "id": 1123,
                            "name": "lendingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1076,
                            "src": "13743:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13734:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3810_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13698:63:15"
                      },
                      {
                        "assignments": [
                          1130
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1130,
                            "mutability": "mutable",
                            "name": "renting",
                            "nameLocation": "13801:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1180,
                            "src": "13775:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                              "typeString": "struct IRegistry.Renting"
                            },
                            "typeName": {
                              "id": 1129,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1128,
                                "name": "IRegistry.Renting",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3819,
                                "src": "13775:17:15"
                              },
                              "referencedDeclaration": 3819,
                              "src": "13775:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1134,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1131,
                            "name": "rentings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "13811:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$3819_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                            }
                          },
                          "id": 1133,
                          "indexExpression": {
                            "id": 1132,
                            "name": "rentingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1097,
                            "src": "13820:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13811:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3819_storage",
                            "typeString": "struct IRegistry.Renting storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13775:63:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1136,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1121,
                              "src": "13868:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 1135,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2116,
                              2172
                            ],
                            "referencedDeclaration": 2116,
                            "src": "13852:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$3810_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 1137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13852:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1138,
                        "nodeType": "ExpressionStatement",
                        "src": "13852:24:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1140,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "13906:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            ],
                            "id": 1139,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2116,
                              2172
                            ],
                            "referencedDeclaration": 2172,
                            "src": "13890:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$3819_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Renting memory) pure"
                            }
                          },
                          "id": 1141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13890:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1142,
                        "nodeType": "ExpressionStatement",
                        "src": "13890:24:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1144,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "13946:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            {
                              "expression": {
                                "id": 1145,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "13955:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "13955:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1143,
                            "name": "ensureIsClaimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2423,
                            "src": "13928:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$3819_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (struct IRegistry.Renting memory,uint256) pure"
                            }
                          },
                          "id": 1147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13928:43:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1148,
                        "nodeType": "ExpressionStatement",
                        "src": "13928:43:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1150,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1121,
                              "src": "14008:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            {
                              "id": 1151,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "14017:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              },
                              {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            ],
                            "id": 1149,
                            "name": "distributeClaimPayment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1527,
                            "src": "13985:22:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Lending_$3810_memory_ptr_$_t_struct$_Renting_$3819_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory,struct IRegistry.Renting memory)"
                            }
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13985:40:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1153,
                        "nodeType": "ExpressionStatement",
                        "src": "13985:40:15"
                      },
                      {
                        "expression": {
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1154,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1121,
                              "src": "14039:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            "id": 1156,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "availableAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3806,
                            "src": "14039:23:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1157,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "14066:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            "id": 1158,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3818,
                            "src": "14066:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "14039:45:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1160,
                        "nodeType": "ExpressionStatement",
                        "src": "14039:45:15"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1164,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1060,
                                  "src": "14142:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1165,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rentingID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3782,
                                "src": "14142:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1167,
                              "indexExpression": {
                                "id": 1166,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1064,
                                "src": "14155:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14142:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1170,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "14182:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1171,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "14182:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14175:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": {
                                  "id": 1168,
                                  "name": "uint32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14175:6:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14175:23:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 1161,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3922,
                              "src": "14103:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$3922_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 1163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "RentClaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3750,
                            "src": "14103:21:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$returns$__$",
                              "typeString": "function (uint256,uint32)"
                            }
                          },
                          "id": 1173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14103:109:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1174,
                        "nodeType": "EmitStatement",
                        "src": "14098:114:15"
                      },
                      {
                        "expression": {
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "14226:34:15",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1175,
                              "name": "rentings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "14233:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$3819_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                              }
                            },
                            "id": 1177,
                            "indexExpression": {
                              "id": 1176,
                              "name": "rentingIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1097,
                              "src": "14242:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14233:27:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3819_storage",
                              "typeString": "struct IRegistry.Renting storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1179,
                        "nodeType": "ExpressionStatement",
                        "src": "14226:34:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1068,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1064,
                      "src": "13199:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1069,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1060,
                        "src": "13203:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3757,
                      "src": "13203:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13199:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1181,
                  "initializationExpression": {
                    "assignments": [
                      1064
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1064,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13186:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 1181,
                        "src": "13178:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1063,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13178:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1067,
                    "initialValue": {
                      "expression": {
                        "id": 1065,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1060,
                        "src": "13190:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 1066,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3755,
                      "src": "13190:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13178:19:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13213:3:15",
                      "subExpression": {
                        "id": 1072,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "13213:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1074,
                    "nodeType": "ExpressionStatement",
                    "src": "13213:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "13173:1098:15"
                }
              ]
            },
            "id": 1183,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleClaimRent",
            "nameLocation": "13119:15:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1060,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "13151:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1183,
                  "src": "13135:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1059,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1058,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3793,
                      "src": "13135:8:15"
                    },
                    "referencedDeclaration": 3793,
                    "src": "13135:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3793_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13134:20:15"
            },
            "returnParameters": {
              "id": 1062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13163:0:15"
            },
            "scope": 2496,
            "src": "13110:1167:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1264,
              "nodeType": "Block",
              "src": "14590:484:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 1197,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "14608:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 1198,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3764,
                            "src": "14608:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "14608:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14631:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14608:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f206e667473",
                        "id": 1202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14634:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f52badcc8137d8c39ef98a7008358d0aa859956aee9d66c4c5a86a3863ba00c",
                          "typeString": "literal_string \"ReNFT::no nfts\""
                        },
                        "value": "ReNFT::no nfts"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f52badcc8137d8c39ef98a7008358d0aa859956aee9d66c4c5a86a3863ba00c",
                          "typeString": "literal_string \"ReNFT::no nfts\""
                        }
                      ],
                      "id": 1196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14600:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14600:51:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1204,
                  "nodeType": "ExpressionStatement",
                  "src": "14600:51:15"
                },
                {
                  "body": {
                    "id": 1258,
                    "nodeType": "Block",
                    "src": "14702:345:15",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1211,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1193,
                                      "src": "14738:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1212,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3764,
                                    "src": "14738:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1215,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1213,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1193,
                                      "src": "14752:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1214,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3755,
                                    "src": "14752:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14738:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1216,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1193,
                                      "src": "14764:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1217,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3764,
                                    "src": "14764:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1220,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1218,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1193,
                                      "src": "14778:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1219,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "right",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3757,
                                    "src": "14778:8:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14764:23:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "14738:49:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1222,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14737:51:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$3753",
                                  "typeString": "enum IRegistry.NFTStandard"
                                },
                                "id": 1231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1223,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1193,
                                      "src": "14809:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1224,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftStandard",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3761,
                                    "src": "14809:14:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                                      "typeString": "enum IRegistry.NFTStandard[] memory"
                                    }
                                  },
                                  "id": 1227,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1225,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1193,
                                      "src": "14824:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1226,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "right",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3757,
                                    "src": "14824:8:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14809:24:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_NFTStandard_$3753",
                                    "typeString": "enum IRegistry.NFTStandard"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 1228,
                                      "name": "IRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3922,
                                      "src": "14837:9:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IRegistry_$3922_$",
                                        "typeString": "type(contract IRegistry)"
                                      }
                                    },
                                    "id": 1229,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "NFTStandard",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3753,
                                    "src": "14837:21:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_NFTStandard_$3753_$",
                                      "typeString": "type(enum IRegistry.NFTStandard)"
                                    }
                                  },
                                  "id": 1230,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "E1155",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3752,
                                  "src": "14837:27:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_NFTStandard_$3753",
                                    "typeString": "enum IRegistry.NFTStandard"
                                  }
                                },
                                "src": "14809:55:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1232,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14808:57:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14737:128:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1256,
                          "nodeType": "Block",
                          "src": "14929:108:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1241,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1193,
                                    "src": "14955:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  ],
                                  "id": 1240,
                                  "name": "handler",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1190,
                                  "src": "14947:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$returns$__$",
                                    "typeString": "function (struct IRegistry.CallData memory)"
                                  }
                                },
                                "id": 1242,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14947:11:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1243,
                              "nodeType": "ExpressionStatement",
                              "src": "14947:11:15"
                            },
                            {
                              "expression": {
                                "id": 1249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1244,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1193,
                                    "src": "14976:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 1246,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "left",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3755,
                                  "src": "14976:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1247,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1193,
                                    "src": "14986:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 1248,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "right",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3757,
                                  "src": "14986:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14976:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1250,
                              "nodeType": "ExpressionStatement",
                              "src": "14976:18:15"
                            },
                            {
                              "expression": {
                                "id": 1254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "15012:10:15",
                                "subExpression": {
                                  "expression": {
                                    "id": 1251,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1193,
                                    "src": "15012:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 1253,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "right",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3757,
                                  "src": "15012:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1255,
                              "nodeType": "ExpressionStatement",
                              "src": "15012:10:15"
                            }
                          ]
                        },
                        "id": 1257,
                        "nodeType": "IfStatement",
                        "src": "14716:321:15",
                        "trueBody": {
                          "id": 1239,
                          "nodeType": "Block",
                          "src": "14880:43:15",
                          "statements": [
                            {
                              "expression": {
                                "id": 1237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "14898:10:15",
                                "subExpression": {
                                  "expression": {
                                    "id": 1234,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1193,
                                    "src": "14898:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 1236,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "right",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3757,
                                  "src": "14898:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1238,
                              "nodeType": "ExpressionStatement",
                              "src": "14898:10:15"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1205,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
                        "src": "14668:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 1206,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3757,
                      "src": "14668:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 1207,
                          "name": "cd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1193,
                          "src": "14680:2:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                            "typeString": "struct IRegistry.CallData memory"
                          }
                        },
                        "id": 1208,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3764,
                        "src": "14680:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14680:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14668:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1259,
                  "nodeType": "WhileStatement",
                  "src": "14661:386:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1261,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
                        "src": "15064:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 1260,
                      "name": "handler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "15056:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$returns$__$",
                        "typeString": "function (struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15056:11:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1263,
                  "nodeType": "ExpressionStatement",
                  "src": "15056:11:15"
                }
              ]
            },
            "id": 1265,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bundleCall",
            "nameLocation": "14474:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1190,
                  "mutability": "mutable",
                  "name": "handler",
                  "nameLocation": "14530:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "14494:43:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$returns$__$",
                    "typeString": "function (struct IRegistry.CallData)"
                  },
                  "typeName": {
                    "id": 1189,
                    "nodeType": "FunctionTypeName",
                    "parameterTypes": {
                      "id": 1187,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1186,
                          "mutability": "mutable",
                          "name": "",
                          "nameLocation": "-1:-1:-1",
                          "nodeType": "VariableDeclaration",
                          "scope": 1189,
                          "src": "14503:25:15",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                            "typeString": "struct IRegistry.CallData"
                          },
                          "typeName": {
                            "id": 1185,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1184,
                              "name": "IRegistry.CallData",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3793,
                              "src": "14503:18:15"
                            },
                            "referencedDeclaration": 3793,
                            "src": "14503:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CallData_$3793_storage_ptr",
                              "typeString": "struct IRegistry.CallData"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "14502:27:15"
                    },
                    "returnParameterTypes": {
                      "id": 1188,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "14530:0:15"
                    },
                    "src": "14494:43:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3793_memory_ptr_$returns$__$",
                      "typeString": "function (struct IRegistry.CallData)"
                    },
                    "visibility": "internal"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "14573:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1265,
                  "src": "14547:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1192,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1191,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3793,
                      "src": "14547:18:15"
                    },
                    "referencedDeclaration": 3793,
                    "src": "14547:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3793_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14484:97:15"
            },
            "returnParameters": {
              "id": 1195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14590:0:15"
            },
            "scope": 2496,
            "src": "14465:609:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1309,
              "nodeType": "Block",
              "src": "15201:237:15",
              "statements": [
                {
                  "expression": {
                    "id": 1279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1275,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1273,
                      "src": "15211:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1276,
                        "name": "rentAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1267,
                        "src": "15217:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 1277,
                        "name": "rentFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "15227:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15217:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15211:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1280,
                  "nodeType": "ExpressionStatement",
                  "src": "15211:23:15"
                },
                {
                  "expression": {
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1281,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1273,
                      "src": "15244:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "/=",
                    "rightHandSide": {
                      "hexValue": "3130303030",
                      "id": 1282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15251:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "15244:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1284,
                  "nodeType": "ExpressionStatement",
                  "src": "15244:12:15"
                },
                {
                  "assignments": [
                    1286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1286,
                      "mutability": "mutable",
                      "name": "paymentTokenIx",
                      "nameLocation": "15272:14:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1309,
                      "src": "15266:20:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1285,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "15266:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1291,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1289,
                        "name": "paymentToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1270,
                        "src": "15295:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PaymentToken_$4368",
                          "typeString": "enum IResolver.PaymentToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PaymentToken_$4368",
                          "typeString": "enum IResolver.PaymentToken"
                        }
                      ],
                      "id": 1288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "15289:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 1287,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "15289:5:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15289:19:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15266:42:15"
                },
                {
                  "assignments": [
                    1294
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1294,
                      "mutability": "mutable",
                      "name": "pmtToken",
                      "nameLocation": "15324:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1309,
                      "src": "15318:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3249",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1293,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1292,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3249,
                          "src": "15318:5:15"
                        },
                        "referencedDeclaration": 3249,
                        "src": "15318:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3249",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1301,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1298,
                            "name": "paymentTokenIx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1286,
                            "src": "15366:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "id": 1296,
                            "name": "resolver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "15341:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IResolver_$4383",
                              "typeString": "contract IResolver"
                            }
                          },
                          "id": 1297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPaymentToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4375,
                          "src": "15341:24:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_address_$",
                            "typeString": "function (uint8) view external returns (address)"
                          }
                        },
                        "id": 1299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15341:40:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1295,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3249,
                      "src": "15335:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$3249_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15335:47:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3249",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15318:64:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1305,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "15414:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1306,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1273,
                        "src": "15427:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1302,
                        "name": "pmtToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1294,
                        "src": "15392:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3249",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3358,
                      "src": "15392:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3327_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3327_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15392:39:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1308,
                  "nodeType": "ExpressionStatement",
                  "src": "15392:39:15"
                }
              ]
            },
            "id": 1310,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "takeFee",
            "nameLocation": "15089:7:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1267,
                  "mutability": "mutable",
                  "name": "rentAmt",
                  "nameLocation": "15105:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1310,
                  "src": "15097:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15097:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1270,
                  "mutability": "mutable",
                  "name": "paymentToken",
                  "nameLocation": "15137:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1310,
                  "src": "15114:35:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PaymentToken_$4368",
                    "typeString": "enum IResolver.PaymentToken"
                  },
                  "typeName": {
                    "id": 1269,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1268,
                      "name": "IResolver.PaymentToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4368,
                      "src": "15114:22:15"
                    },
                    "referencedDeclaration": 4368,
                    "src": "15114:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PaymentToken_$4368",
                      "typeString": "enum IResolver.PaymentToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15096:54:15"
            },
            "returnParameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1273,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "15192:3:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1310,
                  "src": "15184:11:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15184:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15183:13:15"
            },
            "scope": 2496,
            "src": "15080:358:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1437,
              "nodeType": "Block",
              "src": "15609:1061:15",
              "statements": [
                {
                  "assignments": [
                    1322
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1322,
                      "mutability": "mutable",
                      "name": "paymentTokenIx",
                      "nameLocation": "15625:14:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1437,
                      "src": "15619:20:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1321,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "15619:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1328,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1325,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1313,
                          "src": "15648:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1326,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3809,
                        "src": "15648:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PaymentToken_$4368",
                          "typeString": "enum IResolver.PaymentToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PaymentToken_$4368",
                          "typeString": "enum IResolver.PaymentToken"
                        }
                      ],
                      "id": 1324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "15642:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 1323,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "15642:5:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15642:27:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15619:50:15"
                },
                {
                  "assignments": [
                    1330
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1330,
                      "mutability": "mutable",
                      "name": "pmtToken",
                      "nameLocation": "15687:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1437,
                      "src": "15679:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1329,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15679:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1335,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1333,
                        "name": "paymentTokenIx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1322,
                        "src": "15723:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 1331,
                        "name": "resolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "15698:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IResolver_$4383",
                          "typeString": "contract IResolver"
                        }
                      },
                      "id": 1332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPaymentToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4375,
                      "src": "15698:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_address_$",
                        "typeString": "function (uint8) view external returns (address)"
                      }
                    },
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15698:40:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15679:59:15"
                },
                {
                  "assignments": [
                    1337
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1337,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "15756:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1437,
                      "src": "15748:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1336,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15748:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1343,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1339,
                            "name": "pmtToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1330,
                            "src": "15773:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1338,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3249,
                          "src": "15767:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3249_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15767:15:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3249",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2778,
                      "src": "15767:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 1342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15767:26:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15748:45:15"
                },
                {
                  "assignments": [
                    1345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1345,
                      "mutability": "mutable",
                      "name": "scale",
                      "nameLocation": "15811:5:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1437,
                      "src": "15803:13:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1344,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15803:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1349,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 1346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15819:2:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "id": 1347,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1337,
                      "src": "15823:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15819:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15803:28:15"
                },
                {
                  "assignments": [
                    1351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1351,
                      "mutability": "mutable",
                      "name": "rentPrice",
                      "nameLocation": "15849:9:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1437,
                      "src": "15841:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1350,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15841:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1360,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1352,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1316,
                        "src": "15861:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                          "typeString": "struct IRegistry.Renting memory"
                        }
                      },
                      "id": 1353,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3818,
                      "src": "15861:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1355,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1313,
                            "src": "15906:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 1356,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dailyRentPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3802,
                          "src": "15906:22:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "id": 1357,
                          "name": "scale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1345,
                          "src": "15930:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1354,
                        "name": "unpackPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1978,
                        "src": "15894:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes4_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (bytes4,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15894:42:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15861:75:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15841:95:15"
                },
                {
                  "assignments": [
                    1362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1362,
                      "mutability": "mutable",
                      "name": "totalRenterPmt",
                      "nameLocation": "15954:14:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1437,
                      "src": "15946:22:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1361,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15946:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1367,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1363,
                      "name": "rentPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1351,
                      "src": "15971:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "expression": {
                        "id": 1364,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1316,
                        "src": "15983:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                          "typeString": "struct IRegistry.Renting memory"
                        }
                      },
                      "id": 1365,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3814,
                      "src": "15983:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "15971:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15946:57:15"
                },
                {
                  "assignments": [
                    1369
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1369,
                      "mutability": "mutable",
                      "name": "sendLenderAmt",
                      "nameLocation": "16021:13:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1437,
                      "src": "16013:21:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1368,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16013:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1376,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1370,
                            "name": "secondsSinceRentStart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1318,
                            "src": "16038:21:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1371,
                            "name": "rentPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1351,
                            "src": "16062:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16038:33:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1373,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16037:35:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1374,
                      "name": "SECONDS_IN_DAY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "16087:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16037:64:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16013:88:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1378,
                          "name": "totalRenterPmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1362,
                          "src": "16119:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16136:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "16119:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a746f74616c2072656e746572207061796d656e74206973207a65726f",
                        "id": 1381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16139:37:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_713b468fd36252cd36d8daacefddd3e2dbbcb1889f7a036277ecfde7125b9fc9",
                          "typeString": "literal_string \"ReNFT::total renter payment is zero\""
                        },
                        "value": "ReNFT::total renter payment is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_713b468fd36252cd36d8daacefddd3e2dbbcb1889f7a036277ecfde7125b9fc9",
                          "typeString": "literal_string \"ReNFT::total renter payment is zero\""
                        }
                      ],
                      "id": 1377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16111:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16111:66:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1383,
                  "nodeType": "ExpressionStatement",
                  "src": "16111:66:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1385,
                          "name": "sendLenderAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1369,
                          "src": "16195:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16211:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "16195:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6c656e646572207061796d656e74206973207a65726f",
                        "id": 1388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16214:31:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab0b1c9d335b97dd1528f0261fe0ad80fa0e223ac5aa227d7542691d5f8f5a99",
                          "typeString": "literal_string \"ReNFT::lender payment is zero\""
                        },
                        "value": "ReNFT::lender payment is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab0b1c9d335b97dd1528f0261fe0ad80fa0e223ac5aa227d7542691d5f8f5a99",
                          "typeString": "literal_string \"ReNFT::lender payment is zero\""
                        }
                      ],
                      "id": 1384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16187:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16187:59:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1390,
                  "nodeType": "ExpressionStatement",
                  "src": "16187:59:15"
                },
                {
                  "assignments": [
                    1392
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1392,
                      "mutability": "mutable",
                      "name": "sendRenterAmt",
                      "nameLocation": "16264:13:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1437,
                      "src": "16256:21:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1391,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16256:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1396,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1393,
                      "name": "totalRenterPmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1362,
                      "src": "16280:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1394,
                      "name": "sendLenderAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1369,
                      "src": "16297:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16280:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16256:54:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1397,
                      "name": "rentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "16324:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16335:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "16324:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1413,
                  "nodeType": "IfStatement",
                  "src": "16320:145:15",
                  "trueBody": {
                    "id": 1412,
                    "nodeType": "Block",
                    "src": "16338:127:15",
                    "statements": [
                      {
                        "assignments": [
                          1401
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1401,
                            "mutability": "mutable",
                            "name": "takenFee",
                            "nameLocation": "16360:8:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1412,
                            "src": "16352:16:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1400,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16352:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1407,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1403,
                              "name": "sendLenderAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1369,
                              "src": "16379:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1404,
                                "name": "lending",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1313,
                                "src": "16394:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                                  "typeString": "struct IRegistry.Lending memory"
                                }
                              },
                              "id": 1405,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "paymentToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3809,
                              "src": "16394:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PaymentToken_$4368",
                                "typeString": "enum IResolver.PaymentToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_PaymentToken_$4368",
                                "typeString": "enum IResolver.PaymentToken"
                              }
                            ],
                            "id": 1402,
                            "name": "takeFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1310,
                            "src": "16371:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_PaymentToken_$4368_$returns$_t_uint256_$",
                              "typeString": "function (uint256,enum IResolver.PaymentToken) returns (uint256)"
                            }
                          },
                          "id": 1406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16371:44:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16352:63:15"
                      },
                      {
                        "expression": {
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1408,
                            "name": "sendLenderAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1369,
                            "src": "16429:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1409,
                            "name": "takenFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1401,
                            "src": "16446:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16429:25:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1411,
                        "nodeType": "ExpressionStatement",
                        "src": "16429:25:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1418,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1313,
                          "src": "16503:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1419,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3798,
                        "src": "16503:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1420,
                        "name": "sendLenderAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1369,
                        "src": "16526:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1415,
                            "name": "pmtToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1330,
                            "src": "16480:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1414,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3249,
                          "src": "16474:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3249_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16474:15:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3249",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3358,
                      "src": "16474:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3327_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3327_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16474:66:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1422,
                  "nodeType": "ExpressionStatement",
                  "src": "16474:66:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1423,
                      "name": "sendRenterAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1392,
                      "src": "16554:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16570:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "16554:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1436,
                  "nodeType": "IfStatement",
                  "src": "16550:114:15",
                  "trueBody": {
                    "id": 1435,
                    "nodeType": "Block",
                    "src": "16573:91:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1430,
                                "name": "renting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1316,
                                "src": "16616:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                                  "typeString": "struct IRegistry.Renting memory"
                                }
                              },
                              "id": 1431,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "renterAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3812,
                              "src": "16616:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 1432,
                              "name": "sendRenterAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1392,
                              "src": "16639:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1427,
                                  "name": "pmtToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1330,
                                  "src": "16593:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1426,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3249,
                                "src": "16587:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$3249_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 1428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16587:15:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3249",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3358,
                            "src": "16587:28:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3327_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3327_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16587:66:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1434,
                        "nodeType": "ExpressionStatement",
                        "src": "16587:66:15"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distributePayments",
            "nameLocation": "15453:18:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1313,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "15506:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1438,
                  "src": "15481:32:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 1312,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1311,
                      "name": "IRegistry.Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3810,
                      "src": "15481:17:15"
                    },
                    "referencedDeclaration": 3810,
                    "src": "15481:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1316,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "15548:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1438,
                  "src": "15523:32:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 1315,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1314,
                      "name": "IRegistry.Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3819,
                      "src": "15523:17:15"
                    },
                    "referencedDeclaration": 3819,
                    "src": "15523:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1318,
                  "mutability": "mutable",
                  "name": "secondsSinceRentStart",
                  "nameLocation": "15573:21:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1438,
                  "src": "15565:29:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15565:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15471:129:15"
            },
            "returnParameters": {
              "id": 1320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15609:0:15"
            },
            "scope": 2496,
            "src": "15444:1226:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1526,
              "nodeType": "Block",
              "src": "16806:683:15",
              "statements": [
                {
                  "assignments": [
                    1448
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1448,
                      "mutability": "mutable",
                      "name": "paymentTokenIx",
                      "nameLocation": "16822:14:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1526,
                      "src": "16816:20:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1447,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "16816:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1454,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1451,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1441,
                          "src": "16845:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1452,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3809,
                        "src": "16845:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PaymentToken_$4368",
                          "typeString": "enum IResolver.PaymentToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PaymentToken_$4368",
                          "typeString": "enum IResolver.PaymentToken"
                        }
                      ],
                      "id": 1450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "16839:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 1449,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "16839:5:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16839:27:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16816:50:15"
                },
                {
                  "assignments": [
                    1457
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1457,
                      "mutability": "mutable",
                      "name": "paymentToken",
                      "nameLocation": "16882:12:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1526,
                      "src": "16876:18:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3249",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1456,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1455,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3249,
                          "src": "16876:5:15"
                        },
                        "referencedDeclaration": 3249,
                        "src": "16876:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3249",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1464,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1461,
                            "name": "paymentTokenIx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1448,
                            "src": "16928:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "id": 1459,
                            "name": "resolver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "16903:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IResolver_$4383",
                              "typeString": "contract IResolver"
                            }
                          },
                          "id": 1460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPaymentToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4375,
                          "src": "16903:24:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_address_$",
                            "typeString": "function (uint8) view external returns (address)"
                          }
                        },
                        "id": 1462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16903:40:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1458,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3249,
                      "src": "16897:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$3249_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16897:47:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3249",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16876:68:15"
                },
                {
                  "assignments": [
                    1466
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1466,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "16962:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1526,
                      "src": "16954:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1465,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16954:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1472,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1468,
                            "name": "paymentToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1457,
                            "src": "16979:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$3249",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$3249",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1467,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3249,
                          "src": "16973:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3249_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16973:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3249",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2778,
                      "src": "16973:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 1471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16973:30:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16954:49:15"
                },
                {
                  "assignments": [
                    1474
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1474,
                      "mutability": "mutable",
                      "name": "scale",
                      "nameLocation": "17021:5:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1526,
                      "src": "17013:13:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1473,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17013:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1478,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 1475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17029:2:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "id": 1476,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1466,
                      "src": "17033:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17029:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17013:28:15"
                },
                {
                  "assignments": [
                    1480
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1480,
                      "mutability": "mutable",
                      "name": "rentPrice",
                      "nameLocation": "17059:9:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1526,
                      "src": "17051:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1479,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17051:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1489,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1481,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1444,
                        "src": "17071:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                          "typeString": "struct IRegistry.Renting memory"
                        }
                      },
                      "id": 1482,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3818,
                      "src": "17071:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1484,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1441,
                            "src": "17116:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 1485,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dailyRentPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3802,
                          "src": "17116:22:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        {
                          "id": 1486,
                          "name": "scale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1474,
                          "src": "17140:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1483,
                        "name": "unpackPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1978,
                        "src": "17104:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes4_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (bytes4,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17104:42:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17071:75:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17051:95:15"
                },
                {
                  "assignments": [
                    1491
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1491,
                      "mutability": "mutable",
                      "name": "finalAmt",
                      "nameLocation": "17164:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1526,
                      "src": "17156:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1490,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17156:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1496,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1492,
                      "name": "rentPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1480,
                      "src": "17175:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "expression": {
                        "id": 1493,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1444,
                        "src": "17187:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                          "typeString": "struct IRegistry.Renting memory"
                        }
                      },
                      "id": 1494,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3814,
                      "src": "17187:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "17175:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17156:51:15"
                },
                {
                  "assignments": [
                    1498
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1498,
                      "mutability": "mutable",
                      "name": "takenFee",
                      "nameLocation": "17225:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1526,
                      "src": "17217:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1497,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17217:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1500,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "17236:1:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17217:20:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1501,
                      "name": "rentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "17251:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17262:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17251:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1515,
                  "nodeType": "IfStatement",
                  "src": "17247:157:15",
                  "trueBody": {
                    "id": 1514,
                    "nodeType": "Block",
                    "src": "17265:139:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 1512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1504,
                            "name": "takenFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1498,
                            "src": "17279:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1506,
                                "name": "finalAmt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1491,
                                "src": "17315:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 1509,
                                    "name": "paymentTokenIx",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1448,
                                    "src": "17364:14:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1507,
                                    "name": "IResolver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4383,
                                    "src": "17341:9:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IResolver_$4383_$",
                                      "typeString": "type(contract IResolver)"
                                    }
                                  },
                                  "id": 1508,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "PaymentToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4368,
                                  "src": "17341:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PaymentToken_$4368_$",
                                    "typeString": "type(enum IResolver.PaymentToken)"
                                  }
                                },
                                "id": 1510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17341:38:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PaymentToken_$4368",
                                  "typeString": "enum IResolver.PaymentToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_enum$_PaymentToken_$4368",
                                  "typeString": "enum IResolver.PaymentToken"
                                }
                              ],
                              "id": 1505,
                              "name": "takeFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1310,
                              "src": "17290:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_PaymentToken_$4368_$returns$_t_uint256_$",
                                "typeString": "function (uint256,enum IResolver.PaymentToken) returns (uint256)"
                              }
                            },
                            "id": 1511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17290:103:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17279:114:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1513,
                        "nodeType": "ExpressionStatement",
                        "src": "17279:114:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1519,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1441,
                          "src": "17439:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1520,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3798,
                        "src": "17439:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1521,
                          "name": "finalAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1491,
                          "src": "17462:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1522,
                          "name": "takenFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1498,
                          "src": "17473:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17462:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1516,
                        "name": "paymentToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1457,
                        "src": "17413:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3249",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3358,
                      "src": "17413:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3327_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3327_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17413:69:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1525,
                  "nodeType": "ExpressionStatement",
                  "src": "17413:69:15"
                }
              ]
            },
            "id": 1527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distributeClaimPayment",
            "nameLocation": "16685:22:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1441,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "16742:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "16717:32:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 1440,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1439,
                      "name": "IRegistry.Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3810,
                      "src": "16717:17:15"
                    },
                    "referencedDeclaration": 3810,
                    "src": "16717:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1444,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "16784:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "16759:32:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 1443,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1442,
                      "name": "IRegistry.Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3819,
                      "src": "16759:17:15"
                    },
                    "referencedDeclaration": 3819,
                    "src": "16759:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16707:90:15"
            },
            "returnParameters": {
              "id": 1446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16806:0:15"
            },
            "scope": 2496,
            "src": "16676:813:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1587,
              "nodeType": "Block",
              "src": "17672:451:15",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_NFTStandard_$3753",
                      "typeString": "enum IRegistry.NFTStandard"
                    },
                    "id": 1551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 1543,
                          "name": "cd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1530,
                          "src": "17686:2:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                            "typeString": "struct IRegistry.CallData memory"
                          }
                        },
                        "id": 1544,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftStandard",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3761,
                        "src": "17686:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                          "typeString": "enum IRegistry.NFTStandard[] memory"
                        }
                      },
                      "id": 1547,
                      "indexExpression": {
                        "expression": {
                          "id": 1545,
                          "name": "cd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1530,
                          "src": "17701:2:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                            "typeString": "struct IRegistry.CallData memory"
                          }
                        },
                        "id": 1546,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "left",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3755,
                        "src": "17701:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "17686:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3753",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 1548,
                          "name": "IRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3922,
                          "src": "17713:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IRegistry_$3922_$",
                            "typeString": "type(contract IRegistry)"
                          }
                        },
                        "id": 1549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NFTStandard",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3753,
                        "src": "17713:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_NFTStandard_$3753_$",
                          "typeString": "type(enum IRegistry.NFTStandard)"
                        }
                      },
                      "id": 1550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "E721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3751,
                      "src": "17713:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3753",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "src": "17686:53:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1585,
                    "nodeType": "Block",
                    "src": "17909:208:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1578,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1532,
                              "src": "17995:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1579,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1534,
                              "src": "18017:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1580,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1537,
                              "src": "18037:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 1581,
                              "name": "lendAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1540,
                              "src": "18062:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 1582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18090:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1571,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1530,
                                      "src": "17932:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1572,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3764,
                                    "src": "17932:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1575,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1573,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1530,
                                      "src": "17946:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1574,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3755,
                                    "src": "17946:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "17932:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1570,
                                "name": "IERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2618,
                                "src": "17923:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$2618_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              },
                              "id": 1576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17923:32:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155_$2618",
                                "typeString": "contract IERC1155"
                              }
                            },
                            "id": 1577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeBatchTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2617,
                            "src": "17923:54:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external"
                            }
                          },
                          "id": 1583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17923:183:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1584,
                        "nodeType": "ExpressionStatement",
                        "src": "17923:183:15"
                      }
                    ]
                  },
                  "id": 1586,
                  "nodeType": "IfStatement",
                  "src": "17682:435:15",
                  "trueBody": {
                    "id": 1569,
                    "nodeType": "Block",
                    "src": "17741:162:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1560,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1532,
                              "src": "17817:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1561,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1534,
                              "src": "17839:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1562,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1530,
                                  "src": "17859:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1563,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3767,
                                "src": "17859:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1566,
                              "indexExpression": {
                                "expression": {
                                  "id": 1564,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1530,
                                  "src": "17870:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1565,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "left",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3755,
                                "src": "17870:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17859:19:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1553,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1530,
                                      "src": "17763:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1554,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3764,
                                    "src": "17763:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1557,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1555,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1530,
                                      "src": "17777:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1556,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3755,
                                    "src": "17777:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "17763:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1552,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3667,
                                "src": "17755:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$3667_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 1558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17755:31:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$3667",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 1559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3620,
                            "src": "17755:44:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 1567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17755:137:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1568,
                        "nodeType": "ExpressionStatement",
                        "src": "17755:137:15"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1588,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransfer",
            "nameLocation": "17504:12:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1530,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "17542:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1588,
                  "src": "17526:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1529,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1528,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3793,
                      "src": "17526:8:15"
                    },
                    "referencedDeclaration": 3793,
                    "src": "17526:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3793_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1532,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "17562:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1588,
                  "src": "17554:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17554:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1534,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "17584:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1588,
                  "src": "17576:10:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17576:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1537,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "17613:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1588,
                  "src": "17596:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1535,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "17596:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1536,
                    "nodeType": "ArrayTypeName",
                    "src": "17596:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1540,
                  "mutability": "mutable",
                  "name": "lendAmount",
                  "nameLocation": "17647:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1588,
                  "src": "17630:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1538,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "17630:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1539,
                    "nodeType": "ArrayTypeName",
                    "src": "17630:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17516:147:15"
            },
            "returnParameters": {
              "id": 1542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17672:0:15"
            },
            "scope": 2496,
            "src": "17495:628:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1653,
              "nodeType": "Block",
              "src": "18617:471:15",
              "statements": [
                {
                  "assignments": [
                    1612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1612,
                      "mutability": "mutable",
                      "name": "identifier",
                      "nameLocation": "18635:10:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1653,
                      "src": "18627:18:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1611,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "18627:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1621,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1616,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1590,
                            "src": "18688:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1617,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1592,
                            "src": "18700:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1618,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1594,
                            "src": "18709:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1614,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18671:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "18671:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18671:49:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1613,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "18648:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18648:82:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18627:103:15"
                },
                {
                  "assignments": [
                    1626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1626,
                      "mutability": "mutable",
                      "name": "lending",
                      "nameLocation": "18766:7:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1653,
                      "src": "18740:33:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                        "typeString": "struct IRegistry.Lending"
                      },
                      "typeName": {
                        "id": 1625,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1624,
                          "name": "IRegistry.Lending",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3810,
                          "src": "18740:17:15"
                        },
                        "referencedDeclaration": 3810,
                        "src": "18740:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                          "typeString": "struct IRegistry.Lending"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1630,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1627,
                      "name": "lendings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "18776:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3810_storage_$",
                        "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                      }
                    },
                    "id": 1629,
                    "indexExpression": {
                      "id": 1628,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1612,
                      "src": "18785:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18776:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$3810_storage",
                      "typeString": "struct IRegistry.Lending storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18740:56:15"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1633,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1626,
                              "src": "18833:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            "id": 1634,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftStandard",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3796,
                            "src": "18833:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTStandard_$3753",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_NFTStandard_$3753",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          ],
                          "id": 1632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18827:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 1631,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "18827:5:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18827:26:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 1636,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1626,
                          "src": "18867:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1637,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3798,
                        "src": "18867:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 1638,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1626,
                          "src": "18902:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1639,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "maxRentDuration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3800,
                        "src": "18902:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 1640,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1626,
                          "src": "18939:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1641,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dailyRentPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3802,
                        "src": "18939:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "expression": {
                          "id": 1642,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1626,
                          "src": "18975:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1643,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lendAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3804,
                        "src": "18975:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "expression": {
                          "id": 1644,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1626,
                          "src": "19007:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1645,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "availableAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3806,
                        "src": "19007:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1648,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1626,
                              "src": "19050:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            "id": 1649,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "paymentToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3809,
                            "src": "19050:20:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PaymentToken_$4368",
                              "typeString": "enum IResolver.PaymentToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_PaymentToken_$4368",
                              "typeString": "enum IResolver.PaymentToken"
                            }
                          ],
                          "id": 1647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19044:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 1646,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "19044:5:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19044:27:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 1651,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "18813:268:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_address_payable_$_t_uint8_$_t_bytes4_$_t_uint16_$_t_uint16_$_t_uint8_$",
                      "typeString": "tuple(uint8,address payable,uint8,bytes4,uint16,uint16,uint8)"
                    }
                  },
                  "functionReturnParameters": 1610,
                  "id": 1652,
                  "nodeType": "Return",
                  "src": "18806:275:15"
                }
              ]
            },
            "functionSelector": "296c21b7",
            "id": 1654,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLending",
            "nameLocation": "18320:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1590,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "18348:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1654,
                  "src": "18340:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18340:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1592,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "18376:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1654,
                  "src": "18368:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18368:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1594,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "18401:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1654,
                  "src": "18393:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18393:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18330:87:15"
            },
            "returnParameters": {
              "id": 1610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1597,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1654,
                  "src": "18478:5:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1596,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "18478:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1599,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1654,
                  "src": "18497:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18497:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1601,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1654,
                  "src": "18518:5:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1600,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "18518:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1603,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1654,
                  "src": "18537:6:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1602,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "18537:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1605,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1654,
                  "src": "18557:6:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1604,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "18557:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1607,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1654,
                  "src": "18577:6:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1606,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "18577:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1609,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1654,
                  "src": "18597:5:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1608,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "18597:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18464:148:15"
            },
            "scope": 2496,
            "src": "18311:777:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1701,
              "nodeType": "Block",
              "src": "19342:344:15",
              "statements": [
                {
                  "assignments": [
                    1672
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1672,
                      "mutability": "mutable",
                      "name": "identifier",
                      "nameLocation": "19360:10:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1701,
                      "src": "19352:18:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1671,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19352:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1681,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1676,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1656,
                            "src": "19413:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1677,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1658,
                            "src": "19425:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1678,
                            "name": "_rentingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1660,
                            "src": "19434:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1674,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19396:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "19396:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19396:49:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1673,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "19373:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19373:82:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19352:103:15"
                },
                {
                  "assignments": [
                    1686
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1686,
                      "mutability": "mutable",
                      "name": "renting",
                      "nameLocation": "19491:7:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1701,
                      "src": "19465:33:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                        "typeString": "struct IRegistry.Renting"
                      },
                      "typeName": {
                        "id": 1685,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1684,
                          "name": "IRegistry.Renting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3819,
                          "src": "19465:17:15"
                        },
                        "referencedDeclaration": 3819,
                        "src": "19465:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                          "typeString": "struct IRegistry.Renting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1690,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1687,
                      "name": "rentings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "19501:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$3819_storage_$",
                        "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                      }
                    },
                    "id": 1689,
                    "indexExpression": {
                      "id": 1688,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1672,
                      "src": "19510:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19501:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$3819_storage",
                      "typeString": "struct IRegistry.Renting storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19465:56:15"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 1691,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1686,
                          "src": "19552:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                            "typeString": "struct IRegistry.Renting storage pointer"
                          }
                        },
                        "id": 1692,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "renterAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3812,
                        "src": "19552:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 1693,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1686,
                          "src": "19587:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                            "typeString": "struct IRegistry.Renting storage pointer"
                          }
                        },
                        "id": 1694,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3818,
                        "src": "19587:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "expression": {
                          "id": 1695,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1686,
                          "src": "19619:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                            "typeString": "struct IRegistry.Renting storage pointer"
                          }
                        },
                        "id": 1696,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentDuration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3814,
                        "src": "19619:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 1697,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1686,
                          "src": "19653:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                            "typeString": "struct IRegistry.Renting storage pointer"
                          }
                        },
                        "id": 1698,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentedAt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3816,
                        "src": "19653:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "id": 1699,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "19538:141:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint16_$_t_uint8_$_t_uint32_$",
                      "typeString": "tuple(address payable,uint16,uint8,uint32)"
                    }
                  },
                  "functionReturnParameters": 1670,
                  "id": 1700,
                  "nodeType": "Return",
                  "src": "19531:148:15"
                }
              ]
            },
            "functionSelector": "fe46b7cd",
            "id": 1702,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRenting",
            "nameLocation": "19103:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1656,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "19131:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1702,
                  "src": "19123:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19123:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1658,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "19159:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1702,
                  "src": "19151:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1657,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19151:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1660,
                  "mutability": "mutable",
                  "name": "_rentingID",
                  "nameLocation": "19184:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1702,
                  "src": "19176:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19176:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19113:87:15"
            },
            "returnParameters": {
              "id": 1670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1663,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1702,
                  "src": "19261:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19261:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1665,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1702,
                  "src": "19282:6:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1664,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "19282:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1667,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1702,
                  "src": "19302:5:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1666,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "19302:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1669,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1702,
                  "src": "19321:6:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1668,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "19321:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19247:90:15"
            },
            "scope": 2496,
            "src": "19094:592:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1765,
              "nodeType": "Block",
              "src": "20244:521:15",
              "statements": [
                {
                  "expression": {
                    "id": 1763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1731,
                      "name": "cd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1729,
                      "src": "20254:2:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20288:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31",
                          "id": 1734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20310:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "id": 1735,
                          "name": "nftStandard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1706,
                          "src": "20338:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          }
                        },
                        {
                          "id": 1736,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1709,
                          "src": "20375:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 1737,
                          "name": "tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1712,
                          "src": "20408:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1738,
                          "name": "lendAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1715,
                          "src": "20441:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20490:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "20476:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1739,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "20480:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1740,
                              "nodeType": "ArrayTypeName",
                              "src": "20480:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20476:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20531:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "20517:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1744,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "20521:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1745,
                              "nodeType": "ArrayTypeName",
                              "src": "20521:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20517:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20573:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "20561:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint8[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1749,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "20565:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 1750,
                              "nodeType": "ArrayTypeName",
                              "src": "20565:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                                "typeString": "uint8[]"
                              }
                            }
                          },
                          "id": 1753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20561:14:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20615:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "20601:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1754,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "20605:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1755,
                              "nodeType": "ArrayTypeName",
                              "src": "20605:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20601:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1759,
                          "name": "maxRentDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1718,
                          "src": "20648:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "id": 1760,
                          "name": "dailyRentPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1721,
                          "src": "20693:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          }
                        },
                        {
                          "id": 1761,
                          "name": "paymentToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1725,
                          "src": "20735:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4368_$dyn_memory_ptr",
                            "typeString": "enum IResolver.PaymentToken[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4368_$dyn_memory_ptr",
                            "typeString": "enum IResolver.PaymentToken[] memory"
                          }
                        ],
                        "id": 1732,
                        "name": "CallData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3793,
                        "src": "20259:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CallData_$3793_storage_ptr_$",
                          "typeString": "type(struct IRegistry.CallData storage pointer)"
                        }
                      },
                      "id": 1762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "left",
                        "right",
                        "nftStandard",
                        "nftAddress",
                        "tokenID",
                        "lendAmount",
                        "lendingID",
                        "rentingID",
                        "rentDuration",
                        "rentAmount",
                        "maxRentDuration",
                        "dailyRentPrice",
                        "paymentToken"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "20259:499:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "src": "20254:504:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                      "typeString": "struct IRegistry.CallData memory"
                    }
                  },
                  "id": 1764,
                  "nodeType": "ExpressionStatement",
                  "src": "20254:504:15"
                }
              ]
            },
            "id": 1766,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLendCallData",
            "nameLocation": "19883:18:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1706,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "19942:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1766,
                  "src": "19911:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1704,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1703,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3753,
                        "src": "19911:21:15"
                      },
                      "referencedDeclaration": 3753,
                      "src": "19911:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3753",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 1705,
                    "nodeType": "ArrayTypeName",
                    "src": "19911:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1709,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "19980:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1766,
                  "src": "19963:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1707,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "19963:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1708,
                    "nodeType": "ArrayTypeName",
                    "src": "19963:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1712,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "20017:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1766,
                  "src": "20000:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1710,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20000:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1711,
                    "nodeType": "ArrayTypeName",
                    "src": "20000:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1715,
                  "mutability": "mutable",
                  "name": "lendAmount",
                  "nameLocation": "20051:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1766,
                  "src": "20034:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1713,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20034:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1714,
                    "nodeType": "ArrayTypeName",
                    "src": "20034:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1718,
                  "mutability": "mutable",
                  "name": "maxRentDuration",
                  "nameLocation": "20086:15:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1766,
                  "src": "20071:30:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1716,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "20071:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 1717,
                    "nodeType": "ArrayTypeName",
                    "src": "20071:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1721,
                  "mutability": "mutable",
                  "name": "dailyRentPrice",
                  "nameLocation": "20127:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1766,
                  "src": "20111:30:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                    "typeString": "bytes4[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1719,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "20111:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 1720,
                    "nodeType": "ArrayTypeName",
                    "src": "20111:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                      "typeString": "bytes4[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1725,
                  "mutability": "mutable",
                  "name": "paymentToken",
                  "nameLocation": "20183:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1766,
                  "src": "20151:44:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4368_$dyn_memory_ptr",
                    "typeString": "enum IResolver.PaymentToken[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1723,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1722,
                        "name": "IResolver.PaymentToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4368,
                        "src": "20151:22:15"
                      },
                      "referencedDeclaration": 4368,
                      "src": "20151:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PaymentToken_$4368",
                        "typeString": "enum IResolver.PaymentToken"
                      }
                    },
                    "id": 1724,
                    "nodeType": "ArrayTypeName",
                    "src": "20151:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4368_$dyn_storage_ptr",
                      "typeString": "enum IResolver.PaymentToken[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19901:300:15"
            },
            "returnParameters": {
              "id": 1730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1729,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "20240:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1766,
                  "src": "20224:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1728,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1727,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3793,
                      "src": "20224:8:15"
                    },
                    "referencedDeclaration": 3793,
                    "src": "20224:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3793_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20223:20:15"
            },
            "scope": 2496,
            "src": "19874:891:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1830,
              "nodeType": "Block",
              "src": "21081:532:15",
              "statements": [
                {
                  "expression": {
                    "id": 1828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1791,
                      "name": "cd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1789,
                      "src": "21091:2:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21125:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31",
                          "id": 1794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21147:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "id": 1795,
                          "name": "nftStandard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1770,
                          "src": "21175:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          }
                        },
                        {
                          "id": 1796,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1773,
                          "src": "21212:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 1797,
                          "name": "tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1776,
                          "src": "21245:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21292:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21278:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1798,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "21282:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1799,
                              "nodeType": "ArrayTypeName",
                              "src": "21282:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21278:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1803,
                          "name": "_lendingID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1779,
                          "src": "21319:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21368:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21354:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1804,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "21358:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1805,
                              "nodeType": "ArrayTypeName",
                              "src": "21358:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21354:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1809,
                          "name": "rentDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1782,
                          "src": "21398:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "id": 1810,
                          "name": "rentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1785,
                          "src": "21436:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21489:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21477:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint8[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1811,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "21481:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 1812,
                              "nodeType": "ArrayTypeName",
                              "src": "21481:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                                "typeString": "uint8[]"
                              }
                            }
                          },
                          "id": 1815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21477:14:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21534:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21521:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes4[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1816,
                                "name": "bytes4",
                                "nodeType": "ElementaryTypeName",
                                "src": "21525:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "id": 1817,
                              "nodeType": "ArrayTypeName",
                              "src": "21525:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                                "typeString": "bytes4[]"
                              }
                            }
                          },
                          "id": 1820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21521:15:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21593:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21564:28:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_PaymentToken_$4368_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (enum IResolver.PaymentToken[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1822,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1821,
                                  "name": "IResolver.PaymentToken",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 4368,
                                  "src": "21568:22:15"
                                },
                                "referencedDeclaration": 4368,
                                "src": "21568:22:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PaymentToken_$4368",
                                  "typeString": "enum IResolver.PaymentToken"
                                }
                              },
                              "id": 1823,
                              "nodeType": "ArrayTypeName",
                              "src": "21568:24:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4368_$dyn_storage_ptr",
                                "typeString": "enum IResolver.PaymentToken[]"
                              }
                            }
                          },
                          "id": 1826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21564:31:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4368_$dyn_memory_ptr",
                            "typeString": "enum IResolver.PaymentToken[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4368_$dyn_memory_ptr",
                            "typeString": "enum IResolver.PaymentToken[] memory"
                          }
                        ],
                        "id": 1792,
                        "name": "CallData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3793,
                        "src": "21096:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CallData_$3793_storage_ptr_$",
                          "typeString": "type(struct IRegistry.CallData storage pointer)"
                        }
                      },
                      "id": 1827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "left",
                        "right",
                        "nftStandard",
                        "nftAddress",
                        "tokenID",
                        "lendAmount",
                        "lendingID",
                        "rentingID",
                        "rentDuration",
                        "rentAmount",
                        "maxRentDuration",
                        "dailyRentPrice",
                        "paymentToken"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "21096:510:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "src": "21091:515:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                      "typeString": "struct IRegistry.CallData memory"
                    }
                  },
                  "id": 1829,
                  "nodeType": "ExpressionStatement",
                  "src": "21091:515:15"
                }
              ]
            },
            "id": 1831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRentCallData",
            "nameLocation": "20780:18:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1770,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "20839:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1831,
                  "src": "20808:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1768,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1767,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3753,
                        "src": "20808:21:15"
                      },
                      "referencedDeclaration": 3753,
                      "src": "20808:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3753",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 1769,
                    "nodeType": "ArrayTypeName",
                    "src": "20808:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1773,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "20877:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1831,
                  "src": "20860:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1771,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "20860:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1772,
                    "nodeType": "ArrayTypeName",
                    "src": "20860:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1776,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "20914:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1831,
                  "src": "20897:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1774,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20897:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1775,
                    "nodeType": "ArrayTypeName",
                    "src": "20897:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1779,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "20948:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1831,
                  "src": "20931:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1777,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20931:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1778,
                    "nodeType": "ArrayTypeName",
                    "src": "20931:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1782,
                  "mutability": "mutable",
                  "name": "rentDuration",
                  "nameLocation": "20983:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1831,
                  "src": "20968:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1780,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "20968:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 1781,
                    "nodeType": "ArrayTypeName",
                    "src": "20968:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1785,
                  "mutability": "mutable",
                  "name": "rentAmount",
                  "nameLocation": "21022:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1831,
                  "src": "21005:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1783,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21005:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1784,
                    "nodeType": "ArrayTypeName",
                    "src": "21005:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20798:240:15"
            },
            "returnParameters": {
              "id": 1790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1789,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "21077:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1831,
                  "src": "21061:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1788,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1787,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3793,
                      "src": "21061:8:15"
                    },
                    "referencedDeclaration": 3793,
                    "src": "21061:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3793_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21060:20:15"
            },
            "scope": 2496,
            "src": "20771:842:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1896,
              "nodeType": "Block",
              "src": "21894:534:15",
              "statements": [
                {
                  "expression": {
                    "id": 1894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1853,
                      "name": "cd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1851,
                      "src": "21904:2:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21938:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31",
                          "id": 1856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21960:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "id": 1857,
                          "name": "nftStandard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1835,
                          "src": "21988:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          }
                        },
                        {
                          "id": 1858,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1838,
                          "src": "22025:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 1859,
                          "name": "tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1841,
                          "src": "22058:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22105:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22091:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1860,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "22095:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1861,
                              "nodeType": "ArrayTypeName",
                              "src": "22095:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22091:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1865,
                          "name": "_lendingID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1844,
                          "src": "22132:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1866,
                          "name": "_rentingID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1847,
                          "src": "22167:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22217:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22205:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint8[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1867,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "22209:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 1868,
                              "nodeType": "ArrayTypeName",
                              "src": "22209:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                                "typeString": "uint8[]"
                              }
                            }
                          },
                          "id": 1871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22205:14:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22259:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22245:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1872,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "22249:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1873,
                              "nodeType": "ArrayTypeName",
                              "src": "22249:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22245:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22304:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22292:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint8[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1877,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "22296:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 1878,
                              "nodeType": "ArrayTypeName",
                              "src": "22296:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                                "typeString": "uint8[]"
                              }
                            }
                          },
                          "id": 1881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22292:14:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22349:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22336:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes4[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1882,
                                "name": "bytes4",
                                "nodeType": "ElementaryTypeName",
                                "src": "22340:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "id": 1883,
                              "nodeType": "ArrayTypeName",
                              "src": "22340:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                                "typeString": "bytes4[]"
                              }
                            }
                          },
                          "id": 1886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22336:15:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22408:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22379:28:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_PaymentToken_$4368_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (enum IResolver.PaymentToken[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1888,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1887,
                                  "name": "IResolver.PaymentToken",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 4368,
                                  "src": "22383:22:15"
                                },
                                "referencedDeclaration": 4368,
                                "src": "22383:22:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PaymentToken_$4368",
                                  "typeString": "enum IResolver.PaymentToken"
                                }
                              },
                              "id": 1889,
                              "nodeType": "ArrayTypeName",
                              "src": "22383:24:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4368_$dyn_storage_ptr",
                                "typeString": "enum IResolver.PaymentToken[]"
                              }
                            }
                          },
                          "id": 1892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22379:31:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4368_$dyn_memory_ptr",
                            "typeString": "enum IResolver.PaymentToken[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4368_$dyn_memory_ptr",
                            "typeString": "enum IResolver.PaymentToken[] memory"
                          }
                        ],
                        "id": 1854,
                        "name": "CallData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3793,
                        "src": "21909:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CallData_$3793_storage_ptr_$",
                          "typeString": "type(struct IRegistry.CallData storage pointer)"
                        }
                      },
                      "id": 1893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "left",
                        "right",
                        "nftStandard",
                        "nftAddress",
                        "tokenID",
                        "lendAmount",
                        "lendingID",
                        "rentingID",
                        "rentDuration",
                        "rentAmount",
                        "maxRentDuration",
                        "dailyRentPrice",
                        "paymentToken"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "21909:512:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "src": "21904:517:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                      "typeString": "struct IRegistry.CallData memory"
                    }
                  },
                  "id": 1895,
                  "nodeType": "ExpressionStatement",
                  "src": "21904:517:15"
                }
              ]
            },
            "id": 1897,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createActionCallData",
            "nameLocation": "21628:20:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1835,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "21689:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1897,
                  "src": "21658:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1833,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1832,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3753,
                        "src": "21658:21:15"
                      },
                      "referencedDeclaration": 3753,
                      "src": "21658:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3753",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 1834,
                    "nodeType": "ArrayTypeName",
                    "src": "21658:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3753_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1838,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "21727:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1897,
                  "src": "21710:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1836,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "21710:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1837,
                    "nodeType": "ArrayTypeName",
                    "src": "21710:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1841,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "21764:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1897,
                  "src": "21747:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1839,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21747:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1840,
                    "nodeType": "ArrayTypeName",
                    "src": "21747:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1844,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "21798:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1897,
                  "src": "21781:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1842,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21781:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1843,
                    "nodeType": "ArrayTypeName",
                    "src": "21781:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1847,
                  "mutability": "mutable",
                  "name": "_rentingID",
                  "nameLocation": "21835:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1897,
                  "src": "21818:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1845,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21818:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1846,
                    "nodeType": "ArrayTypeName",
                    "src": "21818:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21648:203:15"
            },
            "returnParameters": {
              "id": 1852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1851,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "21890:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1897,
                  "src": "21874:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1850,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1849,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3793,
                      "src": "21874:8:15"
                    },
                    "referencedDeclaration": 3793,
                    "src": "21874:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3793_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21873:20:15"
            },
            "scope": 2496,
            "src": "21619:809:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1977,
              "nodeType": "Block",
              "src": "22543:472:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1907,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1899,
                        "src": "22577:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 1908,
                        "name": "scale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "22584:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1906,
                      "name": "ensureIsUnpackablePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2393,
                      "src": "22553:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes4_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes4,uint256) pure"
                      }
                    },
                    "id": 1909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22553:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1910,
                  "nodeType": "ExpressionStatement",
                  "src": "22553:37:15"
                },
                {
                  "assignments": [
                    1912
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1912,
                      "mutability": "mutable",
                      "name": "whole",
                      "nameLocation": "22607:5:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1977,
                      "src": "22600:12:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 1911,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "22600:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1920,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1917,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1899,
                            "src": "22629:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "id": 1916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "22622:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes2_$",
                            "typeString": "type(bytes2)"
                          },
                          "typeName": {
                            "id": 1915,
                            "name": "bytes2",
                            "nodeType": "ElementaryTypeName",
                            "src": "22622:6:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22622:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes2",
                          "typeString": "bytes2"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes2",
                          "typeString": "bytes2"
                        }
                      ],
                      "id": 1914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "22615:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint16_$",
                        "typeString": "type(uint16)"
                      },
                      "typeName": {
                        "id": 1913,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "22615:6:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22615:21:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22600:36:15"
                },
                {
                  "assignments": [
                    1922
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1922,
                      "mutability": "mutable",
                      "name": "decimal",
                      "nameLocation": "22653:7:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1977,
                      "src": "22646:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 1921,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "22646:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1932,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 1929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1927,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1899,
                              "src": "22677:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<<",
                            "rightExpression": {
                              "hexValue": "3136",
                              "id": 1928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22686:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_16_by_1",
                                "typeString": "int_const 16"
                              },
                              "value": "16"
                            },
                            "src": "22677:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "id": 1926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "22670:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes2_$",
                            "typeString": "type(bytes2)"
                          },
                          "typeName": {
                            "id": 1925,
                            "name": "bytes2",
                            "nodeType": "ElementaryTypeName",
                            "src": "22670:6:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22670:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes2",
                          "typeString": "bytes2"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes2",
                          "typeString": "bytes2"
                        }
                      ],
                      "id": 1924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "22663:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint16_$",
                        "typeString": "type(uint16)"
                      },
                      "typeName": {
                        "id": 1923,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "22663:6:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22663:27:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22646:44:15"
                },
                {
                  "assignments": [
                    1934
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1934,
                      "mutability": "mutable",
                      "name": "decimalScale",
                      "nameLocation": "22708:12:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1977,
                      "src": "22700:20:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1933,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22700:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1938,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1935,
                      "name": "scale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1901,
                      "src": "22723:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130303030",
                      "id": 1936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22731:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "22723:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22700:36:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1939,
                      "name": "whole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1912,
                      "src": "22750:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "39393939",
                      "id": 1940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22758:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9999_by_1",
                        "typeString": "int_const 9999"
                      },
                      "value": "9999"
                    },
                    "src": "22750:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1947,
                  "nodeType": "IfStatement",
                  "src": "22746:55:15",
                  "trueBody": {
                    "id": 1946,
                    "nodeType": "Block",
                    "src": "22764:37:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 1944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1942,
                            "name": "whole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1912,
                            "src": "22778:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "39393939",
                            "id": 1943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22786:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9999_by_1",
                              "typeString": "int_const 9999"
                            },
                            "value": "9999"
                          },
                          "src": "22778:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1945,
                        "nodeType": "ExpressionStatement",
                        "src": "22778:12:15"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1948,
                      "name": "decimal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1922,
                      "src": "22814:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "39393939",
                      "id": 1949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22824:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9999_by_1",
                        "typeString": "int_const 9999"
                      },
                      "value": "9999"
                    },
                    "src": "22814:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1956,
                  "nodeType": "IfStatement",
                  "src": "22810:59:15",
                  "trueBody": {
                    "id": 1955,
                    "nodeType": "Block",
                    "src": "22830:39:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 1953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1951,
                            "name": "decimal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1922,
                            "src": "22844:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "39393939",
                            "id": 1952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22854:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9999_by_1",
                              "typeString": "int_const 9999"
                            },
                            "value": "9999"
                          },
                          "src": "22844:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1954,
                        "nodeType": "ExpressionStatement",
                        "src": "22844:14:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1958
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1958,
                      "mutability": "mutable",
                      "name": "w",
                      "nameLocation": "22886:1:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1977,
                      "src": "22878:9:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1957,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22878:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1962,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1959,
                      "name": "whole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1912,
                      "src": "22890:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 1960,
                      "name": "scale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1901,
                      "src": "22898:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22890:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22878:25:15"
                },
                {
                  "assignments": [
                    1964
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1964,
                      "mutability": "mutable",
                      "name": "d",
                      "nameLocation": "22921:1:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1977,
                      "src": "22913:9:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1963,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22913:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1968,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1965,
                      "name": "decimal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1922,
                      "src": "22925:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 1966,
                      "name": "decimalScale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1934,
                      "src": "22935:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22925:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22913:34:15"
                },
                {
                  "assignments": [
                    1970
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1970,
                      "mutability": "mutable",
                      "name": "fullPrice",
                      "nameLocation": "22965:9:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1977,
                      "src": "22957:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1969,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22957:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1974,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1971,
                      "name": "w",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1958,
                      "src": "22977:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1972,
                      "name": "d",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1964,
                      "src": "22981:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22977:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22957:25:15"
                },
                {
                  "expression": {
                    "id": 1975,
                    "name": "fullPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1970,
                    "src": "22999:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1905,
                  "id": 1976,
                  "nodeType": "Return",
                  "src": "22992:16:15"
                }
              ]
            },
            "id": 1978,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpackPrice",
            "nameLocation": "22443:11:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1899,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "22462:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1978,
                  "src": "22455:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1898,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "22455:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1901,
                  "mutability": "mutable",
                  "name": "scale",
                  "nameLocation": "22477:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1978,
                  "src": "22469:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22469:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22454:29:15"
            },
            "returnParameters": {
              "id": 1905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1904,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1978,
                  "src": "22530:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22530:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22529:9:15"
            },
            "scope": 2496,
            "src": "22434:581:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2027,
              "nodeType": "Block",
              "src": "23190:157:15",
              "statements": [
                {
                  "expression": {
                    "id": 2001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1993,
                      "name": "r",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "23200:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1997,
                            "name": "toIx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1985,
                            "src": "23218:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1998,
                            "name": "fromIx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1983,
                            "src": "23225:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23218:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "23204:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1994,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "23208:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1995,
                          "nodeType": "ArrayTypeName",
                          "src": "23208:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 2000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23204:28:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "23200:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 2002,
                  "nodeType": "ExpressionStatement",
                  "src": "23200:32:15"
                },
                {
                  "body": {
                    "id": 2025,
                    "nodeType": "Block",
                    "src": "23282:59:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 2023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2013,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1991,
                              "src": "23296:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2017,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2016,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2014,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2004,
                                "src": "23298:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2015,
                                "name": "fromIx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1983,
                                "src": "23302:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "23298:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "23296:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 2018,
                              "name": "arr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1981,
                              "src": "23312:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2022,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2019,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2004,
                                "src": "23316:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2020,
                                "name": "arrOffset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1987,
                                "src": "23320:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "23316:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23312:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23296:34:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2024,
                        "nodeType": "ExpressionStatement",
                        "src": "23296:34:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2007,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2004,
                      "src": "23267:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2008,
                      "name": "toIx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1985,
                      "src": "23271:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23267:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2026,
                  "initializationExpression": {
                    "assignments": [
                      2004
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2004,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "23255:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2026,
                        "src": "23247:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2003,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23247:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2006,
                    "initialValue": {
                      "id": 2005,
                      "name": "fromIx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1983,
                      "src": "23259:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "23247:18:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "23277:3:15",
                      "subExpression": {
                        "id": 2010,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2004,
                        "src": "23277:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2012,
                    "nodeType": "ExpressionStatement",
                    "src": "23277:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "23242:99:15"
                }
              ]
            },
            "id": 2028,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sliceArr",
            "nameLocation": "23030:8:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1981,
                  "mutability": "mutable",
                  "name": "arr",
                  "nameLocation": "23065:3:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2028,
                  "src": "23048:20:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1979,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23048:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1980,
                    "nodeType": "ArrayTypeName",
                    "src": "23048:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1983,
                  "mutability": "mutable",
                  "name": "fromIx",
                  "nameLocation": "23086:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2028,
                  "src": "23078:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23078:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1985,
                  "mutability": "mutable",
                  "name": "toIx",
                  "nameLocation": "23110:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2028,
                  "src": "23102:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23102:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1987,
                  "mutability": "mutable",
                  "name": "arrOffset",
                  "nameLocation": "23132:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2028,
                  "src": "23124:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23124:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23038:109:15"
            },
            "returnParameters": {
              "id": 1992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1991,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "23187:1:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2028,
                  "src": "23170:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1989,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23170:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1990,
                    "nodeType": "ArrayTypeName",
                    "src": "23170:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23169:20:15"
            },
            "scope": 2496,
            "src": "23021:326:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2043,
              "nodeType": "Block",
              "src": "23591:67:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2034,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2030,
                          "src": "23609:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23625:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "23617:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2035,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "23617:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23617:10:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "23609:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a7a65726f2061646472657373",
                        "id": 2040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23629:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_017ab3f46160f82f94f3731aea2acc6f505420f91f1db2d75db06a888358c3d6",
                          "typeString": "literal_string \"ReNFT::zero address\""
                        },
                        "value": "ReNFT::zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_017ab3f46160f82f94f3731aea2acc6f505420f91f1db2d75db06a888358c3d6",
                          "typeString": "literal_string \"ReNFT::zero address\""
                        }
                      ],
                      "id": 2033,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23601:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23601:50:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2042,
                  "nodeType": "ExpressionStatement",
                  "src": "23601:50:15"
                }
              ]
            },
            "id": 2044,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNotZeroAddr",
            "nameLocation": "23544:19:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2030,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "23572:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2044,
                  "src": "23564:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2029,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23564:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23563:14:15"
            },
            "returnParameters": {
              "id": 2032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23591:0:15"
            },
            "scope": 2496,
            "src": "23535:123:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2059,
              "nodeType": "Block",
              "src": "23717:73:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2050,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2046,
                          "src": "23735:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2053,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23751:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "23743:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2051,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "23743:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23743:10:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "23735:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742061207a65726f2061646472657373",
                        "id": 2056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23755:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf0a413fa4e7c97f0ba99c3900cd64d87a46eb7681883585347a63729357c08a",
                          "typeString": "literal_string \"ReNFT::not a zero address\""
                        },
                        "value": "ReNFT::not a zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf0a413fa4e7c97f0ba99c3900cd64d87a46eb7681883585347a63729357c08a",
                          "typeString": "literal_string \"ReNFT::not a zero address\""
                        }
                      ],
                      "id": 2049,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23727:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23727:56:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2058,
                  "nodeType": "ExpressionStatement",
                  "src": "23727:56:15"
                }
              ]
            },
            "id": 2060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsZeroAddr",
            "nameLocation": "23673:16:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2046,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "23698:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2060,
                  "src": "23690:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23690:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23689:14:15"
            },
            "returnParameters": {
              "id": 2048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23717:0:15"
            },
            "scope": 2496,
            "src": "23664:126:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2087,
              "nodeType": "Block",
              "src": "23855:207:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2067,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2063,
                          "src": "23882:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 2068,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3798,
                        "src": "23882:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2066,
                      "name": "ensureIsZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2060,
                      "src": "23865:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23865:39:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2070,
                  "nodeType": "ExpressionStatement",
                  "src": "23865:39:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2072,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2063,
                            "src": "23922:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2073,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxRentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3800,
                          "src": "23922:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23949:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "23922:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206e6f74207a65726f",
                        "id": 2076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23952:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bfed158b71c7b43b596ff53abfc876396a7eeba1e8742980adf723536811fb9",
                          "typeString": "literal_string \"ReNFT::duration not zero\""
                        },
                        "value": "ReNFT::duration not zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bfed158b71c7b43b596ff53abfc876396a7eeba1e8742980adf723536811fb9",
                          "typeString": "literal_string \"ReNFT::duration not zero\""
                        }
                      ],
                      "id": 2071,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23914:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23914:65:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2078,
                  "nodeType": "ExpressionStatement",
                  "src": "23914:65:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2080,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2063,
                            "src": "23997:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2081,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dailyRentPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3802,
                          "src": "23997:22:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24023:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "23997:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e74207072696365206e6f74207a65726f",
                        "id": 2084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24026:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48cfe636a1e20ea0463ade8a5cfe4fe8f43599908aead963e03225001cea4e44",
                          "typeString": "literal_string \"ReNFT::rent price not zero\""
                        },
                        "value": "ReNFT::rent price not zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48cfe636a1e20ea0463ade8a5cfe4fe8f43599908aead963e03225001cea4e44",
                          "typeString": "literal_string \"ReNFT::rent price not zero\""
                        }
                      ],
                      "id": 2079,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23989:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23989:66:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2086,
                  "nodeType": "ExpressionStatement",
                  "src": "23989:66:15"
                }
              ]
            },
            "id": 2088,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNull",
            "nameLocation": "23805:12:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2063,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "23833:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2088,
                  "src": "23818:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 2062,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2061,
                      "name": "Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3810,
                      "src": "23818:7:15"
                    },
                    "referencedDeclaration": 3810,
                    "src": "23818:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23817:24:15"
            },
            "returnParameters": {
              "id": 2065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23855:0:15"
            },
            "scope": 2496,
            "src": "23796:266:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2115,
              "nodeType": "Block",
              "src": "24130:205:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2095,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2091,
                          "src": "24160:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 2096,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3798,
                        "src": "24160:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2094,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2044,
                      "src": "24140:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24140:42:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2098,
                  "nodeType": "ExpressionStatement",
                  "src": "24140:42:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2100,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2091,
                            "src": "24200:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2101,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxRentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3800,
                          "src": "24200:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24227:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24200:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e207a65726f",
                        "id": 2104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24230:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0dfe6e7c6144fc08b0ffaa474de244e9bbe25d4a87ce45cf2898b5a62ec0131a",
                          "typeString": "literal_string \"ReNFT::duration zero\""
                        },
                        "value": "ReNFT::duration zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0dfe6e7c6144fc08b0ffaa474de244e9bbe25d4a87ce45cf2898b5a62ec0131a",
                          "typeString": "literal_string \"ReNFT::duration zero\""
                        }
                      ],
                      "id": 2099,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24192:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24192:61:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2106,
                  "nodeType": "ExpressionStatement",
                  "src": "24192:61:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2108,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2091,
                            "src": "24271:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2109,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dailyRentPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3802,
                          "src": "24271:22:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24297:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24271:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e74207072696365206973207a65726f",
                        "id": 2112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24300:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                          "typeString": "literal_string \"ReNFT::rent price is zero\""
                        },
                        "value": "ReNFT::rent price is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                          "typeString": "literal_string \"ReNFT::rent price is zero\""
                        }
                      ],
                      "id": 2107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24263:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24263:65:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2114,
                  "nodeType": "ExpressionStatement",
                  "src": "24263:65:15"
                }
              ]
            },
            "id": 2116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNotNull",
            "nameLocation": "24077:15:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2091,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "24108:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2116,
                  "src": "24093:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 2090,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2089,
                      "name": "Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3810,
                      "src": "24093:7:15"
                    },
                    "referencedDeclaration": 3810,
                    "src": "24093:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24092:24:15"
            },
            "returnParameters": {
              "id": 2093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24130:0:15"
            },
            "scope": 2496,
            "src": "24068:267:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2143,
              "nodeType": "Block",
              "src": "24400:197:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2123,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2119,
                          "src": "24427:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                            "typeString": "struct IRegistry.Renting memory"
                          }
                        },
                        "id": 2124,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "renterAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3812,
                        "src": "24427:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2122,
                      "name": "ensureIsZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2060,
                      "src": "24410:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24410:39:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2126,
                  "nodeType": "ExpressionStatement",
                  "src": "24410:39:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2128,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2119,
                            "src": "24467:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2129,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3814,
                          "src": "24467:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24491:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24467:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206e6f74207a65726f",
                        "id": 2132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24494:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bfed158b71c7b43b596ff53abfc876396a7eeba1e8742980adf723536811fb9",
                          "typeString": "literal_string \"ReNFT::duration not zero\""
                        },
                        "value": "ReNFT::duration not zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bfed158b71c7b43b596ff53abfc876396a7eeba1e8742980adf723536811fb9",
                          "typeString": "literal_string \"ReNFT::duration not zero\""
                        }
                      ],
                      "id": 2127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24459:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24459:62:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2134,
                  "nodeType": "ExpressionStatement",
                  "src": "24459:62:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2136,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2119,
                            "src": "24539:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2137,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3816,
                          "src": "24539:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24559:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24539:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e746564206174206e6f74207a65726f",
                        "id": 2140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24562:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59d3efea810797b8e1f5a46ec91585c665142e29ff2034bb81184c3c3f6e6146",
                          "typeString": "literal_string \"ReNFT::rented at not zero\""
                        },
                        "value": "ReNFT::rented at not zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59d3efea810797b8e1f5a46ec91585c665142e29ff2034bb81184c3c3f6e6146",
                          "typeString": "literal_string \"ReNFT::rented at not zero\""
                        }
                      ],
                      "id": 2135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24531:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24531:59:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2142,
                  "nodeType": "ExpressionStatement",
                  "src": "24531:59:15"
                }
              ]
            },
            "id": 2144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNull",
            "nameLocation": "24350:12:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2119,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "24378:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2144,
                  "src": "24363:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2118,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2117,
                      "name": "Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3819,
                      "src": "24363:7:15"
                    },
                    "referencedDeclaration": 3819,
                    "src": "24363:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24362:24:15"
            },
            "returnParameters": {
              "id": 2121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24400:0:15"
            },
            "scope": 2496,
            "src": "24341:256:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2171,
              "nodeType": "Block",
              "src": "24665:198:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2151,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2147,
                          "src": "24695:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                            "typeString": "struct IRegistry.Renting memory"
                          }
                        },
                        "id": 2152,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "renterAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3812,
                        "src": "24695:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2150,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2044,
                      "src": "24675:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24675:42:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2154,
                  "nodeType": "ExpressionStatement",
                  "src": "24675:42:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2156,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2147,
                            "src": "24735:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2157,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3814,
                          "src": "24735:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24759:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24735:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206973207a65726f",
                        "id": 2160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24762:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        },
                        "value": "ReNFT::duration is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        }
                      ],
                      "id": 2155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24727:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24727:61:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2162,
                  "nodeType": "ExpressionStatement",
                  "src": "24727:61:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2164,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2147,
                            "src": "24806:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2165,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3816,
                          "src": "24806:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24826:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24806:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e746564206174206973207a65726f",
                        "id": 2168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24829:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1d64bbdc6ad9244225c1520b653d2d803876ddbf569b4b0339344a5457f51bf",
                          "typeString": "literal_string \"ReNFT::rented at is zero\""
                        },
                        "value": "ReNFT::rented at is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1d64bbdc6ad9244225c1520b653d2d803876ddbf569b4b0339344a5457f51bf",
                          "typeString": "literal_string \"ReNFT::rented at is zero\""
                        }
                      ],
                      "id": 2163,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24798:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24798:58:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2170,
                  "nodeType": "ExpressionStatement",
                  "src": "24798:58:15"
                }
              ]
            },
            "id": 2172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNotNull",
            "nameLocation": "24612:15:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2147,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "24643:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2172,
                  "src": "24628:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2146,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2145,
                      "name": "Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3819,
                      "src": "24628:7:15"
                    },
                    "referencedDeclaration": 3819,
                    "src": "24628:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24627:24:15"
            },
            "returnParameters": {
              "id": 2149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24665:0:15"
            },
            "scope": 2496,
            "src": "24603:260:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2241,
              "nodeType": "Block",
              "src": "24939:382:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2181,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2175,
                              "src": "24957:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2182,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lendAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3770,
                            "src": "24957:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2184,
                          "indexExpression": {
                            "id": 2183,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2177,
                            "src": "24971:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24957:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24976:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24957:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6c656e6420616d6f756e74206973207a65726f",
                        "id": 2187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24979:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4de43cfbd194812072149f798b9896e887b8df0277521ec9aae6d4793a9d866b",
                          "typeString": "literal_string \"ReNFT::lend amount is zero\""
                        },
                        "value": "ReNFT::lend amount is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4de43cfbd194812072149f798b9896e887b8df0277521ec9aae6d4793a9d866b",
                          "typeString": "literal_string \"ReNFT::lend amount is zero\""
                        }
                      ],
                      "id": 2180,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24949:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24949:59:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2189,
                  "nodeType": "ExpressionStatement",
                  "src": "24949:59:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2191,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2175,
                              "src": "25026:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2192,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lendAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3770,
                            "src": "25026:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2194,
                          "indexExpression": {
                            "id": 2193,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2177,
                            "src": "25040:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25026:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "25051:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint16_$",
                                  "typeString": "type(uint16)"
                                },
                                "typeName": {
                                  "id": 2196,
                                  "name": "uint16",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "25051:6:15",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint16_$",
                                  "typeString": "type(uint16)"
                                }
                              ],
                              "id": 2195,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "25046:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25046:12:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint16",
                              "typeString": "type(uint16)"
                            }
                          },
                          "id": 2199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "25046:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "src": "25026:36:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742075696e743136",
                        "id": 2201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25064:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_655964f83ba07133de39da5254fb8740a7c6f0512bf454937e7acdd940fcba1c",
                          "typeString": "literal_string \"ReNFT::not uint16\""
                        },
                        "value": "ReNFT::not uint16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_655964f83ba07133de39da5254fb8740a7c6f0512bf454937e7acdd940fcba1c",
                          "typeString": "literal_string \"ReNFT::not uint16\""
                        }
                      ],
                      "id": 2190,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25018:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25018:66:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2203,
                  "nodeType": "ExpressionStatement",
                  "src": "25018:66:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2205,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2175,
                              "src": "25102:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2206,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "maxRentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3773,
                            "src": "25102:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2208,
                          "indexExpression": {
                            "id": 2207,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2177,
                            "src": "25121:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25102:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25126:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25102:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206973207a65726f",
                        "id": 2211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25129:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        },
                        "value": "ReNFT::duration is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        }
                      ],
                      "id": 2204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25094:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25094:61:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2213,
                  "nodeType": "ExpressionStatement",
                  "src": "25094:61:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2215,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2175,
                              "src": "25173:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2216,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "maxRentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3773,
                            "src": "25173:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2218,
                          "indexExpression": {
                            "id": 2217,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2177,
                            "src": "25192:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25173:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "25203:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 2220,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "25203:5:15",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                }
                              ],
                              "id": 2219,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "25198:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25198:11:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint8",
                              "typeString": "type(uint8)"
                            }
                          },
                          "id": 2223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "25198:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "25173:40:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742075696e7438",
                        "id": 2225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25215:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        },
                        "value": "ReNFT::not uint8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        }
                      ],
                      "id": 2214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25165:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25165:69:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2227,
                  "nodeType": "ExpressionStatement",
                  "src": "25165:69:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 2231,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2175,
                                  "src": "25259:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 2232,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "dailyRentPrice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3776,
                                "src": "25259:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                  "typeString": "bytes4[] memory"
                                }
                              },
                              "id": 2234,
                              "indexExpression": {
                                "id": 2233,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2177,
                                "src": "25277:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "25259:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 2230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "25252:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 2229,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "25252:6:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25252:28:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25283:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25252:32:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e74207072696365206973207a65726f",
                        "id": 2238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25286:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                          "typeString": "literal_string \"ReNFT::rent price is zero\""
                        },
                        "value": "ReNFT::rent price is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                          "typeString": "literal_string \"ReNFT::rent price is zero\""
                        }
                      ],
                      "id": 2228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25244:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25244:70:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2240,
                  "nodeType": "ExpressionStatement",
                  "src": "25244:70:15"
                }
              ]
            },
            "id": 2242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsLendable",
            "nameLocation": "24878:16:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2175,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "24911:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2242,
                  "src": "24895:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 2174,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2173,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3793,
                      "src": "24895:8:15"
                    },
                    "referencedDeclaration": 3793,
                    "src": "24895:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3793_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2177,
                  "mutability": "mutable",
                  "name": "i",
                  "nameLocation": "24923:1:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2242,
                  "src": "24915:9:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24915:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24894:31:15"
            },
            "returnParameters": {
              "id": 2179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24939:0:15"
            },
            "scope": 2496,
            "src": "24869:452:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2322,
              "nodeType": "Block",
              "src": "25478:518:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2256,
                          "name": "msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2252,
                          "src": "25496:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 2257,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2245,
                            "src": "25509:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2258,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lenderAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3798,
                          "src": "25509:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "25496:34:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a63616e742072656e74206f776e206e6674",
                        "id": 2260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25532:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd4f92edf0bbfd9dc58dc0f4a8267dbc207d8e8405950a6a8eaae69df1951ef5",
                          "typeString": "literal_string \"ReNFT::cant rent own nft\""
                        },
                        "value": "ReNFT::cant rent own nft"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd4f92edf0bbfd9dc58dc0f4a8267dbc207d8e8405950a6a8eaae69df1951ef5",
                          "typeString": "literal_string \"ReNFT::cant rent own nft\""
                        }
                      ],
                      "id": 2255,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25488:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25488:71:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2262,
                  "nodeType": "ExpressionStatement",
                  "src": "25488:71:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2264,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2248,
                              "src": "25577:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2265,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3785,
                            "src": "25577:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2267,
                          "indexExpression": {
                            "id": 2266,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2250,
                            "src": "25593:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25577:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "25604:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 2269,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "25604:5:15",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                }
                              ],
                              "id": 2268,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "25599:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25599:11:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint8",
                              "typeString": "type(uint8)"
                            }
                          },
                          "id": 2272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "25599:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "25577:37:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742075696e7438",
                        "id": 2274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25616:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        },
                        "value": "ReNFT::not uint8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        }
                      ],
                      "id": 2263,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25569:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25569:66:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2276,
                  "nodeType": "ExpressionStatement",
                  "src": "25569:66:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2278,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2248,
                              "src": "25653:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2279,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3785,
                            "src": "25653:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2281,
                          "indexExpression": {
                            "id": 2280,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2250,
                            "src": "25669:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25653:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25674:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25653:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206973207a65726f",
                        "id": 2284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25677:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        },
                        "value": "ReNFT::duration is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        }
                      ],
                      "id": 2277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25645:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25645:58:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2286,
                  "nodeType": "ExpressionStatement",
                  "src": "25645:58:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2288,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2248,
                              "src": "25721:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2289,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3788,
                            "src": "25721:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2291,
                          "indexExpression": {
                            "id": 2290,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2250,
                            "src": "25735:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25721:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "25746:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint16_$",
                                  "typeString": "type(uint16)"
                                },
                                "typeName": {
                                  "id": 2293,
                                  "name": "uint16",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "25746:6:15",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint16_$",
                                  "typeString": "type(uint16)"
                                }
                              ],
                              "id": 2292,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "25741:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25741:12:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint16",
                              "typeString": "type(uint16)"
                            }
                          },
                          "id": 2296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "25741:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "src": "25721:36:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742075696e743136",
                        "id": 2298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25759:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_655964f83ba07133de39da5254fb8740a7c6f0512bf454937e7acdd940fcba1c",
                          "typeString": "literal_string \"ReNFT::not uint16\""
                        },
                        "value": "ReNFT::not uint16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_655964f83ba07133de39da5254fb8740a7c6f0512bf454937e7acdd940fcba1c",
                          "typeString": "literal_string \"ReNFT::not uint16\""
                        }
                      ],
                      "id": 2287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25713:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25713:66:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2300,
                  "nodeType": "ExpressionStatement",
                  "src": "25713:66:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2302,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2248,
                              "src": "25797:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2303,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3788,
                            "src": "25797:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2305,
                          "indexExpression": {
                            "id": 2304,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2250,
                            "src": "25811:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25797:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25816:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25797:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e74416d6f756e74206973207a65726f",
                        "id": 2308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25819:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c7960a3940823e4c5cf1126077f544b5b4768548aab92112220a80330d90617",
                          "typeString": "literal_string \"ReNFT::rentAmount is zero\""
                        },
                        "value": "ReNFT::rentAmount is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c7960a3940823e4c5cf1126077f544b5b4768548aab92112220a80330d90617",
                          "typeString": "literal_string \"ReNFT::rentAmount is zero\""
                        }
                      ],
                      "id": 2301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25789:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25789:58:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2310,
                  "nodeType": "ExpressionStatement",
                  "src": "25789:58:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2312,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2248,
                              "src": "25878:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2313,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3785,
                            "src": "25878:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2315,
                          "indexExpression": {
                            "id": 2314,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2250,
                            "src": "25894:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25878:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 2316,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2245,
                            "src": "25900:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2317,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxRentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3800,
                          "src": "25900:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "25878:45:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e74206475726174696f6e206578636565647320616c6c6f776564206d6178",
                        "id": 2319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25937:42:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39659f6ead9bf4255f63fe3d2efb8746dc0fa05be82fb4a445824367bedbb9b9",
                          "typeString": "literal_string \"ReNFT::rent duration exceeds allowed max\""
                        },
                        "value": "ReNFT::rent duration exceeds allowed max"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39659f6ead9bf4255f63fe3d2efb8746dc0fa05be82fb4a445824367bedbb9b9",
                          "typeString": "literal_string \"ReNFT::rent duration exceeds allowed max\""
                        }
                      ],
                      "id": 2311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25857:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25857:132:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2321,
                  "nodeType": "ExpressionStatement",
                  "src": "25857:132:15"
                }
              ]
            },
            "id": 2323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsRentable",
            "nameLocation": "25336:16:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2245,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "25377:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2323,
                  "src": "25362:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 2244,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2243,
                      "name": "Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3810,
                      "src": "25362:7:15"
                    },
                    "referencedDeclaration": 3810,
                    "src": "25362:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2248,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "25410:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2323,
                  "src": "25394:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3793_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 2247,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2246,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3793,
                      "src": "25394:8:15"
                    },
                    "referencedDeclaration": 3793,
                    "src": "25394:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3793_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2250,
                  "mutability": "mutable",
                  "name": "i",
                  "nameLocation": "25430:1:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2323,
                  "src": "25422:9:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25422:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2252,
                  "mutability": "mutable",
                  "name": "msgSender",
                  "nameLocation": "25449:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2323,
                  "src": "25441:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25441:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25352:112:15"
            },
            "returnParameters": {
              "id": 2254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25478:0:15"
            },
            "scope": 2496,
            "src": "25327:669:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2350,
              "nodeType": "Block",
              "src": "26140:203:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2334,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2326,
                            "src": "26158:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2335,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "renterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3812,
                          "src": "26158:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2336,
                          "name": "msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2328,
                          "src": "26183:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "26158:34:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742072656e746572",
                        "id": 2338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26194:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b071f9698ef9a459a93f5d0571059a4e85f96b590bfdf41c172b70768be64506",
                          "typeString": "literal_string \"ReNFT::not renter\""
                        },
                        "value": "ReNFT::not renter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b071f9698ef9a459a93f5d0571059a4e85f96b590bfdf41c172b70768be64506",
                          "typeString": "literal_string \"ReNFT::not renter\""
                        }
                      ],
                      "id": 2333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26150:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26150:64:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2340,
                  "nodeType": "ExpressionStatement",
                  "src": "26150:64:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "26245:42:15",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 2343,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2326,
                              "src": "26263:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                                "typeString": "struct IRegistry.Renting memory"
                              }
                            },
                            {
                              "id": 2344,
                              "name": "blockTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2330,
                              "src": "26272:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                                "typeString": "struct IRegistry.Renting memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2342,
                            "name": "isPastReturnDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2452,
                            "src": "26246:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$3819_memory_ptr_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (struct IRegistry.Renting memory,uint256) pure returns (bool)"
                            }
                          },
                          "id": 2345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26246:41:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a706173742072657475726e2064617465",
                        "id": 2347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26301:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60d9351a02e13c6126fdf430f735bf371068ce09068a692cd4cbd6d1f979d6cd",
                          "typeString": "literal_string \"ReNFT::past return date\""
                        },
                        "value": "ReNFT::past return date"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60d9351a02e13c6126fdf430f735bf371068ce09068a692cd4cbd6d1f979d6cd",
                          "typeString": "literal_string \"ReNFT::past return date\""
                        }
                      ],
                      "id": 2341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26224:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26224:112:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2349,
                  "nodeType": "ExpressionStatement",
                  "src": "26224:112:15"
                }
              ]
            },
            "id": 2351,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsReturnable",
            "nameLocation": "26011:18:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2326,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "26054:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2351,
                  "src": "26039:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2325,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2324,
                      "name": "Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3819,
                      "src": "26039:7:15"
                    },
                    "referencedDeclaration": 3819,
                    "src": "26039:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2328,
                  "mutability": "mutable",
                  "name": "msgSender",
                  "nameLocation": "26079:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2351,
                  "src": "26071:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26071:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2330,
                  "mutability": "mutable",
                  "name": "blockTimestamp",
                  "nameLocation": "26106:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2351,
                  "src": "26098:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2329,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26098:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26029:97:15"
            },
            "returnParameters": {
              "id": 2332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26140:0:15"
            },
            "scope": 2496,
            "src": "26002:341:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2367,
              "nodeType": "Block",
              "src": "26452:81:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2360,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2354,
                            "src": "26470:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2361,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lenderAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3798,
                          "src": "26470:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2362,
                          "name": "msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2356,
                          "src": "26495:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "26470:34:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f74206c656e646572",
                        "id": 2364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26506:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_738003007a673e3539342adf0524c591935e1842a8b07715583bffb993d87642",
                          "typeString": "literal_string \"ReNFT::not lender\""
                        },
                        "value": "ReNFT::not lender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_738003007a673e3539342adf0524c591935e1842a8b07715583bffb993d87642",
                          "typeString": "literal_string \"ReNFT::not lender\""
                        }
                      ],
                      "id": 2359,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26462:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26462:64:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2366,
                  "nodeType": "ExpressionStatement",
                  "src": "26462:64:15"
                }
              ]
            },
            "id": 2368,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsStoppable",
            "nameLocation": "26358:17:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2354,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "26391:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2368,
                  "src": "26376:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$3810_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 2353,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2352,
                      "name": "Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3810,
                      "src": "26376:7:15"
                    },
                    "referencedDeclaration": 3810,
                    "src": "26376:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$3810_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2356,
                  "mutability": "mutable",
                  "name": "msgSender",
                  "nameLocation": "26408:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2368,
                  "src": "26400:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26400:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26375:43:15"
            },
            "returnParameters": {
              "id": 2358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26452:0:15"
            },
            "scope": 2496,
            "src": "26349:184:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2392,
              "nodeType": "Block",
              "src": "26614:124:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2378,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2370,
                              "src": "26639:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 2377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "26632:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 2376,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "26632:6:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26632:13:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26648:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "26632:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a696e76616c6964207072696365",
                        "id": 2382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26651:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_559545e25fdf2266fad8ea404da44063c3eafafdf63766a3044711f6486ede80",
                          "typeString": "literal_string \"ReNFT::invalid price\""
                        },
                        "value": "ReNFT::invalid price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_559545e25fdf2266fad8ea404da44063c3eafafdf63766a3044711f6486ede80",
                          "typeString": "literal_string \"ReNFT::invalid price\""
                        }
                      ],
                      "id": 2375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26624:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26624:50:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2384,
                  "nodeType": "ExpressionStatement",
                  "src": "26624:50:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2386,
                          "name": "scale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2372,
                          "src": "26692:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 2387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26701:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "26692:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a696e76616c6964207363616c65",
                        "id": 2389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26708:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1c00ae96977513cade12e3568a1f3a607092c3cd311e350759f44e65314d2e2",
                          "typeString": "literal_string \"ReNFT::invalid scale\""
                        },
                        "value": "ReNFT::invalid scale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1c00ae96977513cade12e3568a1f3a607092c3cd311e350759f44e65314d2e2",
                          "typeString": "literal_string \"ReNFT::invalid scale\""
                        }
                      ],
                      "id": 2385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26684:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26684:47:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2391,
                  "nodeType": "ExpressionStatement",
                  "src": "26684:47:15"
                }
              ]
            },
            "id": 2393,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsUnpackablePrice",
            "nameLocation": "26548:23:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2370,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "26579:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2393,
                  "src": "26572:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2369,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "26572:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2372,
                  "mutability": "mutable",
                  "name": "scale",
                  "nameLocation": "26594:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2393,
                  "src": "26586:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26586:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26571:29:15"
            },
            "returnParameters": {
              "id": 2374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26614:0:15"
            },
            "scope": 2496,
            "src": "26539:199:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2405,
              "nodeType": "Block",
              "src": "26806:67:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2399,
                          "name": "paymentIx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2395,
                          "src": "26824:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26836:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "26824:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a746f6b656e2069732073656e74696e656c",
                        "id": 2402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26839:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e33b4b37f2925bfd014eba670bad9694f29620b6260f525acdbc9212950b0049",
                          "typeString": "literal_string \"ReNFT::token is sentinel\""
                        },
                        "value": "ReNFT::token is sentinel"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e33b4b37f2925bfd014eba670bad9694f29620b6260f525acdbc9212950b0049",
                          "typeString": "literal_string \"ReNFT::token is sentinel\""
                        }
                      ],
                      "id": 2398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26816:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26816:50:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2404,
                  "nodeType": "ExpressionStatement",
                  "src": "26816:50:15"
                }
              ]
            },
            "id": 2406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureTokenNotSentinel",
            "nameLocation": "26753:22:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2395,
                  "mutability": "mutable",
                  "name": "paymentIx",
                  "nameLocation": "26782:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2406,
                  "src": "26776:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2394,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26776:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26775:17:15"
            },
            "returnParameters": {
              "id": 2397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26806:0:15"
            },
            "scope": 2496,
            "src": "26744:129:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2422,
              "nodeType": "Block",
              "src": "26999:134:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2416,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2409,
                            "src": "27047:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          {
                            "id": 2417,
                            "name": "blockTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2411,
                            "src": "27056:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2415,
                          "name": "isPastReturnDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2452,
                          "src": "27030:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$3819_memory_ptr_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (struct IRegistry.Renting memory,uint256) pure returns (bool)"
                          }
                        },
                        "id": 2418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27030:41:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72657475726e2064617465206e6f7420706173736564",
                        "id": 2419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27085:31:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fd0a7086a9002dba470ae5e332cefa8c9633f26aad92d4f0e8b2bb73f67d943",
                          "typeString": "literal_string \"ReNFT::return date not passed\""
                        },
                        "value": "ReNFT::return date not passed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fd0a7086a9002dba470ae5e332cefa8c9633f26aad92d4f0e8b2bb73f67d943",
                          "typeString": "literal_string \"ReNFT::return date not passed\""
                        }
                      ],
                      "id": 2414,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27009:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27009:117:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2421,
                  "nodeType": "ExpressionStatement",
                  "src": "27009:117:15"
                }
              ]
            },
            "id": 2423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsClaimable",
            "nameLocation": "26888:17:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2409,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "26940:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2423,
                  "src": "26915:32:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2408,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2407,
                      "name": "IRegistry.Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3819,
                      "src": "26915:17:15"
                    },
                    "referencedDeclaration": 3819,
                    "src": "26915:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2411,
                  "mutability": "mutable",
                  "name": "blockTimestamp",
                  "nameLocation": "26965:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2423,
                  "src": "26957:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26957:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26905:80:15"
            },
            "returnParameters": {
              "id": 2413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26999:0:15"
            },
            "scope": 2496,
            "src": "26879:254:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2451,
              "nodeType": "Block",
              "src": "27262:175:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2434,
                          "name": "nowTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2428,
                          "src": "27280:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 2435,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2426,
                            "src": "27290:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2436,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3816,
                          "src": "27290:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "27280:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f77206265666f72652072656e746564",
                        "id": 2438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27308:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42e6480c6f4e3cb3e382808e29c7860baf7be54e2edbcea1fca873baaf1f3eeb",
                          "typeString": "literal_string \"ReNFT::now before rented\""
                        },
                        "value": "ReNFT::now before rented"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42e6480c6f4e3cb3e382808e29c7860baf7be54e2edbcea1fca873baaf1f3eeb",
                          "typeString": "literal_string \"ReNFT::now before rented\""
                        }
                      ],
                      "id": 2433,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27272:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27272:63:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2440,
                  "nodeType": "ExpressionStatement",
                  "src": "27272:63:15"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2441,
                        "name": "nowTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2428,
                        "src": "27364:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 2442,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2426,
                          "src": "27374:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                            "typeString": "struct IRegistry.Renting memory"
                          }
                        },
                        "id": 2443,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentedAt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3816,
                        "src": "27374:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "27364:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2445,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2426,
                          "src": "27393:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                            "typeString": "struct IRegistry.Renting memory"
                          }
                        },
                        "id": 2446,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentDuration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3814,
                        "src": "27393:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 2447,
                        "name": "SECONDS_IN_DAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "27416:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "27393:37:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27364:66:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2432,
                  "id": 2450,
                  "nodeType": "Return",
                  "src": "27345:85:15"
                }
              ]
            },
            "id": 2452,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPastReturnDate",
            "nameLocation": "27148:16:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2426,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "27180:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2452,
                  "src": "27165:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$3819_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2425,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2424,
                      "name": "Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3819,
                      "src": "27165:7:15"
                    },
                    "referencedDeclaration": 3819,
                    "src": "27165:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$3819_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2428,
                  "mutability": "mutable",
                  "name": "nowTime",
                  "nameLocation": "27197:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2452,
                  "src": "27189:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2427,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27189:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27164:41:15"
            },
            "returnParameters": {
              "id": 2432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2431,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2452,
                  "src": "27252:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2430,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "27252:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27251:6:15"
            },
            "scope": 2496,
            "src": "27139:298:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2470,
              "nodeType": "Block",
              "src": "27684:103:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2460,
                          "name": "newRentFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2454,
                          "src": "27702:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 2461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27715:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "27702:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a666565206578636565647320313030706374",
                        "id": 2463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27722:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_249b67412866a1c666e3a52f5a831898ae2505cc18668696837db60d72052507",
                          "typeString": "literal_string \"ReNFT::fee exceeds 100pct\""
                        },
                        "value": "ReNFT::fee exceeds 100pct"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_249b67412866a1c666e3a52f5a831898ae2505cc18668696837db60d72052507",
                          "typeString": "literal_string \"ReNFT::fee exceeds 100pct\""
                        }
                      ],
                      "id": 2459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27694:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27694:56:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2465,
                  "nodeType": "ExpressionStatement",
                  "src": "27694:56:15"
                },
                {
                  "expression": {
                    "id": 2468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2466,
                      "name": "rentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "27760:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2467,
                      "name": "newRentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2454,
                      "src": "27770:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27760:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2469,
                  "nodeType": "ExpressionStatement",
                  "src": "27760:20:15"
                }
              ]
            },
            "functionSelector": "76774ea3",
            "id": 2471,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2457,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2456,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66,
                  "src": "27674:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "27674:9:15"
              }
            ],
            "name": "setRentFee",
            "nameLocation": "27634:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2454,
                  "mutability": "mutable",
                  "name": "newRentFee",
                  "nameLocation": "27653:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2471,
                  "src": "27645:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27645:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27644:20:15"
            },
            "returnParameters": {
              "id": 2458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27684:0:15"
            },
            "scope": 2496,
            "src": "27625:162:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2482,
              "nodeType": "Block",
              "src": "27868:45:15",
              "statements": [
                {
                  "expression": {
                    "id": 2480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2478,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "27878:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2479,
                      "name": "newBeneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2473,
                      "src": "27892:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "27878:28:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2481,
                  "nodeType": "ExpressionStatement",
                  "src": "27878:28:15"
                }
              ]
            },
            "functionSelector": "1c31f710",
            "id": 2483,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2476,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2475,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66,
                  "src": "27858:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "27858:9:15"
              }
            ],
            "name": "setBeneficiary",
            "nameLocation": "27802:14:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2473,
                  "mutability": "mutable",
                  "name": "newBeneficiary",
                  "nameLocation": "27833:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2483,
                  "src": "27817:30:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27817:15:15",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27816:32:15"
            },
            "returnParameters": {
              "id": 2477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27868:0:15"
            },
            "scope": 2496,
            "src": "27793:120:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2494,
              "nodeType": "Block",
              "src": "27973:35:15",
              "statements": [
                {
                  "expression": {
                    "id": 2492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2490,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "27983:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2491,
                      "name": "newPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2485,
                      "src": "27992:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "27983:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2493,
                  "nodeType": "ExpressionStatement",
                  "src": "27983:18:15"
                }
              ]
            },
            "functionSelector": "16c38b3c",
            "id": 2495,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2488,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2487,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66,
                  "src": "27963:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "27963:9:15"
              }
            ],
            "name": "setPaused",
            "nameLocation": "27928:9:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2485,
                  "mutability": "mutable",
                  "name": "newPaused",
                  "nameLocation": "27943:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2495,
                  "src": "27938:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2484,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "27938:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27937:16:15"
            },
            "returnParameters": {
              "id": 2489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27973:0:15"
            },
            "scope": 2496,
            "src": "27919:89:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2497,
        "src": "2113:25897:15",
        "usedErrors": []
      }
    ],
    "src": "32:29257:15"
  },
  "bytecode": "6080604052600160038190556004556005805460ff1916905560006006553480156200002a57600080fd5b5060405162004cc038038062004cc08339810160408190526200004d916200010f565b6200005883620000b1565b6200006382620000b1565b6200006e81620000b1565b600080546001600160a01b039485166001600160a01b03199182161790915560028054938516938216939093179092556001805491909316911617905562000179565b6001600160a01b0381166200010c5760405162461bcd60e51b815260206004820152601360248201527f52654e46543a3a7a65726f206164647265737300000000000000000000000000604482015260640160405180910390fd5b50565b6000806000606084860312156200012557600080fd5b8351620001328162000163565b6020850151909350620001458162000163565b6040850151909250620001588162000163565b809150509250925092565b6001600160a01b03811681146200010c57600080fd5b614b3780620001896000396000f3fe6080604052600436106100f35760003560e01c806376774ea31161008a578063c9c4018311610059578063c9c4018314610315578063cbe55e5414610335578063f23a6e6114610348578063fe46b7cd1461037457600080fd5b806376774ea314610285578063937821a1146102a5578063bc197c81146102c5578063bf2b23ea146102f157600080fd5b80631c31f710116100c65780631c31f710146101b35780631cbb410f146101d3578063296c21b7146101f35780635c975abb1461026b57600080fd5b806301ffc9a7146100f857806314b5685c1461012d578063150b7a021461014f57806316c38b3c14610193575b600080fd5b34801561010457600080fd5b50610118610113366004614581565b6103cf565b60405190151581526020015b60405180910390f35b34801561013957600080fd5b5061014d610148366004614275565b610406565b005b34801561015b57600080fd5b5061017a61016a3660046140cd565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610124565b34801561019f57600080fd5b5061014d6101ae366004614547565b610451565b3480156101bf57600080fd5b5061014d6101ce366004614003565b61048e565b3480156101df57600080fd5b5061014d6101ee366004614339565b6104da565b3480156101ff57600080fd5b5061021361020e3660046141a0565b61051b565b6040805160ff98891681526001600160a01b039097166020880152948716948601949094526001600160e01b0319909216606085015261ffff90811660808501521660a08301529190911660c082015260e001610124565b34801561027757600080fd5b506005546101189060ff1681565b34801561029157600080fd5b5061014d6102a036600461459c565b6105f1565b3480156102b157600080fd5b5061014d6102c0366004614275565b610671565b3480156102d157600080fd5b5061017a6102e0366004614020565b63bc197c8160e01b95945050505050565b3480156102fd57600080fd5b5061030760065481565b604051908152602001610124565b34801561032157600080fd5b5061014d6103303660046141d5565b6106a7565b61014d610343366004614453565b61070e565b34801561035457600080fd5b5061017a610363366004614138565b63f23a6e6160e01b95945050505050565b34801561038057600080fd5b5061039461038f3660046141a0565b61074d565b604080516001600160a01b03909516855261ffff909316602085015260ff9091169183019190915263ffffffff166060820152608001610124565b60006001600160e01b03198216630271189760e51b148061040057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60055460ff16156104325760405162461bcd60e51b8152600401610429906147e8565b60405180910390fd5b61044a6107cb6104458787878787610d6d565b610ef3565b5050505050565b6001546001600160a01b0316331461047b5760405162461bcd60e51b81526004016104299061480f565b6005805460ff1916911515919091179055565b6001546001600160a01b031633146104b85760405162461bcd60e51b81526004016104299061480f565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60055460ff16156104fd5760405162461bcd60e51b8152600401610429906147e8565b610512611028610445898989898989896115cb565b50505050505050565b6000806000806000806000808a8a8a60405160200161053c9392919061460d565b60408051601f19818403018152918152815160209283012060008181526007909352912080549192509060ff16600181111561057a5761057a614a8d565b81546001600160a01b036101008204169060ff600160a81b8204811691600160b01b810460e01b9161ffff600160d01b8304811692600160e01b810490911691600160f01b9091041660038111156105d4576105d4614a8d565b985098509850985098509850985050509397509397509397909450565b6001546001600160a01b0316331461061b5760405162461bcd60e51b81526004016104299061480f565b612710811061066c5760405162461bcd60e51b815260206004820152601960248201527f52654e46543a3a666565206578636565647320313030706374000000000000006044820152606401610429565b600655565b60055460ff16156106945760405162461bcd60e51b8152600401610429906147e8565b61044a6116fb6104458787878787610d6d565b60055460ff16156106ca5760405162461bcd60e51b8152600401610429906147e8565b610708611b02610445868686866000604051908082528060200260200182016040528015610702578160200160208202803683370190505b50610d6d565b50505050565b60055460ff16156107315760405162461bcd60e51b8152600401610429906147e8565b610745611ebb61044588888888888861263c565b505050505050565b600080600080600087878760405160200161076a9392919061460d565b60408051808303601f190181529181528151602092830120600090815260089092529020546001600160a01b03811699600160c81b820461ffff169950600160a01b820460ff169850600160a81b90910463ffffffff169650945050505050565b80515b8160200151811015610d6957600082606001518360000151815181106107f6576107f6614aa3565b60200260200101518360800151838151811061081457610814614aa3565b6020026020010151846101000151848151811061083357610833614aa3565b602002602001015160405160200161084d9392919061460d565b6040516020818303038152906040528051906020012090506000836060015184600001518151811061088157610881614aa3565b60200260200101518460800151848151811061089f5761089f614aa3565b602002602001015185610120015185815181106108be576108be614aa3565b60200260200101516040516020016108d89392919061460d565b60408051601f198184030181528282528051602091820120600086815260078352838120828252600890935283902060e08501909352815490945090926109d9918490829060ff16600181111561093157610931614a8d565b600181111561094257610942614a8d565b815281546001600160a01b03610100820416602083015260ff600160a81b8204811660408401526001600160e01b0319600160b01b830460e01b16606084015261ffff600160d01b830481166080850152600160e01b83041660a084015260c090920191600160f01b9091041660038111156109c0576109c0614a8d565b60038111156109d1576109d1614a8d565b90525061275e565b6040805160808101825282546001600160a01b0381168252600160a01b810460ff166020830152600160a81b810463ffffffff1692820192909252600160c81b90910461ffff166060820152610a2e906127e1565b6040805160808101825282546001600160a01b0381168252600160a01b810460ff166020830152600160a81b810463ffffffff1692820192909252600160c81b90910461ffff166060820152610a85903342612867565b815460ff166001811115610a9b57610a9b614a8d565b86604001518681518110610ab157610ab1614aa3565b60200260200101516001811115610aca57610aca614a8d565b14610ae75760405162461bcd60e51b815260040161042990614743565b81548154600160d01b90910461ffff908116600160c81b909204161115610b485760405162461bcd60e51b81526020600482015260156024820152742932a7232a1d1d31b934ba34b1b0b61032b93937b960591b6044820152606401610429565b8054600090610b6490600160a81b900463ffffffff1642614a19565b6040805160e081019091528454919250610c85918590829060ff166001811115610b9057610b90614a8d565b6001811115610ba157610ba1614a8d565b815281546001600160a01b03610100820416602083015260ff600160a81b8204811660408401526001600160e01b0319600160b01b830460e01b16606084015261ffff600160d01b830481166080850152600160e01b83041660a084015260c090920191600160f01b909104166003811115610c1f57610c1f614a8d565b6003811115610c3057610c30614a8d565b9052506040805160808101825285546001600160a01b0381168252600160a01b810460ff166020830152600160a81b810463ffffffff1692820192909252600160c81b90910461ffff1660608201528361291c565b81546000868152600760205260409020805461ffff600160c81b909304831692601c91610cbb918591600160e01b90041661488c565b92506101000a81548161ffff021916908361ffff1602179055508661012001518681518110610cec57610cec614aa3565b60200260200101517f58855dd8908b14c6d7922d964418f37efd968bc6b9b857560870b14a898f916d42604051610d2f919063ffffffff91909116815260200190565b60405180910390a2505050600090815260086020526040902080546001600160d81b03191690555080610d6181614a5c565b9150506107ce565b5050565b610d75613c5f565b604051806101a00160405280600081526020016001815260200187815260200186815260200185815260200160006001600160401b03811115610dba57610dba614ab9565b604051908082528060200260200182016040528015610de3578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015610e14578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015610e45578160200160208202803683370190505b50815260208101859052604081018490526060016000604051908082528060200260200182016040528015610e84578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015610eb5578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015610ee6578160200160208202803683370190505b5090529695505050505050565b600081606001515111610f395760405162461bcd60e51b815260206004820152600e60248201526d52654e46543a3a6e6f206e66747360901b6044820152606401610429565b80606001515181602001511461101b578060600151816020015181518110610f6357610f63614aa3565b60200260200101516001600160a01b03168160600151826000015181518110610f8e57610f8e614aa3565b60200260200101516001600160a01b0316148015610fde575060018160400151826020015181518110610fc357610fc3614aa3565b60200260200101516001811115610fdc57610fdc614a8d565b145b15610ffb5760208101805190610ff382614a5c565b905250610f39565b611008818363ffffffff16565b60208101805180835290610ff382614a5c565b610d69818363ffffffff16565b80515b816020015181101561158a576110418282612bc1565b6000826060015183600001518151811061105d5761105d614aa3565b60200260200101518360800151838151811061107b5761107b614aa3565b60200260200101516003546040516020016110989392919061460d565b60408051601f198184030181528282528051602091820120600081815260079092529082902060e0840190925281549093509091611190918390829060ff1660018111156110e8576110e8614a8d565b60018111156110f9576110f9614a8d565b815281546001600160a01b03610100820416602083015260ff600160a81b8204811660408401526001600160e01b0319600160b01b830460e01b16606084015261ffff600160d01b830481166080850152600160e01b83041660a084015260c090920191600160f01b90910416600381111561117757611177614a8d565b600381111561118857611188614a8d565b905250612d7f565b6111c884610180015184815181106111aa576111aa614aa3565b602002602001015160038111156111c3576111c3614a8d565b612e38565b600080856040015185815181106111e1576111e1614aa3565b602002602001015160018111156111fa576111fa614a8d565b1490506040518060e001604052808660400151868151811061121e5761121e614aa3565b6020026020010151600181111561123757611237614a8d565b8152602001336001600160a01b031681526020018660c00151868151811061126157611261614aa3565b602002602001015160ff1681526020018660e00151868151811061128757611287614aa3565b60200260200101516001600160e01b0319168152602001826112c6578660a0015186815181106112b9576112b9614aa3565b60200260200101516112c9565b60015b61ffff168152602001826112fa578660a0015186815181106112ed576112ed614aa3565b60200260200101516112fd565b60015b61ffff168152602001866101800151868151811061131d5761131d614aa3565b6020026020010151600381111561133657611336614a8d565b9052600084815260076020526040902081518154829060ff19166001838181111561136357611363614a8d565b02179055506020820151815460408401516060850151608086015160a0870151610100600160b01b03199094166101006001600160a01b039096169590950260ff60a81b191694909417600160a81b60ff909316929092029190911765ffffffffffff60b01b1916600160b01b60e09290921c9190910261ffff60d01b191617600160d01b61ffff938416021761ffff60e01b198116600160e01b9390921692909202908117835560c084015191839162ffffff60e01b1990911660ff60f01b1990911617600160f01b83600381111561143f5761143f614a8d565b02179055509050508460800151848151811061145d5761145d614aa3565b6020026020010151856060015186600001518151811061147f5761147f614aa3565b60200260200101516001600160a01b0316336001600160a01b03167f46e173c7568bb4f093e16923381dcba2a6b48f9cc9e688867965731218500ad3846003548a60c001518a815181106114d5576114d5614aa3565b60200260200101518b60e001518b815181106114f3576114f3614aa3565b602002602001015188611523578c60a001518c8151811061151657611516614aa3565b6020026020010151611526565b60015b8d61018001518d8151811061153d5761153d614aa3565b6020026020010151604051611557969594939291906146ae565b60405180910390a46003805490600061156f83614a5c565b9190505550505050808061158290614a5c565b91505061102b565b506115c88133306115aa8560800151866000015187602001516000612e8b565b6115c38660a00151876000015188602001516000612e8b565b612f4a565b50565b6115d3613c5f565b604051806101a00160405280600081526020016001815260200189815260200188815260200187815260200186815260200185815260200184815260200160006001600160401b0381111561162a5761162a614ab9565b604051908082528060200260200182016040528015611653578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015611684578160200160208202803683370190505b50815260200160006040519080825280602002602001820160405280156116b5578160200160208202803683370190505b50815260200160006040519080825280602002602001820160405280156116e6578160200160208202803683370190505b50815260200192909252509695505050505050565b80515b8160200151811015610d69576000826060015183600001518151811061172657611726614aa3565b60200260200101518360800151838151811061174457611744614aa3565b6020026020010151846101000151848151811061176357611763614aa3565b602002602001015160405160200161177d9392919061460d565b604051602081830303815290604052805190602001209050600083606001518460000151815181106117b1576117b1614aa3565b6020026020010151846080015184815181106117cf576117cf614aa3565b602002602001015185610120015185815181106117ee576117ee614aa3565b60200260200101516040516020016118089392919061460d565b60408051601f198184030181528282528051602091820120600086815260078352838120828252600890935283902060e0850190935281549094509092611861918490829060ff16600181111561093157610931614a8d565b6040805160808101825282546001600160a01b0381168252600160a01b810460ff166020830152600160a81b810463ffffffff1692820192909252600160c81b90910461ffff1660608201526118b6906127e1565b6040805160808101825282546001600160a01b0381168252600160a01b810460ff166020830152600160a81b810463ffffffff1692820192909252600160c81b90910461ffff16606082015261190c90426130cb565b6040805160e081019091528254611a2a91908490829060ff16600181111561193657611936614a8d565b600181111561194757611947614a8d565b815281546001600160a01b03610100820416602083015260ff600160a81b8204811660408401526001600160e01b0319600160b01b830460e01b16606084015261ffff600160d01b830481166080850152600160e01b83041660a084015260c090920191600160f01b9091041660038111156119c5576119c5614a8d565b60038111156119d6576119d6614a8d565b9052506040805160808101825284546001600160a01b0381168252600160a01b810460ff166020830152600160a81b810463ffffffff1692820192909252600160c81b90910461ffff166060820152613121565b8054825461ffff600160c81b9092048216918491601c91611a55918591600160e01b9091041661488c565b92506101000a81548161ffff021916908361ffff1602179055508561012001518581518110611a8657611a86614aa3565b60200260200101517f4630b53a4335803b2a4f9c1ce896f4cadbf909907810e496eda17614483d7b9442604051611ac9919063ffffffff91909116815260200190565b60405180910390a25050600090815260086020526040902080546001600160d81b03191690555080611afa81614a5c565b9150506116fe565b80516020820151600091611b1591614a19565b6001600160401b03811115611b2c57611b2c614ab9565b604051908082528060200260200182016040528015611b55578160200160208202803683370190505b5082519091505b8260200151811015611e885760008360600151846000015181518110611b8457611b84614aa3565b602002602001015184608001518381518110611ba257611ba2614aa3565b60200260200101518561010001518481518110611bc157611bc1614aa3565b6020026020010151604051602001611bdb9392919061460d565b60408051601f198184030181528282528051602091820120600081815260079092529082902060e0840190925281549093509091611c2b918390829060ff16600181111561093157610931614a8d565b6040805160e081019091528154611cfe91908390829060ff166001811115611c5557611c55614a8d565b6001811115611c6657611c66614a8d565b815281546001600160a01b03610100820416602083015260ff600160a81b8204811660408401526001600160e01b0319600160b01b830460e01b16606084015261ffff600160d01b830481166080850152600160e01b83041660a084015260c090920191600160f01b909104166003811115611ce457611ce4614a8d565b6003811115611cf557611cf5614a8d565b905250336132d3565b805460ff166001811115611d1457611d14614a8d565b85604001518481518110611d2a57611d2a614aa3565b60200260200101516001811115611d4357611d43614a8d565b14611d605760405162461bcd60e51b815260040161042990614743565b8054600160d01b810461ffff908116600160e01b9092041614611dbe5760405162461bcd60e51b815260206004820152601660248201527514995391950e8e9858dd1a5d995b1e481c995b9d195960521b6044820152606401610429565b80548551600160d01b90910461ffff16908590611ddb9086614a19565b81518110611deb57611deb614aa3565b6020026020010181815250508461010001518381518110611e0e57611e0e614aa3565b60200260200101517fd0234bc8dd7e933f60cbc1e90fc139a8a9683af1cb92743607dafb9dfb70059b42604051611e51919063ffffffff91909116815260200190565b60405180910390a250600090815260076020526040902080546001600160f81b031916905580611e8081614a5c565b915050611b5c565b50610d69823033611ea88660800151876000015188602001516000612e8b565b865160208801516115c391889181612e8b565b80515b8160200151811015610d695760008260600151836000015181518110611ee657611ee6614aa3565b602002602001015183608001518381518110611f0457611f04614aa3565b60200260200101518461010001518481518110611f2357611f23614aa3565b6020026020010151604051602001611f3d9392919061460d565b60405160208183030381529060405280519060200120905060008360600151846000015181518110611f7157611f71614aa3565b602002602001015184608001518481518110611f8f57611f8f614aa3565b6020026020010151600454604051602001611fac9392919061460d565b60408051601f198184030181528282528051602091820120600086815260078352838120828252600890935283902060e0850190935281549094509092612005918490829060ff16600181111561093157610931614a8d565b6040805160808101825282546001600160a01b0381168252600160a01b810460ff166020830152600160a81b810463ffffffff1692820192909252600160c81b90910461ffff16606082015261205a9061332c565b6040805160e08101909152825461212f91908490829060ff16600181111561208457612084614a8d565b600181111561209557612095614a8d565b815281546001600160a01b03610100820416602083015260ff600160a81b8204811660408401526001600160e01b0319600160b01b830460e01b16606084015261ffff600160d01b830481166080850152600160e01b83041660a084015260c090920191600160f01b90910416600381111561211357612113614a8d565b600381111561212457612124614a8d565b9052508787336133df565b815460ff16600181111561214557612145614a8d565b8660400151868151811061215b5761215b614aa3565b6020026020010151600181111561217457612174614a8d565b146121915760405162461bcd60e51b815260040161042990614743565b81546101608701518051600160e01b90920461ffff1691879081106121b8576121b8614aa3565b6020026020010151111561220e5760405162461bcd60e51b815260206004820152601a60248201527f52654e46543a3a696e76616c69642072656e7420616d6f756e740000000000006044820152606401610429565b8154600090600160f01b900460ff16600381111561222e5761222e614a8d565b6000805460405163c6ee427f60e01b815260ff8416600482015292935090916001600160a01b039091169063c6ee427f9060240160206040518083038186803b15801561227a57600080fd5b505afa15801561228e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122b29190613fe6565b90506000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156122ef57600080fd5b505afa158015612303573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061232791906145b5565b60ff169050600061233982600a61492f565b865490915060009061235590600160b01b900460e01b8361364a565b8b61014001518b8151811061236c5761236c614aa3565b602002602001015160ff168c61016001518c8151811061238e5761238e614aa3565b60200260200101516123a091906149d7565b6123aa91906149d7565b9050600081116123cc5760405162461bcd60e51b8152600401610429906147b1565b6123e16001600160a01b0385163330846136d9565b50506040518060800160405280336001600160a01b031681526020018a61014001518a8151811061241457612414614aa3565b602002602001015160ff1681526020014263ffffffff1681526020018a61016001518a8151811061244757612447614aa3565b60209081029190910181015161ffff908116909252600089815260088252604090819020845181549386015192860151606090960151909416600160c81b0261ffff60c81b1963ffffffff909616600160a81b029590951665ffffffffffff60a81b1960ff909316600160a01b026001600160a81b03199094166001600160a01b03909516949094179290921716919091179190911790556101608901518051899081106124f7576124f7614aa3565b6020908102919091018101516000898152600790925260409091208054601c9061252d908490600160e01b900461ffff166149f6565b92506101000a81548161ffff021916908361ffff160217905550600454896101000151898151811061256157612561614aa3565b6020026020010151336001600160a01b03167f61e1a1e6f89eaba4ba0119b0023bd32b1bb0412ab96ccd8d0588a3e98a0976318c61016001518c815181106125ab576125ab614aa3565b60200260200101518d61014001518d815181106125ca576125ca614aa3565b6020908102919091018101518a546040805161ffff909516855260ff90921692840192909252600160a81b90910463ffffffff169082015260600160405180910390a46004805490600061261d83614a5c565b919050555050505050505050808061263490614a5c565b915050611ebe565b612644613c5f565b604051806101a00160405280600081526020016001815260200188815260200187815260200186815260200160006001600160401b0381111561268957612689614ab9565b6040519080825280602002602001820160405280156126b2578160200160208202803683370190505b50815260200160006040519080825280602002602001820160405280156126e3578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015612714578160200160208202803683370190505b5081526020808201969096526040805160008082528189018352828401919091526060830196909652608082019490945283519485529484019092525060a0909201529392505050565b61276b8160200151613744565b604081015160ff166127b65760405162461bcd60e51b815260206004820152601460248201527352654e46543a3a6475726174696f6e207a65726f60601b6044820152606401610429565b60608101516001600160e01b0319166115c85760405162461bcd60e51b8152600401610429906147b1565b80516127ec90613744565b602081015160ff166128105760405162461bcd60e51b81526004016104299061477a565b604081015163ffffffff166115c85760405162461bcd60e51b815260206004820152601860248201527f52654e46543a3a72656e746564206174206973207a65726f00000000000000006044820152606401610429565b816001600160a01b031683600001516001600160a01b0316146128c05760405162461bcd60e51b81526020600482015260116024820152702932a7232a1d1d3737ba103932b73a32b960791b6044820152606401610429565b6128ca8382613790565b156129175760405162461bcd60e51b815260206004820152601760248201527f52654e46543a3a706173742072657475726e20646174650000000000000000006044820152606401610429565b505050565b60008360c00151600381111561293457612934614a8d565b6000805460405163c6ee427f60e01b815260ff8416600482015292935090916001600160a01b039091169063c6ee427f9060240160206040518083038186803b15801561298057600080fd5b505afa158015612994573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129b89190613fe6565b90506000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156129f557600080fd5b505afa158015612a09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a2d91906145b5565b60ff1690506000612a3f82600a61492f565b90506000612a5188606001518361364a565b876060015161ffff16612a6491906149d7565b90506000876020015160ff1682612a7b91906149d7565b9050600062015180612a8d848a6149d7565b612a9791906148ca565b905060008211612af55760405162461bcd60e51b815260206004820152602360248201527f52654e46543a3a746f74616c2072656e746572207061796d656e74206973207a60448201526265726f60e81b6064820152608401610429565b60008111612b455760405162461bcd60e51b815260206004820152601d60248201527f52654e46543a3a6c656e646572207061796d656e74206973207a65726f0000006044820152606401610429565b6000612b518284614a19565b9050600654600014612b7d576000612b6d838d60c0015161381e565b9050612b798184614a19565b9250505b60208b0151612b97906001600160a01b03891690846138fb565b8015612bb4578951612bb4906001600160a01b03891690836138fb565b5050505050505050505050565b60008260a001518281518110612bd957612bd9614aa3565b602002602001015111612c2e5760405162461bcd60e51b815260206004820152601a60248201527f52654e46543a3a6c656e6420616d6f756e74206973207a65726f0000000000006044820152606401610429565b61ffff80168260a001518281518110612c4957612c49614aa3565b60200260200101511115612c935760405162461bcd60e51b81526020600482015260116024820152702932a7232a1d1d3737ba103ab4b73a189b60791b6044820152606401610429565b60008260c001518281518110612cab57612cab614aa3565b602002602001015160ff1611612cd35760405162461bcd60e51b81526004016104299061477a565b60ff80168260c001518281518110612ced57612ced614aa3565b602002602001015160ff161115612d395760405162461bcd60e51b815260206004820152601060248201526f0a4ca9c8ca87474dcdee840ead2dce8760831b6044820152606401610429565b60008260e001518281518110612d5157612d51614aa3565b602002602001015160e01c63ffffffff1611610d695760405162461bcd60e51b8152600401610429906147b1565b612d8c816020015161392b565b604081015160ff1615612ddc5760405162461bcd60e51b815260206004820152601860248201527752654e46543a3a6475726174696f6e206e6f74207a65726f60401b6044820152606401610429565b60608101516001600160e01b031916156115c85760405162461bcd60e51b815260206004820152601a60248201527f52654e46543a3a72656e74207072696365206e6f74207a65726f0000000000006044820152606401610429565b60008160ff16116115c85760405162461bcd60e51b815260206004820152601860248201527f52654e46543a3a746f6b656e2069732073656e74696e656c00000000000000006044820152606401610429565b6060612e978484614a19565b6001600160401b03811115612eae57612eae614ab9565b604051908082528060200260200182016040528015612ed7578160200160208202803683370190505b509050835b83811015612f415785612eef8483614a19565b81518110612eff57612eff614aa3565b6020026020010151828683612f149190614a19565b81518110612f2457612f24614aa3565b602090810291909101015280612f3981614a5c565b915050612edc565b50949350505050565b60006040860151865181518110612f6357612f63614aa3565b60200260200101516001811115612f7c57612f7c614a8d565b1415613042576060850151855181518110612f9957612f99614aa3565b60200260200101516001600160a01b03166323b872dd85858860800151896000015181518110612fcb57612fcb614aa3565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561302557600080fd5b505af1158015613039573d6000803e3d6000fd5b5050505061044a565b606085015185518151811061305957613059614aa3565b60200260200101516001600160a01b0316632eb2c2d6858585856040518563ffffffff1660e01b81526004016130929493929190614653565b600060405180830381600087803b1580156130ac57600080fd5b505af11580156130c0573d6000803e3d6000fd5b505050505050505050565b6130d58282613790565b610d695760405162461bcd60e51b815260206004820152601d60248201527f52654e46543a3a72657475726e2064617465206e6f74207061737365640000006044820152606401610429565b60008260c00151600381111561313957613139614a8d565b6000805460405163c6ee427f60e01b815260ff8416600482015292935090916001600160a01b039091169063c6ee427f9060240160206040518083038186803b15801561318557600080fd5b505afa158015613199573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131bd9190613fe6565b90506000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156131fa57600080fd5b505afa15801561320e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061323291906145b5565b60ff169050600061324482600a61492f565b9050600061325687606001518361364a565b866060015161ffff1661326991906149d7565b90506000866020015160ff168261328091906149d7565b905060006006546000146132af576132ac828860ff1660038111156132a7576132a7614a8d565b61381e565b90505b60208901516130c0906132c28385614a19565b6001600160a01b03891691906138fb565b806001600160a01b031682602001516001600160a01b031614610d695760405162461bcd60e51b81526020600482015260116024820152702932a7232a1d1d3737ba103632b73232b960791b6044820152606401610429565b80516133379061392b565b602081015160ff16156133875760405162461bcd60e51b815260206004820152601860248201527752654e46543a3a6475726174696f6e206e6f74207a65726f60401b6044820152606401610429565b604081015163ffffffff16156115c85760405162461bcd60e51b815260206004820152601960248201527f52654e46543a3a72656e746564206174206e6f74207a65726f000000000000006044820152606401610429565b83602001516001600160a01b0316816001600160a01b031614156134455760405162461bcd60e51b815260206004820152601860248201527f52654e46543a3a63616e742072656e74206f776e206e667400000000000000006044820152606401610429565b60ff8016836101400151838151811061346057613460614aa3565b602002602001015160ff1611156134ac5760405162461bcd60e51b815260206004820152601060248201526f0a4ca9c8ca87474dcdee840ead2dce8760831b6044820152606401610429565b600083610140015183815181106134c5576134c5614aa3565b602002602001015160ff16116134ed5760405162461bcd60e51b81526004016104299061477a565b61ffff8016836101600151838151811061350957613509614aa3565b602002602001015111156135535760405162461bcd60e51b81526020600482015260116024820152702932a7232a1d1d3737ba103ab4b73a189b60791b6044820152606401610429565b6000836101600151838151811061356c5761356c614aa3565b6020026020010151116135c15760405162461bcd60e51b815260206004820152601960248201527f52654e46543a3a72656e74416d6f756e74206973207a65726f000000000000006044820152606401610429565b836040015160ff1683610140015183815181106135e0576135e0614aa3565b602002602001015160ff1611156107085760405162461bcd60e51b815260206004820152602860248201527f52654e46543a3a72656e74206475726174696f6e206578636565647320616c6c6044820152670deeecac840dac2f60c31b6064820152608401610429565b60006136568383613982565b60f083901c61ffff60e085901c166000613672612710866148ca565b905061270f8361ffff1611156136885761270f92505b61270f8261ffff16111561369c5761270f91505b60006136ac8661ffff86166149d7565b905060006136be8361ffff86166149d7565b905060006136cc82846148b2565b9998505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526107089085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613a13565b6001600160a01b0381166115c85760405162461bcd60e51b815260206004820152601360248201527252654e46543a3a7a65726f206164647265737360681b6044820152606401610429565b6000826040015163ffffffff1682116137eb5760405162461bcd60e51b815260206004820152601860248201527f52654e46543a3a6e6f77206265666f72652072656e74656400000000000000006044820152606401610429565b62015180836020015160ff1661380191906149d7565b60408401516138169063ffffffff1684614a19565b119392505050565b60006006548361382e91906149d7565b905061383c612710826148ca565b9050600082600381111561385257613852614a8d565b6000805460405163c6ee427f60e01b815260ff8416600482015292935090916001600160a01b039091169063c6ee427f9060240160206040518083038186803b15801561389e57600080fd5b505afa1580156138b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138d69190613fe6565b6002549091506138f3906001600160a01b038084169116856138fb565b505092915050565b6040516001600160a01b03831660248201526044810182905261291790849063a9059cbb60e01b9060640161370d565b6001600160a01b038116156115c85760405162461bcd60e51b815260206004820152601960248201527f52654e46543a3a6e6f742061207a65726f2061646472657373000000000000006044820152606401610429565b60e082901c6139ca5760405162461bcd60e51b815260206004820152601460248201527352654e46543a3a696e76616c696420707269636560601b6044820152606401610429565b612710811015610d695760405162461bcd60e51b815260206004820152601460248201527352654e46543a3a696e76616c6964207363616c6560601b6044820152606401610429565b6000613a68826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613ae59092919063ffffffff16565b8051909150156129175780806020019051810190613a869190614564565b6129175760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610429565b6060613af48484600085613afe565b90505b9392505050565b606082471015613b5f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610429565b843b613bad5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610429565b600080866001600160a01b03168587604051613bc99190614637565b60006040518083038185875af1925050503d8060008114613c06576040519150601f19603f3d011682016040523d82523d6000602084013e613c0b565b606091505b5091509150613c1b828286613c26565b979650505050505050565b60608315613c35575081613af7565b825115613c455782518084602001fd5b8160405162461bcd60e51b81526004016104299190614710565b604051806101a00160405280600081526020016000815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b600082601f830112613cd857600080fd5b81356020613ced613ce883614869565b614839565b80838252828201915082860187848660051b8901011115613d0d57600080fd5b60005b85811015613d35578135613d2381614acf565b84529284019290840190600101613d10565b5090979650505050505050565b600082601f830112613d5357600080fd5b81356020613d63613ce883614869565b80838252828201915082860187848660051b8901011115613d8357600080fd5b60005b85811015613d3557613d9782613f5a565b84529284019290840190600101613d86565b600082601f830112613dba57600080fd5b81356020613dca613ce883614869565b80838252828201915082860187848660051b8901011115613dea57600080fd5b6000805b86811015613e1657823560028110613e04578283fd5b85529385019391850191600101613dee565b509198975050505050505050565b600082601f830112613e3557600080fd5b81356020613e45613ce883614869565b80838252828201915082860187848660051b8901011115613e6557600080fd5b6000805b86811015613e1657823560048110613e7f578283fd5b85529385019391850191600101613e69565b600082601f830112613ea257600080fd5b81356020613eb2613ce883614869565b80838252828201915082860187848660051b8901011115613ed257600080fd5b60005b85811015613d3557813584529284019290840190600101613ed5565b600082601f830112613f0257600080fd5b81356020613f12613ce883614869565b80838252828201915082860187848660051b8901011115613f3257600080fd5b60005b85811015613d35578135613f4881614af2565b84529284019290840190600101613f35565b80356001600160e01b031981168114613f7257600080fd5b919050565b600082601f830112613f8857600080fd5b81356001600160401b03811115613fa157613fa1614ab9565b613fb4601f8201601f1916602001614839565b818152846020838601011115613fc957600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215613ff857600080fd5b8151613af781614acf565b60006020828403121561401557600080fd5b8135613af781614acf565b600080600080600060a0868803121561403857600080fd5b853561404381614acf565b9450602086013561405381614acf565b935060408601356001600160401b038082111561406f57600080fd5b61407b89838a01613e91565b9450606088013591508082111561409157600080fd5b61409d89838a01613e91565b935060808801359150808211156140b357600080fd5b506140c088828901613f77565b9150509295509295909350565b600080600080608085870312156140e357600080fd5b84356140ee81614acf565b935060208501356140fe81614acf565b92506040850135915060608501356001600160401b0381111561412057600080fd5b61412c87828801613f77565b91505092959194509250565b600080600080600060a0868803121561415057600080fd5b853561415b81614acf565b9450602086013561416b81614acf565b9350604086013592506060860135915060808601356001600160401b0381111561419457600080fd5b6140c088828901613f77565b6000806000606084860312156141b557600080fd5b83356141c081614acf565b95602085013595506040909401359392505050565b600080600080608085870312156141eb57600080fd5b84356001600160401b038082111561420257600080fd5b61420e88838901613da9565b9550602087013591508082111561422457600080fd5b61423088838901613cc7565b9450604087013591508082111561424657600080fd5b61425288838901613e91565b9350606087013591508082111561426857600080fd5b5061412c87828801613e91565b600080600080600060a0868803121561428d57600080fd5b85356001600160401b03808211156142a457600080fd5b6142b089838a01613da9565b965060208801359150808211156142c657600080fd5b6142d289838a01613cc7565b955060408801359150808211156142e857600080fd5b6142f489838a01613e91565b9450606088013591508082111561430a57600080fd5b61431689838a01613e91565b9350608088013591508082111561432c57600080fd5b506140c088828901613e91565b600080600080600080600060e0888a03121561435457600080fd5b87356001600160401b038082111561436b57600080fd5b6143778b838c01613da9565b985060208a013591508082111561438d57600080fd5b6143998b838c01613cc7565b975060408a01359150808211156143af57600080fd5b6143bb8b838c01613e91565b965060608a01359150808211156143d157600080fd5b6143dd8b838c01613e91565b955060808a01359150808211156143f357600080fd5b6143ff8b838c01613ef1565b945060a08a013591508082111561441557600080fd5b6144218b838c01613d42565b935060c08a013591508082111561443757600080fd5b506144448a828b01613e24565b91505092959891949750929550565b60008060008060008060c0878903121561446c57600080fd5b86356001600160401b038082111561448357600080fd5b61448f8a838b01613da9565b975060208901359150808211156144a557600080fd5b6144b18a838b01613cc7565b965060408901359150808211156144c757600080fd5b6144d38a838b01613e91565b955060608901359150808211156144e957600080fd5b6144f58a838b01613e91565b9450608089013591508082111561450b57600080fd5b6145178a838b01613ef1565b935060a089013591508082111561452d57600080fd5b5061453a89828a01613e91565b9150509295509295509295565b60006020828403121561455957600080fd5b8135613af781614ae4565b60006020828403121561457657600080fd5b8151613af781614ae4565b60006020828403121561459357600080fd5b613af782613f5a565b6000602082840312156145ae57600080fd5b5035919050565b6000602082840312156145c757600080fd5b8151613af781614af2565b600081518084526020808501945080840160005b83811015614602578151875295820195908201906001016145e6565b509495945050505050565b60609390931b6bffffffffffffffffffffffff191683526014830191909152603482015260540190565b60008251614649818460208701614a30565b9190910192915050565b6001600160a01b0385811682528416602082015260a06040820181905260009061467f908301856145d2565b828103606084015261469181856145d2565b838103608090940193909352505060008152602001949350505050565b86151581526020810186905260ff851660408201526001600160e01b03198416606082015261ffff8316608082015260c08101600483106146ff57634e487b7160e01b600052602160045260246000fd5b8260a0830152979650505050505050565b602081526000825180602084015261472f816040850160208701614a30565b601f01601f19169190910160400192915050565b6020808252601b908201527f52654e46543a3a696e76616c6964206e6674207374616e646172640000000000604082015260600190565b60208082526017908201527f52654e46543a3a6475726174696f6e206973207a65726f000000000000000000604082015260600190565b60208082526019908201527f52654e46543a3a72656e74207072696365206973207a65726f00000000000000604082015260600190565b6020808252600d908201526c14995391950e8e9c185d5cd959609a1b604082015260600190565b60208082526010908201526f2932a7232a1d1d3737ba1030b236b4b760811b604082015260600190565b604051601f8201601f191681016001600160401b038111828210171561486157614861614ab9565b604052919050565b60006001600160401b0382111561488257614882614ab9565b5060051b60200190565b600061ffff8083168185168083038211156148a9576148a9614a77565b01949350505050565b600082198211156148c5576148c5614a77565b500190565b6000826148e757634e487b7160e01b600052601260045260246000fd5b500490565b600181815b8085111561492757816000190482111561490d5761490d614a77565b8085161561491a57918102915b93841c93908002906148f1565b509250929050565b6000613af7838360008261494557506001610400565b8161495257506000610400565b816001811461496857600281146149725761498e565b6001915050610400565b60ff84111561498357614983614a77565b50506001821b610400565b5060208310610133831016604e8410600b84101617156149b1575081810a610400565b6149bb83836148ec565b80600019048211156149cf576149cf614a77565b029392505050565b60008160001904831182151516156149f1576149f1614a77565b500290565b600061ffff83811690831681811015614a1157614a11614a77565b039392505050565b600082821015614a2b57614a2b614a77565b500390565b60005b83811015614a4b578181015183820152602001614a33565b838111156107085750506000910152565b6000600019821415614a7057614a70614a77565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146115c857600080fd5b80151581146115c857600080fd5b60ff811681146115c857600080fdfea2646970667358221220ec038d9cd55ac9f9fee5cd426853e07e138f4e888a855918789cdbf2dbd5ba3264736f6c63430008070033",
  "bytecodeSha1": "b46e04f641b74e5fd5c0e57959df5e36e8dc1336",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "Registry",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "10": {},
      "11": {
        "Address.functionCallWithValue": {
          "178": [
            4745,
            4775,
            true
          ]
        },
        "Address.verifyCallResult": {
          "179": [
            7335,
            7342,
            false
          ],
          "180": [
            7476,
            7497,
            false
          ]
        }
      },
      "12": {},
      "13": {},
      "14": {},
      "15": {
        "Registry.bundleCall": {
          "133": [
            14608,
            14632,
            true
          ]
        },
        "Registry.distributeClaimPayment": {
          "162": [
            17251,
            17263,
            false
          ]
        },
        "Registry.distributePayments": {
          "148": [
            16119,
            16137,
            true
          ],
          "149": [
            16195,
            16212,
            true
          ],
          "150": [
            16324,
            16336,
            false
          ],
          "151": [
            16554,
            16571,
            false
          ]
        },
        "Registry.ensureIsClaimable": {
          "161": [
            27030,
            27071,
            true
          ]
        },
        "Registry.ensureIsLendable": {
          "152": [
            24957,
            24977,
            true
          ],
          "153": [
            25026,
            25062,
            true
          ],
          "154": [
            25102,
            25127,
            true
          ],
          "155": [
            25173,
            25213,
            true
          ],
          "156": [
            25252,
            25284,
            true
          ]
        },
        "Registry.ensureIsNotNull": {
          "142": [
            24200,
            24228,
            true
          ],
          "143": [
            24271,
            24298,
            true
          ],
          "144": [
            24735,
            24760,
            true
          ],
          "145": [
            24806,
            24827,
            true
          ]
        },
        "Registry.ensureIsNotZeroAddr": {
          "174": [
            23609,
            23627,
            true
          ]
        },
        "Registry.ensureIsNull": {
          "157": [
            23922,
            23950,
            true
          ],
          "158": [
            23997,
            24024,
            true
          ],
          "164": [
            24467,
            24492,
            true
          ],
          "165": [
            24539,
            24560,
            true
          ]
        },
        "Registry.ensureIsRentable": {
          "166": [
            25496,
            25530,
            true
          ],
          "167": [
            25577,
            25614,
            true
          ],
          "168": [
            25653,
            25675,
            true
          ],
          "169": [
            25721,
            25757,
            true
          ],
          "170": [
            25797,
            25817,
            true
          ],
          "171": [
            25878,
            25923,
            true
          ]
        },
        "Registry.ensureIsReturnable": {
          "146": [
            26158,
            26192,
            true
          ],
          "147": [
            26245,
            26287,
            true
          ]
        },
        "Registry.ensureIsStoppable": {
          "163": [
            26470,
            26504,
            true
          ]
        },
        "Registry.ensureIsUnpackablePrice": {
          "177": [
            26692,
            26706,
            true
          ]
        },
        "Registry.ensureIsZeroAddr": {
          "176": [
            23735,
            23753,
            true
          ]
        },
        "Registry.ensureTokenNotSentinel": {
          "159": [
            26824,
            26837,
            true
          ]
        },
        "Registry.handleLend": {
          "134": [
            6975,
            6980,
            true
          ],
          "135": [
            7046,
            7051,
            true
          ],
          "136": [
            7424,
            7429,
            true
          ]
        },
        "Registry.handleRent": {
          "139": [
            9957,
            9997,
            true
          ],
          "140": [
            10097,
            10140,
            true
          ],
          "141": [
            10650,
            10663,
            true
          ]
        },
        "Registry.handleStopLend": {
          "137": [
            8392,
            8432,
            true
          ],
          "138": [
            8532,
            8577,
            true
          ]
        },
        "Registry.handleStopRent": {
          "131": [
            12493,
            12533,
            true
          ],
          "132": [
            12633,
            12673,
            true
          ]
        },
        "Registry.isPastReturnDate": {
          "175": [
            27280,
            27306,
            true
          ]
        },
        "Registry.safeTransfer": {
          "160": [
            17686,
            17739,
            false
          ]
        },
        "Registry.setRentFee": {
          "130": [
            27702,
            27720,
            true
          ]
        },
        "Registry.unpackPrice": {
          "172": [
            22750,
            22762,
            false
          ],
          "173": [
            22814,
            22828,
            false
          ]
        }
      },
      "16": {},
      "17": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {
        "SafeERC20._callOptionalReturn": {
          "181": [
            3668,
            3689,
            false
          ],
          "182": [
            3752,
            3782,
            true
          ]
        }
      },
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "10": {},
      "11": {
        "Address.functionCall": {
          "124": [
            3618,
            3677
          ]
        },
        "Address.functionCallWithValue": {
          "125": [
            4737,
            4818
          ],
          "126": [
            4828,
            4888
          ],
          "127": [
            4982,
            5040
          ]
        },
        "Address.verifyCallResult": {
          "128": [
            7358,
            7375
          ],
          "129": [
            7802,
            7822
          ]
        }
      },
      "12": {},
      "13": {
        "ERC165.supportsInterface": {
          "1": [
            864,
            911
          ]
        }
      },
      "14": {},
      "15": {
        "Registry.bundleCall": {
          "24": [
            14600,
            14651
          ],
          "25": [
            14898,
            14908
          ],
          "26": [
            14947,
            14958
          ],
          "27": [
            14976,
            14994
          ],
          "28": [
            15012,
            15022
          ],
          "29": [
            15056,
            15067
          ]
        },
        "Registry.claimRent": {
          "9": [
            5638,
            5873
          ]
        },
        "Registry.createActionCallData": {
          "23": [
            21904,
            22421
          ]
        },
        "Registry.createLendCallData": {
          "38": [
            20254,
            20758
          ]
        },
        "Registry.createRentCallData": {
          "68": [
            21091,
            21606
          ]
        },
        "Registry.distributeClaimPayment": {
          "97": [
            17279,
            17393
          ],
          "98": [
            17413,
            17482
          ]
        },
        "Registry.distributePayments": {
          "77": [
            16111,
            16177
          ],
          "78": [
            16187,
            16246
          ],
          "79": [
            16429,
            16454
          ],
          "80": [
            16474,
            16540
          ],
          "81": [
            16587,
            16653
          ]
        },
        "Registry.ensureIsClaimable": {
          "96": [
            27009,
            27126
          ]
        },
        "Registry.ensureIsLendable": {
          "82": [
            24949,
            25008
          ],
          "83": [
            25018,
            25084
          ],
          "84": [
            25094,
            25155
          ],
          "85": [
            25165,
            25234
          ],
          "86": [
            25244,
            25314
          ]
        },
        "Registry.ensureIsNotNull": {
          "69": [
            24140,
            24182
          ],
          "70": [
            24192,
            24253
          ],
          "71": [
            24263,
            24328
          ],
          "72": [
            24675,
            24717
          ],
          "73": [
            24727,
            24788
          ],
          "74": [
            24798,
            24856
          ]
        },
        "Registry.ensureIsNotZeroAddr": {
          "113": [
            23601,
            23651
          ]
        },
        "Registry.ensureIsNull": {
          "87": [
            23865,
            23904
          ],
          "88": [
            23914,
            23979
          ],
          "89": [
            23989,
            24055
          ],
          "100": [
            24410,
            24449
          ],
          "101": [
            24459,
            24521
          ],
          "102": [
            24531,
            24590
          ]
        },
        "Registry.ensureIsRentable": {
          "103": [
            25488,
            25559
          ],
          "104": [
            25569,
            25635
          ],
          "105": [
            25645,
            25703
          ],
          "106": [
            25713,
            25779
          ],
          "107": [
            25789,
            25847
          ],
          "108": [
            25857,
            25989
          ]
        },
        "Registry.ensureIsReturnable": {
          "75": [
            26150,
            26214
          ],
          "76": [
            26224,
            26336
          ]
        },
        "Registry.ensureIsStoppable": {
          "99": [
            26462,
            26526
          ]
        },
        "Registry.ensureIsUnpackablePrice": {
          "121": [
            26624,
            26674
          ],
          "122": [
            26684,
            26731
          ]
        },
        "Registry.ensureIsZeroAddr": {
          "120": [
            23727,
            23783
          ]
        },
        "Registry.ensureTokenNotSentinel": {
          "90": [
            26816,
            26866
          ]
        },
        "Registry.getLending": {
          "6": [
            18806,
            19081
          ]
        },
        "Registry.getRenting": {
          "12": [
            19531,
            19679
          ]
        },
        "Registry.handleClaimRent": {
          "39": [
            13852,
            13876
          ],
          "40": [
            13890,
            13914
          ],
          "41": [
            13928,
            13971
          ],
          "42": [
            13985,
            14025
          ],
          "43": [
            14039,
            14084
          ],
          "44": [
            14098,
            14212
          ],
          "45": [
            14226,
            14260
          ],
          "46": [
            13213,
            13216
          ]
        },
        "Registry.handleLend": {
          "30": [
            6195,
            6218
          ],
          "31": [
            6522,
            6543
          ],
          "32": [
            6557,
            6606
          ],
          "33": [
            6694,
            7147
          ],
          "34": [
            7161,
            7510
          ],
          "35": [
            7524,
            7535
          ],
          "36": [
            6176,
            6179
          ],
          "37": [
            7555,
            7759
          ]
        },
        "Registry.handleRent": {
          "56": [
            9801,
            9825
          ],
          "57": [
            9839,
            9860
          ],
          "58": [
            9874,
            9918
          ],
          "59": [
            9932,
            10058
          ],
          "60": [
            10072,
            10200
          ],
          "61": [
            10642,
            10693
          ],
          "62": [
            10711,
            10863
          ],
          "63": [
            10891,
            11161
          ],
          "64": [
            11175,
            11276
          ],
          "65": [
            11290,
            11523
          ],
          "66": [
            11537,
            11548
          ],
          "67": [
            9168,
            9171
          ]
        },
        "Registry.handleStopLend": {
          "47": [
            8277,
            8301
          ],
          "48": [
            8315,
            8353
          ],
          "49": [
            8367,
            8493
          ],
          "50": [
            8507,
            8633
          ],
          "51": [
            8647,
            8692
          ],
          "52": [
            8706,
            8771
          ],
          "53": [
            8785,
            8819
          ],
          "54": [
            7958,
            7961
          ],
          "55": [
            8839,
            9047
          ]
        },
        "Registry.handleStopRent": {
          "13": [
            12322,
            12346
          ],
          "14": [
            12360,
            12384
          ],
          "15": [
            12398,
            12454
          ],
          "16": [
            12468,
            12594
          ],
          "17": [
            12608,
            12728
          ],
          "18": [
            12822,
            12881
          ],
          "19": [
            12895,
            12960
          ],
          "20": [
            12974,
            13039
          ],
          "21": [
            13053,
            13087
          ],
          "22": [
            11683,
            11686
          ]
        },
        "Registry.isPastReturnDate": {
          "114": [
            27272,
            27335
          ],
          "115": [
            27345,
            27430
          ]
        },
        "Registry.lend": {
          "5": [
            3518,
            3813
          ]
        },
        "Registry.rent": {
          "11": [
            4601,
            4859
          ]
        },
        "Registry.safeTransfer": {
          "94": [
            17755,
            17892
          ],
          "95": [
            17923,
            18106
          ]
        },
        "Registry.setBeneficiary": {
          "4": [
            27878,
            27906
          ]
        },
        "Registry.setPaused": {
          "3": [
            27983,
            28001
          ]
        },
        "Registry.setRentFee": {
          "7": [
            27694,
            27750
          ],
          "8": [
            27760,
            27780
          ]
        },
        "Registry.sliceArr": {
          "91": [
            23200,
            23232
          ],
          "92": [
            23296,
            23330
          ],
          "93": [
            23277,
            23280
          ]
        },
        "Registry.stopLend": {
          "10": [
            4048,
            4288
          ]
        },
        "Registry.stopRent": {
          "2": [
            5131,
            5365
          ]
        },
        "Registry.takeFee": {
          "116": [
            15211,
            15234
          ],
          "117": [
            15244,
            15256
          ],
          "118": [
            15392,
            15431
          ]
        },
        "Registry.unpackPrice": {
          "109": [
            22553,
            22590
          ],
          "110": [
            22778,
            22790
          ],
          "111": [
            22844,
            22858
          ]
        }
      },
      "16": {},
      "17": {},
      "2": {},
      "3": {
        "ERC1155Receiver.supportsInterface": {
          "0": [
            430,
            526
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {},
      "7": {
        "SafeERC20._callOptionalReturn": {
          "123": [
            3744,
            3829
          ]
        },
        "SafeERC20.safeTransfer": {
          "119": [
            746,
            832
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "112": [
            983,
            1079
          ]
        }
      },
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC1155Holder",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC721Holder",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC721Receiver",
    "IRegistry",
    "IResolver",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/SafeERC20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "2113:25897:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;312:221:3;;;;;;;;;;-1:-1:-1;312:221:3;;;;;:::i;:::-;;:::i;:::-;;;18644:14:18;;18637:22;18619:41;;18607:2;18592:18;312:221:3;;;;;;;;4872:500:15;;;;;;;;;;-1:-1:-1;4872:500:15;;;;;:::i;:::-;;:::i;:::-;;517:200:10;;;;;;;;;;-1:-1:-1;517:200:10;;;;;:::i;:::-;-1:-1:-1;;;517:200:10;;;;;;;;;;-1:-1:-1;;;;;;19594:33:18;;;19576:52;;19564:2;19549:18;517:200:10;19432:202:18;27919:89:15;;;;;;;;;;-1:-1:-1;27919:89:15;;;;;:::i;:::-;;:::i;27793:120::-;;;;;;;;;;-1:-1:-1;27793:120:15;;;;;:::i;:::-;;:::i;3166:654::-;;;;;;;;;;-1:-1:-1;3166:654:15;;;;;:::i;:::-;;:::i;18311:777::-;;;;;;;;;;-1:-1:-1;18311:777:15;;;;;:::i;:::-;;:::i;:::-;;;;34153:4:18;34141:17;;;34123:36;;-1:-1:-1;;;;;34195:32:18;;;34190:2;34175:18;;34168:60;34264:17;;;34244:18;;;34237:45;;;;-1:-1:-1;;;;;;34318:33:18;;;34313:2;34298:18;;34291:61;34371:6;34414:15;;;34408:3;34393:19;;34386:44;34467:15;34215:3;34446:19;;34439:44;34520:17;;;;34514:3;34499:19;;34492:46;34110:3;34095:19;18311:777:15;33826:718:18;2398:26:15;;;;;;;;;;-1:-1:-1;2398:26:15;;;;;;;;27625:162;;;;;;;;;;-1:-1:-1;27625:162:15;;;;;:::i;:::-;;:::i;5378:502::-;;;;;;;;;;-1:-1:-1;5378:502:15;;;;;:::i;:::-;;:::i;404:247:2:-;;;;;;;;;;-1:-1:-1;404:247:2;;;;;:::i;:::-;-1:-1:-1;;;404:247:2;;;;;;;;2430:26:15;;;;;;;;;;;;;;;;;;;33404:25:18;;;33392:2;33377:18;2430:26:15;33258:177:18;3826:469:15;;;;;;;;;;-1:-1:-1;3826:469:15;;;;;:::i;:::-;;:::i;4301:565::-;;;;;;:::i;:::-;;:::i;179:219:2:-;;;;;;;;;;-1:-1:-1;179:219:2;;;;;:::i;:::-;-1:-1:-1;;;179:219:2;;;;;;;;19094:592:15;;;;;;;;;;-1:-1:-1;19094:592:15;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;17986:32:18;;;17968:51;;18067:6;18055:19;;;18050:2;18035:18;;18028:47;18123:4;18111:17;;;18091:18;;;18084:45;;;;18177:10;18165:23;18160:2;18145:18;;18138:51;17955:3;17940:19;19094:592:15;17745:450:18;312:221:3;414:4;-1:-1:-1;;;;;;437:49:3;;-1:-1:-1;;;437:49:3;;:89;;-1:-1:-1;;;;;;;;;;871:40:13;;;490:36:3;430:96;312:221;-1:-1:-1;;312:221:3:o;4872:500:15:-;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:15;;;;;;;:::i;:::-;;;;;;;;;5131:234:::1;5155:14;5183:172;5221:11;5250:10;5278:7;5303:10;5331;5183:20;:172::i;:::-;5131:10;:234::i;:::-;4872:500:::0;;;;;:::o;27919:89::-;2669:5;;-1:-1:-1;;;;;2669:5:15;2655:10;:19;2647:48;;;;-1:-1:-1;;;2647:48:15;;;;;;;:::i;:::-;27983:6:::1;:18:::0;;-1:-1:-1;;27983:18:15::1;::::0;::::1;;::::0;;;::::1;::::0;;27919:89::o;27793:120::-;2669:5;;-1:-1:-1;;;;;2669:5:15;2655:10;:19;2647:48;;;;-1:-1:-1;;;2647:48:15;;;;;;;:::i;:::-;27878:11:::1;:28:::0;;-1:-1:-1;;;;;;27878:28:15::1;-1:-1:-1::0;;;;;27878:28:15;;;::::1;::::0;;;::::1;::::0;;27793:120::o;3166:654::-;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:15;;;;;;;:::i;:::-;3518:295:::1;3542:10;3566:237;3602:11;3631:10;3659:7;3684:10;3712:15;3745:14;3777:12;3566:18;:237::i;3518:295::-;3166:654:::0;;;;;;;:::o;18311:777::-;18478:5;18497:7;18518:5;18537:6;18557;18577;18597:5;18627:18;18688:10;18700:7;18709:10;18671:49;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;18671:49:15;;;;;;;;;18648:82;;18671:49;18648:82;;;;18740:33;18776:20;;;:8;:20;;;;;18833:19;;18648:82;;-1:-1:-1;18776:20:15;18833:19;;;18827:26;;;;;;;:::i;:::-;18867:21;;-1:-1:-1;;;;;18867:21:15;;;;;18902:23;-1:-1:-1;;;18902:23:15;;;;;-1:-1:-1;;;18939:22:15;;;;;18975:18;-1:-1:-1;;;18975:18:15;;;;;-1:-1:-1;;;19007:23:15;;;;;;-1:-1:-1;;;19050:20:15;;;;19044:27;;;;;;;;:::i;:::-;18806:275;;;;;;;;;;;;;;;;18311:777;;;;;;;;;;;:::o;27625:162::-;2669:5;;-1:-1:-1;;;;;2669:5:15;2655:10;:19;2647:48;;;;-1:-1:-1;;;2647:48:15;;;;;;;:::i;:::-;27715:5:::1;27702:10;:18;27694:56;;;::::0;-1:-1:-1;;;27694:56:15;;20926:2:18;27694:56:15::1;::::0;::::1;20908:21:18::0;20965:2;20945:18;;;20938:30;21004:27;20984:18;;;20977:55;21049:18;;27694:56:15::1;20724:349:18::0;27694:56:15::1;27760:7;:20:::0;27625:162::o;5378:502::-;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:15;;;;;;;:::i;:::-;5638:235:::1;5662:15;5691:172;5729:11;5758:10;5786:7;5811:10;5839;5691:20;:172::i;3826:469::-:0;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:15;;;;;;;:::i;:::-;4048:240:::1;4072:14;4100:178;4138:11:::0;4167:10;4195:7;4220:10;4262:1:::1;4248:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;4248:16:15::1;;4100:20;:178::i;4048:240::-;3826:469:::0;;;;:::o;4301:565::-;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:15;;;;;;;:::i;:::-;4601:258:::1;4625:10;4649:200;4685:11;4714:10;4742:7;4767:10;4795:12;4825:10;4649:18;:200::i;4601:258::-;4301:565:::0;;;;;;:::o;19094:592::-;19261:7;19282:6;19302:5;19321:6;19352:18;19413:10;19425:7;19434:10;19396:49;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;19396:49:15;;;;;;19373:82;;19396:49;19373:82;;;;19465:33;19501:20;;;:8;:20;;;;;19552:21;-1:-1:-1;;;;;19552:21:15;;;-1:-1:-1;;;19587:18:15;;;;;-1:-1:-1;;;;19619:20:15;;;;;-1:-1:-1;;;;19653:16:15;;;;;;-1:-1:-1;19094:592:15;-1:-1:-1;;;;;19094:592:15:o;11571:1533::-;11660:7;;11643:1455;11673:2;:8;;;11669:1;:12;11643:1455;;;11702:25;11795:2;:13;;;11809:2;:7;;;11795:22;;;;;;;;:::i;:::-;;;;;;;11839:2;:10;;;11850:1;11839:13;;;;;;;;:::i;:::-;;;;;;;11874:2;:12;;;11887:1;11874:15;;;;;;;;:::i;:::-;;;;;;;11757:150;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11730:191;;;;;;11702:219;;11935:25;12028:2;:13;;;12042:2;:7;;;12028:22;;;;;;;;:::i;:::-;;;;;;;12072:2;:10;;;12083:1;12072:13;;;;;;;;:::i;:::-;;;;;;;12107:2;:12;;;12120:1;12107:15;;;;;;;;:::i;:::-;;;;;;;11990:150;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11990:150:15;;;;;;;;;11963:191;;11990:150;11963:191;;;;12168:33;12204:27;;;:8;:27;;;;;12281;;;:8;:27;;;;;;12322:24;;;;;;;;11963:191;;-1:-1:-1;12204:27:15;;12322:24;;12204:27;;11990:150;;12322:24;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;12322:24:15;;;;;;;;;-1:-1:-1;;;12322:24:15;;;;;;;;-1:-1:-1;;;;;;;;;12322:24:15;;;;;;;;;;-1:-1:-1;;;12322:24:15;;;;;;;;-1:-1:-1;;;12322:24:15;;;;;;;;;;;;-1:-1:-1;;;12322:24:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;12322:15:15;:24::i;:::-;12360;;;;;;;;;;-1:-1:-1;;;;;12360:24:15;;;;-1:-1:-1;;;12360:24:15;;;;;;;;-1:-1:-1;;;12360:24:15;;;;;;;;;;;-1:-1:-1;;;12360:24:15;;;;;;;;;;;:15;:24::i;:::-;12398:56;;;;;;;;;;-1:-1:-1;;;;;12398:56:15;;;;-1:-1:-1;;;12398:56:15;;;;;;;;-1:-1:-1;;;12398:56:15;;;;;;;;;;;-1:-1:-1;;;12398:56:15;;;;;;;;;;;12426:10;12438:15;12398:18;:56::i;:::-;12514:19;;;;;12493:40;;;;;;;:::i;:::-;:2;:14;;;12508:1;12493:17;;;;;;;;:::i;:::-;;;;;;;:40;;;;;;;;:::i;:::-;;12468:126;;;;-1:-1:-1;;;12468:126:15;;;;;;;:::i;:::-;12655:18;;12633;;-1:-1:-1;;;12655:18:15;;;;;;;-1:-1:-1;;;12633:18:15;;;;:40;;12608:120;;;;-1:-1:-1;;;12608:120:15;;31295:2:18;12608:120:15;;;31277:21:18;31334:2;31314:18;;;31307:30;-1:-1:-1;;;31353:18:18;;;31346:51;31414:18;;12608:120:15;31093:345:18;12608:120:15;12792:16;;12742:29;;12774:34;;-1:-1:-1;;;12792:16:15;;;;12774:15;:34;:::i;:::-;12822:59;;;;;;;;;;;12742:66;;-1:-1:-1;12822:59:15;;12841:7;;12822:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;12822:59:15;;;;;;;;;-1:-1:-1;;;12822:59:15;;;;;;;;-1:-1:-1;;;;;;;;;12822:59:15;;;;;;;;;;-1:-1:-1;;;12822:59:15;;;;;;;;-1:-1:-1;;;12822:59:15;;;;;;;;;;;;-1:-1:-1;;;12822:59:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;12822:59:15;;;;;;;;;;-1:-1:-1;;;;;12822:59:15;;;;-1:-1:-1;;;12822:59:15;;;;;;;;-1:-1:-1;;;12822:59:15;;;;;;;;;;;-1:-1:-1;;;12822:59:15;;;;;;;;;12859:21;12822:18;:59::i;:::-;12942:18;;;12895:27;;;:8;:27;;;;;:65;;12942:18;-1:-1:-1;;;12942:18:15;;;;;;12895:43;;:65;;12942:18;;-1:-1:-1;;;12895:65:15;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;12998:2;:12;;;13011:1;12998:15;;;;;;;;:::i;:::-;;;;;;;12979:60;13022:15;12979:60;;;;;33614:10:18;33602:23;;;;33584:42;;33572:2;33557:18;;33440:192;12979:60:15;;;;;;;;-1:-1:-1;;;13060:27:15;;;;:8;:27;;;;;13053:34;;-1:-1:-1;;;;;;13053:34:15;;;-1:-1:-1;11683:3:15;;;;:::i;:::-;;;;11643:1455;;;;11571:1533;:::o;21619:809::-;21874:18;;:::i;:::-;21909:512;;;;;;;;21938:1;21909:512;;;;21960:1;21909:512;;;;21988:11;21909:512;;;;22025:10;21909:512;;;;22058:7;21909:512;;;;22105:1;-1:-1:-1;;;;;22091:16:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22091:16:15;-1:-1:-1;21909:512:15;;;;22304:1;22292:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22292:14:15;-1:-1:-1;21909:512:15;;;;22349:1;22336:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22336:15:15;-1:-1:-1;21909:512:15;;;;;;;;;;;;;;;;-1:-1:-1;22205:14:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22205:14:15;-1:-1:-1;21909:512:15;;;;22259:1;22245:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22245:16:15;-1:-1:-1;21909:512:15;;;;22408:1;22379:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22379:31:15;-1:-1:-1;21909:512:15;;21904:517;21619:809;-1:-1:-1;;;;;;21619:809:15:o;14465:609::-;14631:1;14608:2;:13;;;:20;:24;14600:51;;;;-1:-1:-1;;;14600:51:15;;23811:2:18;14600:51:15;;;23793:21:18;23850:2;23830:18;;;23823:30;-1:-1:-1;;;23869:18:18;;;23862:44;23923:18;;14600:51:15;23609:338:18;14600:51:15;14680:2;:13;;;:20;14668:2;:8;;;:32;14661:386;;14764:2;:13;;;14778:2;:8;;;14764:23;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;14738:49:15;:2;:13;;;14752:2;:7;;;14738:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;14738:49:15;;14737:128;;;;-1:-1:-1;14837:27:15;14809:2;:14;;;14824:2;:8;;;14809:24;;;;;;;;:::i;:::-;;;;;;;:55;;;;;;;;:::i;:::-;;14737:128;14716:321;;;14898:8;;;:10;;;;;;:::i;:::-;;;-1:-1:-1;14661:386:15;;14716:321;14947:11;14955:2;14947:7;:11;;:::i;:::-;14986:8;;;;;14976:18;;;14986:8;15012:10;14986:8;15012:10;:::i;14661:386::-;15056:11;15064:2;15056:7;:11;;:::i;6068:1698::-;6153:7;;6136:1410;6166:2;:8;;;6162:1;:12;6136:1410;;;6195:23;6212:2;6216:1;6195:16;:23::i;:::-;6232:18;6318:2;:13;;;6332:2;:7;;;6318:22;;;;;;;;:::i;:::-;;;;;;;6362:2;:10;;;6373:1;6362:13;;;;;;;;:::i;:::-;;;;;;;6397:9;;6280:144;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6280:144:15;;;;;;;;;6253:185;;6280:144;6253:185;;;;6452:33;6488:20;;;:8;:20;;;;;;;6522:21;;;;;;;;6253:185;;-1:-1:-1;6488:20:15;;6522:21;;6488:20;;6280:144;;6522:21;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;6522:21:15;;;;;;;;;-1:-1:-1;;;6522:21:15;;;;;;;;-1:-1:-1;;;;;;;;;6522:21:15;;;;;;;;;;-1:-1:-1;;;6522:21:15;;;;;;;;-1:-1:-1;;;6522:21:15;;;;;;;;;;;;-1:-1:-1;;;6522:21:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;6522:12:15;:21::i;:::-;6557:49;6586:2;:15;;;6602:1;6586:18;;;;;;;;:::i;:::-;;;;;;;6580:25;;;;;;;;:::i;:::-;6557:22;:49::i;:::-;6620:10;;6633:2;:14;;;6648:1;6633:17;;;;;;;;:::i;:::-;;;;;;;:47;;;;;;;;:::i;:::-;;6620:60;;6717:430;;;;;;;;6766:2;:14;;;6781:1;6766:17;;;;;;;;:::i;:::-;;;;;;;6717:430;;;;;;;;:::i;:::-;;;;;6824:10;-1:-1:-1;;;;;6717:430:15;;;;;6870:2;:18;;;6889:1;6870:21;;;;;;;;:::i;:::-;;;;;;;6717:430;;;;;;6925:2;:17;;;6943:1;6925:20;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6717:430:15;;;;;;6975:5;:36;;6994:2;:13;;;7008:1;6994:16;;;;;;;;:::i;:::-;;;;;;;6975:36;;;6983:1;6975:36;6717:430;;;;;;7046:5;:36;;7065:2;:13;;;7079:1;7065:16;;;;;;;;:::i;:::-;;;;;;;7046:36;;;7054:1;7046:36;6717:430;;;;;;7114:2;:15;;;7130:1;7114:18;;;;;;;;:::i;:::-;;;;;;;6717:430;;;;;;;;:::i;:::-;;;6694:20;;;;:8;:20;;;;;:453;;;;:20;;-1:-1:-1;;6694:453:15;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;6694:453:15;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6694:453:15;;;;-1:-1:-1;;;;;6694:453:15;;;;;;;-1:-1:-1;;;;6694:453:15;;;;;-1:-1:-1;;;6694:453:15;;;;;;;;;;;;-1:-1:-1;;;;6694:453:15;-1:-1:-1;;;6694:453:15;;;;;;;;;-1:-1:-1;;;;6694:453:15;;-1:-1:-1;;;6694:453:15;;;;;;-1:-1:-1;;;;6694:453:15;;-1:-1:-1;;;6694:453:15;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;6694:453:15;;;-1:-1:-1;;;;6694:453:15;;;;-1:-1:-1;;;6694:453:15;;;;;;;;;:::i;:::-;;;;;;;;;7289:2;:10;;;7300:1;7289:13;;;;;;;;:::i;:::-;;;;;;;7249:2;:13;;;7263:2;:7;;;7249:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7166:344:15;7221:10;-1:-1:-1;;;;;7166:344:15;;7198:5;7320:9;;7347:2;:18;;;7366:1;7347:21;;;;;;;;:::i;:::-;;;;;;;7386:2;:17;;;7404:1;7386:20;;;;;;;;:::i;:::-;;;;;;;7424:5;:36;;7443:2;:13;;;7457:1;7443:16;;;;;;;;:::i;:::-;;;;;;;7424:36;;;7432:1;7424:36;7478:2;:15;;;7494:1;7478:18;;;;;;;;:::i;:::-;;;;;;;7166:344;;;;;;;;;;;:::i;:::-;;;;;;;;7524:9;:11;;;:9;:11;;;:::i;:::-;;;;;;6181:1365;;;6176:3;;;;;:::i;:::-;;;;6136:1410;;;;7555:204;7581:2;7597:10;7629:4;7648:42;7657:2;:10;;;7669:2;:7;;;7678:2;:8;;;7688:1;7648:8;:42::i;:::-;7704:45;7713:2;:13;;;7728:2;:7;;;7737:2;:8;;;7747:1;7704:8;:45::i;:::-;7555:12;:204::i;:::-;6068:1698;:::o;19874:891::-;20224:18;;:::i;:::-;20259:499;;;;;;;;20288:1;20259:499;;;;20310:1;20259:499;;;;20338:11;20259:499;;;;20375:10;20259:499;;;;20408:7;20259:499;;;;20441:10;20259:499;;;;20648:15;20259:499;;;;20693:14;20259:499;;;;20490:1;-1:-1:-1;;;;;20476:16:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20476:16:15;-1:-1:-1;20259:499:15;;;;20531:1;20517:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20517:16:15;-1:-1:-1;20259:499:15;;;;20573:1;20561:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20561:14:15;-1:-1:-1;20259:499:15;;;;20615:1;20601:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20601:16:15;-1:-1:-1;20259:499:15;;;;;;;;-1:-1:-1;20254:504:15;19874:891;-1:-1:-1;;;;;;19874:891:15:o;13110:1167::-;13190:7;;13173:1098;13203:2;:8;;;13199:1;:12;13173:1098;;;13232:25;13325:2;:13;;;13339:2;:7;;;13325:22;;;;;;;;:::i;:::-;;;;;;;13369:2;:10;;;13380:1;13369:13;;;;;;;;:::i;:::-;;;;;;;13404:2;:12;;;13417:1;13404:15;;;;;;;;:::i;:::-;;;;;;;13287:150;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13260:191;;;;;;13232:219;;13465:25;13558:2;:13;;;13572:2;:7;;;13558:22;;;;;;;;:::i;:::-;;;;;;;13602:2;:10;;;13613:1;13602:13;;;;;;;;:::i;:::-;;;;;;;13637:2;:12;;;13650:1;13637:15;;;;;;;;:::i;:::-;;;;;;;13520:150;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;13520:150:15;;;;;;;;;13493:191;;13520:150;13493:191;;;;13698:33;13734:27;;;:8;:27;;;;;13811;;;:8;:27;;;;;;13852:24;;;;;;;;13493:191;;-1:-1:-1;13734:27:15;;13852:24;;13734:27;;13520:150;;13852:24;;;;;;;;;;:::i;:::-;13890;;;;;;;;;;-1:-1:-1;;;;;13890:24:15;;;;-1:-1:-1;;;13890:24:15;;;;;;;;-1:-1:-1;;;13890:24:15;;;;;;;;;;;-1:-1:-1;;;13890:24:15;;;;;;;;;;;:15;:24::i;:::-;13928:43;;;;;;;;;;-1:-1:-1;;;;;13928:43:15;;;;-1:-1:-1;;;13928:43:15;;;;;;;;-1:-1:-1;;;13928:43:15;;;;;;;;;;;-1:-1:-1;;;13928:43:15;;;;;;;;;;;13955:15;13928:17;:43::i;:::-;13985:40;;;;;;;;;;;;;;14008:7;;13985:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;13985:40:15;;;;;;;;;-1:-1:-1;;;13985:40:15;;;;;;;;-1:-1:-1;;;;;;;;;13985:40:15;;;;;;;;;;-1:-1:-1;;;13985:40:15;;;;;;;;-1:-1:-1;;;13985:40:15;;;;;;;;;;;;-1:-1:-1;;;13985:40:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;13985:40:15;;;;;;;;;;-1:-1:-1;;;;;13985:40:15;;;;-1:-1:-1;;;13985:40:15;;;;;;;;-1:-1:-1;;;13985:40:15;;;;;;;;;;;-1:-1:-1;;;13985:40:15;;;;;;;;;:22;:40::i;:::-;14066:18;;14039:45;;14066:18;-1:-1:-1;;;14066:18:15;;;;;;14039:7;;:23;;:45;;14066:18;;-1:-1:-1;;;14039:45:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;14142:2;:12;;;14155:1;14142:15;;;;;;;;:::i;:::-;;;;;;;14103:109;14182:15;14103:109;;;;;33614:10:18;33602:23;;;;33584:42;;33572:2;33557:18;;33440:192;14103:109:15;;;;;;;;-1:-1:-1;;14233:27:15;;;;:8;:27;;;;;14226:34;;-1:-1:-1;;;;;;14226:34:15;;;-1:-1:-1;13213:3:15;;;;:::i;:::-;;;;13173:1098;;7772:1282;7900:7;;7889:8;;;;7844:28;;7889:18;;;:::i;:::-;-1:-1:-1;;;;;7875:33:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7875:33:15;-1:-1:-1;7935:7:15;;7844:64;;-1:-1:-1;7918:912:15;7948:2;:8;;;7944:1;:12;7918:912;;;7977:25;8070:2;:13;;;8084:2;:7;;;8070:22;;;;;;;;:::i;:::-;;;;;;;8114:2;:10;;;8125:1;8114:13;;;;;;;;:::i;:::-;;;;;;;8149:2;:12;;;8162:1;8149:15;;;;;;;;:::i;:::-;;;;;;;8032:150;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;8032:150:15;;;;;;;;;8005:191;;8032:150;8005:191;;;;8210:23;8236:27;;;:8;:27;;;;;;;8277:24;;;;;;;;8005:191;;-1:-1:-1;8236:27:15;;8277:24;;8236:27;;8032:150;;8277:24;;;;;;;;;;:::i;:::-;8315:38;;;;;;;;;;;;;;8333:7;;8315:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;8315:38:15;;;;;;;;;-1:-1:-1;;;8315:38:15;;;;;;;;-1:-1:-1;;;;;;;;;8315:38:15;;;;;;;;;;-1:-1:-1;;;8315:38:15;;;;;;;;-1:-1:-1;;;8315:38:15;;;;;;;;;;;;-1:-1:-1;;;8315:38:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;8342:10:15;8315:17;:38::i;:::-;8413:19;;;;;8392:40;;;;;;;:::i;:::-;:2;:14;;;8407:1;8392:17;;;;;;;;:::i;:::-;;;;;;;:40;;;;;;;;:::i;:::-;;8367:126;;;;-1:-1:-1;;;8367:126:15;;;;;;;:::i;:::-;8554:23;;-1:-1:-1;;;8532:18:15;;8554:23;8532:18;;;-1:-1:-1;;;8554:23:15;;;;8532:45;8507:126;;;;-1:-1:-1;;;8507:126:15;;21988:2:18;8507:126:15;;;21970:21:18;22027:2;22007:18;;;22000:30;-1:-1:-1;;;22046:18:18;;;22039:52;22108:18;;8507:126:15;21786:346:18;8507:126:15;8674:18;;8663:7;;-1:-1:-1;;;8674:18:15;;;;;;8647:11;;8659;;:1;:11;:::i;:::-;8647:24;;;;;;;;:::i;:::-;;;;;;:45;;;;;8730:2;:12;;;8743:1;8730:15;;;;;;;;:::i;:::-;;;;;;;8711:60;8754:15;8711:60;;;;;33614:10:18;33602:23;;;;33584:42;;33572:2;33557:18;;33440:192;8711:60:15;;;;;;;;-1:-1:-1;8792:27:15;;;;:8;:27;;;;;8785:34;;-1:-1:-1;;;;;;8785:34:15;;;7958:3;;;;:::i;:::-;;;;7918:912;;;;8839:208;8865:2;8889:4;8908:10;8932:42;8941:2;:10;;;8953:2;:7;;;8962:2;:8;;;8972:1;8932:8;:42::i;:::-;9010:7;;9019:8;;;;8988:49;;8997:11;;9010:7;8988:8;:49::i;9060:2505::-;9145:7;;9128:2431;9158:2;:8;;;9154:1;:12;9128:2431;;;9187:25;9280:2;:13;;;9294:2;:7;;;9280:22;;;;;;;;:::i;:::-;;;;;;;9324:2;:10;;;9335:1;9324:13;;;;;;;;:::i;:::-;;;;;;;9359:2;:12;;;9372:1;9359:15;;;;;;;;:::i;:::-;;;;;;;9242:150;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9215:191;;;;;;9187:219;;9420:25;9513:2;:13;;;9527:2;:7;;;9513:22;;;;;;;;:::i;:::-;;;;;;;9557:2;:10;;;9568:1;9557:13;;;;;;;;:::i;:::-;;;;;;;9592:9;;9475:144;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9475:144:15;;;;;;;;;9448:185;;9475:144;9448:185;;;;9647:33;9683:27;;;:8;:27;;;;;9760;;;:8;:27;;;;;;9801:24;;;;;;;;9448:185;;-1:-1:-1;9683:27:15;;9801:24;;9683:27;;9475:144;;9801:24;;;;;;;;;;:::i;:::-;9839:21;;;;;;;;;;-1:-1:-1;;;;;9839:21:15;;;;-1:-1:-1;;;9839:21:15;;;;;;;;-1:-1:-1;;;9839:21:15;;;;;;;;;;;-1:-1:-1;;;9839:21:15;;;;;;;;;;;:12;:21::i;:::-;9874:44;;;;;;;;;;;;;;9891:7;;9874:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;9874:44:15;;;;;;;;;-1:-1:-1;;;9874:44:15;;;;;;;;-1:-1:-1;;;;;;;;;9874:44:15;;;;;;;;;;-1:-1:-1;;;9874:44:15;;;;;;;;-1:-1:-1;;;9874:44:15;;;;;;;;;;;;-1:-1:-1;;;9874:44:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;9900:2:15;9904:1;9907:10;9874:16;:44::i;:::-;9978:19;;;;;9957:40;;;;;;;:::i;:::-;:2;:14;;;9972:1;9957:17;;;;;;;;:::i;:::-;;;;;;;:40;;;;;;;;:::i;:::-;;9932:126;;;;-1:-1:-1;;;9932:126:15;;;;;;;:::i;:::-;10117:23;;10097:13;;;;:16;;-1:-1:-1;;;10117:23:15;;;;;;10111:1;;10097:16;;;;;;:::i;:::-;;;;;;;:43;;10072:128;;;;-1:-1:-1;;;10072:128:15;;21280:2:18;10072:128:15;;;21262:21:18;21319:2;21299:18;;;21292:30;21358:28;21338:18;;;21331:56;21404:18;;10072:128:15;21078:350:18;10072:128:15;10243:20;;10214;;-1:-1:-1;;;10243:20:15;;;;10237:27;;;;;;;;:::i;:::-;10278:20;10301:8;;:40;;-1:-1:-1;;;10301:40:15;;33809:4:18;33797:17;;10301:40:15;;;33779:36:18;10214:50:15;;-1:-1:-1;10278:20:15;;-1:-1:-1;;;;;10301:8:15;;;;:24;;33752:18:18;;10301:40:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10278:63;;10355:16;10380:12;-1:-1:-1;;;;;10374:28:15;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10355:49;;;-1:-1:-1;10436:13:15;10452:12;10355:49;10452:2;:12;:::i;:::-;10594:22;;10436:28;;-1:-1:-1;10482:17:15;;10582:42;;-1:-1:-1;;;10594:22:15;;;;10436:28;10582:11;:42::i;:::-;10541:2;:15;;;10557:1;10541:18;;;;;;;;:::i;:::-;;;;;;;10502:57;;:2;:13;;;10516:1;10502:16;;;;;;;;:::i;:::-;;;;;;;:57;;;;:::i;:::-;:122;;;;:::i;:::-;10482:142;;10662:1;10650:9;:13;10642:51;;;;-1:-1:-1;;;10642:51:15;;;;;;;:::i;:::-;10711:152;-1:-1:-1;;;;;10711:36:15;;10769:10;10809:4;10836:9;10711:36;:152::i;:::-;10418:460;;10921:240;;;;;;;;10980:10;-1:-1:-1;;;;;10921:240:15;;;;;11077:2;:15;;;11093:1;11077:18;;;;;;;;:::i;:::-;;;;;;;10921:240;;;;;;11130:15;10921:240;;;;;;11028:2;:13;;;11042:1;11028:16;;;;;;;;:::i;:::-;;;;;;;;;;;;10921:240;;;;;;;10891:27;;;;:8;:27;;;;;;;:270;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10891:270:15;-1:-1:-1;;;;10891:270:15;;;;-1:-1:-1;;;10891:270:15;;;;;-1:-1:-1;;;;10891:270:15;;;;-1:-1:-1;;;10891:270:15;-1:-1:-1;;;;;;10891:270:15;;;-1:-1:-1;;;;;10891:270:15;;;;;;;;;;;;;;;;;;;;;;11246:13;;;;:16;;11260:1;;11246:16;;;;;;:::i;:::-;;;;;;;;;;;;11175:27;;;;:8;:27;;;;;;;:101;;:43;;:101;;11246:16;;-1:-1:-1;;;11175:101:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;11388:9;;11355:2;:12;;;11368:1;11355:15;;;;;;;;:::i;:::-;;;;;;;11327:10;-1:-1:-1;;;;;11295:228:15;;11422:2;:13;;;11436:1;11422:16;;;;;;;;:::i;:::-;;;;;;;11457:2;:15;;;11473:1;11457:18;;;;;;;;:::i;:::-;;;;;;;;;;;;11493:16;;11295:228;;;33125:6:18;33113:19;;;33095:38;;33181:4;33169:17;;;33149:18;;;33142:45;;;;-1:-1:-1;;;11493:16:15;;;;;33203:18:18;;;33196:51;33083:2;33068:18;11295:228:15;;;;;;;11537:9;:11;;;:9;:11;;;:::i;:::-;;;;;;9173:2386;;;;;;;9168:3;;;;;:::i;:::-;;;;9128:2431;;20771:842;21061:18;;:::i;:::-;21096:510;;;;;;;;21125:1;21096:510;;;;21147:1;21096:510;;;;21175:11;21096:510;;;;21212:10;21096:510;;;;21245:7;21096:510;;;;21292:1;-1:-1:-1;;;;;21278:16:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21278:16:15;-1:-1:-1;21096:510:15;;;;21489:1;21477:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21477:14:15;-1:-1:-1;21096:510:15;;;;21534:1;21521:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21521:15:15;-1:-1:-1;21096:510:15;;;;;;;;;;;21354:16;;-1:-1:-1;21354:16:15;;;;;;;;21096:510;;;;;;;;;;;;;;;;;;;;;21564:31;;;;;;;;;;;-1:-1:-1;21096:510:15;;;;;21091:515;;-1:-1:-1;;;20771:842:15:o;24068:267::-;24140:42;24160:7;:21;;;24140:19;:42::i;:::-;24200:23;;;;:28;;24192:61;;;;-1:-1:-1;;;24192:61:15;;20577:2:18;24192:61:15;;;20559:21:18;20616:2;20596:18;;;20589:30;-1:-1:-1;;;20635:18:18;;;20628:50;20695:18;;24192:61:15;20375:344:18;24192:61:15;24271:22;;;;-1:-1:-1;;;;;;24271:27:15;24263:65;;;;-1:-1:-1;;;24263:65:15;;;;;;;:::i;24603:260::-;24695:21;;24675:42;;:19;:42::i;:::-;24735:20;;;;:25;;24727:61;;;;-1:-1:-1;;;24727:61:15;;;;;;;:::i;:::-;24806:16;;;;:21;;24798:58;;;;-1:-1:-1;;;24798:58:15;;28486:2:18;24798:58:15;;;28468:21:18;28525:2;28505:18;;;28498:30;28564:26;28544:18;;;28537:54;28608:18;;24798:58:15;28284:348:18;26002:341:15;26183:9;-1:-1:-1;;;;;26158:34:15;:7;:21;;;-1:-1:-1;;;;;26158:34:15;;26150:64;;;;-1:-1:-1;;;26150:64:15;;29197:2:18;26150:64:15;;;29179:21:18;29236:2;29216:18;;;29209:30;-1:-1:-1;;;29255:18:18;;;29248:47;29312:18;;26150:64:15;28995:341:18;26150:64:15;26246:41;26263:7;26272:14;26246:16;:41::i;:::-;26245:42;26224:112;;;;-1:-1:-1;;;26224:112:15;;25972:2:18;26224:112:15;;;25954:21:18;26011:2;25991:18;;;25984:30;26050:25;26030:18;;;26023:53;26093:18;;26224:112:15;25770:347:18;26224:112:15;26002:341;;;:::o;15444:1226::-;15619:20;15648:7;:20;;;15642:27;;;;;;;;:::i;:::-;15679:16;15698:8;;:40;;-1:-1:-1;;;15698:40:15;;33809:4:18;33797:17;;15698:40:15;;;33779:36:18;15619:50:15;;-1:-1:-1;15679:16:15;;-1:-1:-1;;;;;15698:8:15;;;;:24;;33752:18:18;;15698:40:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15679:59;;15748:16;15773:8;-1:-1:-1;;;;;15767:24:15;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15748:45;;;-1:-1:-1;15803:13:15;15819:12;15748:45;15819:2;:12;:::i;:::-;15803:28;;15841:17;15894:42;15906:7;:22;;;15930:5;15894:11;:42::i;:::-;15861:7;:18;;;:75;;;;;;:::i;:::-;15841:95;;15946:22;15983:7;:20;;;15971:32;;:9;:32;;;;:::i;:::-;15946:57;-1:-1:-1;16013:21:15;2504:5;16038:33;16062:9;16038:21;:33;:::i;:::-;16037:64;;;;:::i;:::-;16013:88;;16136:1;16119:14;:18;16111:66;;;;-1:-1:-1;;;16111:66:15;;27024:2:18;16111:66:15;;;27006:21:18;27063:2;27043:18;;;27036:30;27102:34;27082:18;;;27075:62;-1:-1:-1;;;27153:18:18;;;27146:33;27196:19;;16111:66:15;26822:399:18;16111:66:15;16211:1;16195:13;:17;16187:59;;;;-1:-1:-1;;;16187:59:15;;28839:2:18;16187:59:15;;;28821:21:18;28878:2;28858:18;;;28851:30;28917:31;28897:18;;;28890:59;28966:18;;16187:59:15;28637:353:18;16187:59:15;16256:21;16280:30;16297:13;16280:14;:30;:::i;:::-;16256:54;;16324:7;;16335:1;16324:12;16320:145;;16352:16;16371:44;16379:13;16394:7;:20;;;16371:7;:44::i;:::-;16352:63;-1:-1:-1;16429:25:15;16352:63;16429:25;;:::i;:::-;;;16338:127;16320:145;16503:21;;;;16474:66;;-1:-1:-1;;;;;16474:28:15;;;16526:13;16474:28;:66::i;:::-;16554:17;;16550:114;;16616:21;;16587:66;;-1:-1:-1;;;;;16587:28:15;;;16639:13;16587:28;:66::i;:::-;15609:1061;;;;;;;;15444:1226;;;:::o;24869:452::-;24976:1;24957:2;:13;;;24971:1;24957:16;;;;;;;;:::i;:::-;;;;;;;:20;24949:59;;;;-1:-1:-1;;;24949:59:15;;23456:2:18;24949:59:15;;;23438:21:18;23495:2;23475:18;;;23468:30;23534:28;23514:18;;;23507:56;23580:18;;24949:59:15;23254:350:18;24949:59:15;25046:16;25026:36;;:2;:13;;;25040:1;25026:16;;;;;;;;:::i;:::-;;;;;;;:36;;25018:66;;;;-1:-1:-1;;;25018:66:15;;26324:2:18;25018:66:15;;;26306:21:18;26363:2;26343:18;;;26336:30;-1:-1:-1;;;26382:18:18;;;26375:47;26439:18;;25018:66:15;26122:341:18;25018:66:15;25126:1;25102:2;:18;;;25121:1;25102:21;;;;;;;;:::i;:::-;;;;;;;:25;;;25094:61;;;;-1:-1:-1;;;25094:61:15;;;;;;;:::i;:::-;25198:15;25173:40;;:2;:18;;;25192:1;25173:21;;;;;;;;:::i;:::-;;;;;;;:40;;;;25165:69;;;;-1:-1:-1;;;25165:69:15;;30608:2:18;25165:69:15;;;30590:21:18;30647:2;30627:18;;;30620:30;-1:-1:-1;;;30666:18:18;;;30659:46;30722:18;;25165:69:15;30406:340:18;25165:69:15;25283:1;25259:2;:17;;;25277:1;25259:20;;;;;;;;:::i;:::-;;;;;;;25252:28;;:32;;;25244:70;;;;-1:-1:-1;;;25244:70:15;;;;;;;:::i;23796:266::-;23865:39;23882:7;:21;;;23865:16;:39::i;:::-;23922:23;;;;:28;;;23914:65;;;;-1:-1:-1;;;23914:65:15;;21635:2:18;23914:65:15;;;21617:21:18;21674:2;21654:18;;;21647:30;-1:-1:-1;;;21693:18:18;;;21686:54;21757:18;;23914:65:15;21433:348:18;23914:65:15;23997:22;;;;-1:-1:-1;;;;;;23997:27:15;;23989:66;;;;-1:-1:-1;;;23989:66:15;;23101:2:18;23989:66:15;;;23083:21:18;23140:2;23120:18;;;23113:30;23179:28;23159:18;;;23152:56;23225:18;;23989:66:15;22899:350:18;26744:129:15;26836:1;26824:9;:13;;;26816:50;;;;-1:-1:-1;;;26816:50:15;;32405:2:18;26816:50:15;;;32387:21:18;32444:2;32424:18;;;32417:30;32483:26;32463:18;;;32456:54;32527:18;;26816:50:15;32203:348:18;23021:326:15;23170:18;23218:13;23225:6;23218:4;:13;:::i;:::-;-1:-1:-1;;;;;23204:28:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23204:28:15;-1:-1:-1;23200:32:15;-1:-1:-1;23259:6:15;23242:99;23271:4;23267:1;:8;23242:99;;;23312:3;23316:13;23320:9;23316:1;:13;:::i;:::-;23312:18;;;;;;;;:::i;:::-;;;;;;;23296:1;23302:6;23298:1;:10;;;;:::i;:::-;23296:13;;;;;;;;:::i;:::-;;;;;;;;;;:34;23277:3;;;;:::i;:::-;;;;23242:99;;;;23021:326;;;;;;:::o;17495:628::-;17713:26;17686:14;;;;17701:7;;17686:23;;;;;;;;:::i;:::-;;;;;;;:53;;;;;;;;:::i;:::-;;17682:435;;;17763:13;;;;17777:7;;17763:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;17755:44:15;;17817:4;17839:2;17859;:10;;;17870:2;:7;;;17859:19;;;;;;;;:::i;:::-;;;;;;;;;;;17755:137;;-1:-1:-1;;;;;;17755:137:15;;;;;;;-1:-1:-1;;;;;17623:15:18;;;17755:137:15;;;17605:34:18;17675:15;;;;17655:18;;;17648:43;17707:18;;;17700:34;17540:18;;17755:137:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17682:435;;;17932:13;;;;17946:7;;17932:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;17923:54:15;;17995:4;18017:2;18037:7;18062:10;17923:183;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17495:628;;;;;:::o;26879:254::-;27030:41;27047:7;27056:14;27030:16;:41::i;:::-;27009:117;;;;-1:-1:-1;;;27009:117:15;;27774:2:18;27009:117:15;;;27756:21:18;27813:2;27793:18;;;27786:30;27852:31;27832:18;;;27825:59;27901:18;;27009:117:15;27572:353:18;16676:813:15;16816:20;16845:7;:20;;;16839:27;;;;;;;;:::i;:::-;16876:18;16903:8;;:40;;-1:-1:-1;;;16903:40:15;;33809:4:18;33797:17;;16903:40:15;;;33779:36:18;16816:50:15;;-1:-1:-1;16876:18:15;;-1:-1:-1;;;;;16903:8:15;;;;:24;;33752:18:18;;16903:40:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16876:68;;16954:16;16979:12;-1:-1:-1;;;;;16973:28:15;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16954:49;;;-1:-1:-1;17013:13:15;17029:12;16954:49;17029:2;:12;:::i;:::-;17013:28;;17051:17;17104:42;17116:7;:22;;;17140:5;17104:11;:42::i;:::-;17071:7;:18;;;:75;;;;;;:::i;:::-;17051:95;;17156:16;17187:7;:20;;;17175:32;;:9;:32;;;;:::i;:::-;17156:51;;17217:16;17251:7;;17262:1;17251:12;17247:157;;17290:103;17315:8;17364:14;17341:38;;;;;;;;;;:::i;:::-;17290:7;:103::i;:::-;17279:114;;17247:157;17439:21;;;;17413:69;;17462:19;17473:8;17462;:19;:::i;:::-;-1:-1:-1;;;;;17413:25:15;;;:69;:25;:69::i;26349:184::-;26495:9;-1:-1:-1;;;;;26470:34:15;:7;:21;;;-1:-1:-1;;;;;26470:34:15;;26462:64;;;;-1:-1:-1;;;26462:64:15;;27428:2:18;26462:64:15;;;27410:21:18;27467:2;27447:18;;;27440:30;-1:-1:-1;;;27486:18:18;;;27479:47;27543:18;;26462:64:15;27226:341:18;24341:256:15;24427:21;;24410:39;;:16;:39::i;:::-;24467:20;;;;:25;;;24459:62;;;;-1:-1:-1;;;24459:62:15;;21635:2:18;24459:62:15;;;21617:21:18;21674:2;21654:18;;;21647:30;-1:-1:-1;;;21693:18:18;;;21686:54;21757:18;;24459:62:15;21433:348:18;24459:62:15;24539:16;;;;:21;;;24531:59;;;;-1:-1:-1;;;24531:59:15;;24910:2:18;24531:59:15;;;24892:21:18;24949:2;24929:18;;;24922:30;24988:27;24968:18;;;24961:55;25033:18;;24531:59:15;24708:349:18;25327:669:15;25509:7;:21;;;-1:-1:-1;;;;;25496:34:15;:9;-1:-1:-1;;;;;25496:34:15;;;25488:71;;;;-1:-1:-1;;;25488:71:15;;29543:2:18;25488:71:15;;;29525:21:18;29582:2;29562:18;;;29555:30;29621:26;29601:18;;;29594:54;29665:18;;25488:71:15;29341:348:18;25488:71:15;25599:15;25577:37;;:2;:15;;;25593:1;25577:18;;;;;;;;:::i;:::-;;;;;;;:37;;;;25569:66;;;;-1:-1:-1;;;25569:66:15;;30608:2:18;25569:66:15;;;30590:21:18;30647:2;30627:18;;;30620:30;-1:-1:-1;;;30666:18:18;;;30659:46;30722:18;;25569:66:15;30406:340:18;25569:66:15;25674:1;25653:2;:15;;;25669:1;25653:18;;;;;;;;:::i;:::-;;;;;;;:22;;;25645:58;;;;-1:-1:-1;;;25645:58:15;;;;;;;:::i;:::-;25741:16;25721:36;;:2;:13;;;25735:1;25721:16;;;;;;;;:::i;:::-;;;;;;;:36;;25713:66;;;;-1:-1:-1;;;25713:66:15;;26324:2:18;25713:66:15;;;26306:21:18;26363:2;26343:18;;;26336:30;-1:-1:-1;;;26382:18:18;;;26375:47;26439:18;;25713:66:15;26122:341:18;25713:66:15;25816:1;25797:2;:13;;;25811:1;25797:16;;;;;;;;:::i;:::-;;;;;;;:20;25789:58;;;;-1:-1:-1;;;25789:58:15;;28132:2:18;25789:58:15;;;28114:21:18;28171:2;28151:18;;;28144:30;28210:27;28190:18;;;28183:55;28255:18;;25789:58:15;27930:349:18;25789:58:15;25900:7;:23;;;25878:45;;:2;:15;;;25894:1;25878:18;;;;;;;;:::i;:::-;;;;;;;:45;;;;25857:132;;;;-1:-1:-1;;;25857:132:15;;22339:2:18;25857:132:15;;;22321:21:18;22378:2;22358:18;;;22351:30;22417:34;22397:18;;;22390:62;-1:-1:-1;;;22468:18:18;;;22461:38;22516:19;;25857:132:15;22137:404:18;22434:581:15;22530:7;22553:37;22577:5;22584;22553:23;:37::i;:::-;22615:21;;;;22663:27;;;;;;22600:12;22723:13;22731:5;22723;:13;:::i;:::-;22700:36;;22758:4;22750:5;:12;;;22746:55;;;22786:4;22778:12;;22746:55;22824:4;22814:7;:14;;;22810:59;;;22854:4;22844:14;;22810:59;22878:9;22890:13;22898:5;22890:13;;;;:::i;:::-;22878:25;-1:-1:-1;22913:9:15;22925:22;22935:12;22925:22;;;;:::i;:::-;22913:34;-1:-1:-1;22957:17:15;22977:5;22913:34;22977:1;:5;:::i;:::-;22957:25;22434:581;-1:-1:-1;;;;;;;;;22434:581:15:o;845:241:7:-;1010:68;;-1:-1:-1;;;;;17623:15:18;;;1010:68:7;;;17605:34:18;17675:15;;17655:18;;;17648:43;17707:18;;;17700:34;;;983:96:7;;1003:5;;-1:-1:-1;;;1033:27:7;17540:18:18;;1010:68:7;;;;-1:-1:-1;;1010:68:7;;;;;;;;;;;;;;-1:-1:-1;;;;;1010:68:7;-1:-1:-1;;;;;;1010:68:7;;;;;;;;;;983:19;:96::i;23535:123:15:-;-1:-1:-1;;;;;23609:18:15;;23601:50;;;;-1:-1:-1;;;23601:50:15;;20229:2:18;23601:50:15;;;20211:21:18;20268:2;20248:18;;;20241:30;-1:-1:-1;;;20287:18:18;;;20280:49;20346:18;;23601:50:15;20027:343:18;27139:298:15;27252:4;27290:7;:16;;;27280:26;;:7;:26;27272:63;;;;-1:-1:-1;;;27272:63:15;;22748:2:18;27272:63:15;;;22730:21:18;22787:2;22767:18;;;22760:30;22826:26;22806:18;;;22799:54;22870:18;;27272:63:15;22546:348:18;27272:63:15;2504:5;27393:7;:20;;;:37;;;;;;:::i;:::-;27374:16;;;;27364:26;;;;:7;:26;:::i;:::-;:66;;27139:298;-1:-1:-1;;;27139:298:15:o;15080:358::-;15184:11;15227:7;;15217;:17;;;;:::i;:::-;15211:23;-1:-1:-1;15244:12:15;15251:5;15211:23;15244:12;:::i;:::-;;;15266:20;15295:12;15289:19;;;;;;;;:::i;:::-;15318:14;15341:8;;:40;;-1:-1:-1;;;15341:40:15;;33809:4:18;33797:17;;15341:40:15;;;33779:36:18;15266:42:15;;-1:-1:-1;15318:14:15;;-1:-1:-1;;;;;15341:8:15;;;;:24;;33752:18:18;;15341:40:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15414:11;;15318:64;;-1:-1:-1;15392:39:15;;-1:-1:-1;;;;;15392:21:15;;;;15414:11;15427:3;15392:21;:39::i;:::-;15201:237;;15080:358;;;;:::o;634:205:7:-;773:58;;-1:-1:-1;;;;;18392:32:18;;773:58:7;;;18374:51:18;18441:18;;;18434:34;;;746:86:7;;766:5;;-1:-1:-1;;;796:23:7;18347:18:18;;773:58:7;18200:274:18;23664:126:15;-1:-1:-1;;;;;23735:18:15;;;23727:56;;;;-1:-1:-1;;;23727:56:15;;29896:2:18;23727:56:15;;;29878:21:18;29935:2;29915:18;;;29908:30;29974:27;29954:18;;;29947:55;30019:18;;23727:56:15;29694:349:18;26539:199:15;26632:13;;;;26624:50;;;;-1:-1:-1;;;26624:50:15;;24154:2:18;26624:50:15;;;24136:21:18;24193:2;24173:18;;;24166:30;-1:-1:-1;;;24212:18:18;;;24205:50;24272:18;;26624:50:15;23952:344:18;26624:50:15;26701:5;26692;:14;;26684:47;;;;-1:-1:-1;;;26684:47:15;;32056:2:18;26684:47:15;;;32038:21:18;32095:2;32075:18;;;32068:30;-1:-1:-1;;;32114:18:18;;;32107:50;32174:18;;26684:47:15;31854:344:18;3140:706:7;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:7;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:7;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:7;;31645:2:18;3744:85:7;;;31627:21:18;31684:2;31664:18;;;31657:30;31723:34;31703:18;;;31696:62;-1:-1:-1;;;31774:18:18;;;31767:40;31824:19;;3744:85:7;31443:406:18;3461:223:11;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;;3461:223;;;;;;:::o;4548:499::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:11;;24503:2:18;4737:81:11;;;24485:21:18;24542:2;24522:18;;;24515:30;24581:34;24561:18;;;24554:62;-1:-1:-1;;;24632:18:18;;;24625:36;24678:19;;4737:81:11;24301:402:18;4737:81:11;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:11;;30250:2:18;4828:60:11;;;30232:21:18;30289:2;30269:18;;;30262:30;30328:31;30308:18;;;30301:59;30377:18;;4828:60:11;30048:353:18;4828:60:11;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:11;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;4548:499;-1:-1:-1;;;;;;;4548:499:11:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:11;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;-1:-1:-1;;;7802:20:11;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:748:18:-;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;175:6;162:20;201:4;225:60;241:43;281:2;241:43;:::i;:::-;225:60;:::i;:::-;307:3;331:2;326:3;319:15;359:2;354:3;350:12;343:19;;394:2;386:6;382:15;446:3;441:2;435;432:1;428:10;420:6;416:23;412:32;409:41;406:61;;;463:1;460;453:12;406:61;485:1;495:238;509:2;506:1;503:9;495:238;;;580:3;567:17;597:31;622:5;597:31;:::i;:::-;641:18;;679:12;;;;711;;;;527:1;520:9;495:238;;;-1:-1:-1;751:5:18;;14:748;-1:-1:-1;;;;;;;14:748:18:o;767:677::-;820:5;873:3;866:4;858:6;854:17;850:27;840:55;;891:1;888;881:12;840:55;927:6;914:20;953:4;977:60;993:43;1033:2;993:43;:::i;977:60::-;1059:3;1083:2;1078:3;1071:15;1111:2;1106:3;1102:12;1095:19;;1146:2;1138:6;1134:15;1198:3;1193:2;1187;1184:1;1180:10;1172:6;1168:23;1164:32;1161:41;1158:61;;;1215:1;1212;1205:12;1158:61;1237:1;1247:168;1261:2;1258:1;1255:9;1247:168;;;1318:22;1336:3;1318:22;:::i;:::-;1306:35;;1361:12;;;;1393;;;;1279:1;1272:9;1247:168;;1449:793;1512:5;1565:3;1558:4;1550:6;1546:17;1542:27;1532:55;;1583:1;1580;1573:12;1532:55;1619:6;1606:20;1645:4;1669:60;1685:43;1725:2;1685:43;:::i;1669:60::-;1751:3;1775:2;1770:3;1763:15;1803:2;1798:3;1794:12;1787:19;;1838:2;1830:6;1826:15;1890:3;1885:2;1879;1876:1;1872:10;1864:6;1860:23;1856:32;1853:41;1850:61;;;1907:1;1904;1897:12;1850:61;1929:1;1950;1960:253;1976:2;1971:3;1968:11;1960:253;;;2051:3;2038:17;2088:1;2081:5;2078:12;2068:40;;2104:1;2101;2094:12;2068:40;2121:18;;2159:12;;;;2191;;;;1998:1;1989:11;1960:253;;;-1:-1:-1;2231:5:18;;1449:793;-1:-1:-1;;;;;;;;1449:793:18:o;2247:794::-;2311:5;2364:3;2357:4;2349:6;2345:17;2341:27;2331:55;;2382:1;2379;2372:12;2331:55;2418:6;2405:20;2444:4;2468:60;2484:43;2524:2;2484:43;:::i;2468:60::-;2550:3;2574:2;2569:3;2562:15;2602:2;2597:3;2593:12;2586:19;;2637:2;2629:6;2625:15;2689:3;2684:2;2678;2675:1;2671:10;2663:6;2659:23;2655:32;2652:41;2649:61;;;2706:1;2703;2696:12;2649:61;2728:1;2749;2759:253;2775:2;2770:3;2767:11;2759:253;;;2850:3;2837:17;2887:1;2880:5;2877:12;2867:40;;2903:1;2900;2893:12;2867:40;2920:18;;2958:12;;;;2990;;;;2797:1;2788:11;2759:253;;3046:673;3100:5;3153:3;3146:4;3138:6;3134:17;3130:27;3120:55;;3171:1;3168;3161:12;3120:55;3207:6;3194:20;3233:4;3257:60;3273:43;3313:2;3273:43;:::i;3257:60::-;3339:3;3363:2;3358:3;3351:15;3391:2;3386:3;3382:12;3375:19;;3426:2;3418:6;3414:15;3478:3;3473:2;3467;3464:1;3460:10;3452:6;3448:23;3444:32;3441:41;3438:61;;;3495:1;3492;3485:12;3438:61;3517:1;3527:163;3541:2;3538:1;3535:9;3527:163;;;3598:17;;3586:30;;3636:12;;;;3668;;;;3559:1;3552:9;3527:163;;3724:744;3776:5;3829:3;3822:4;3814:6;3810:17;3806:27;3796:55;;3847:1;3844;3837:12;3796:55;3883:6;3870:20;3909:4;3933:60;3949:43;3989:2;3949:43;:::i;3933:60::-;4015:3;4039:2;4034:3;4027:15;4067:2;4062:3;4058:12;4051:19;;4102:2;4094:6;4090:15;4154:3;4149:2;4143;4140:1;4136:10;4128:6;4124:23;4120:32;4117:41;4114:61;;;4171:1;4168;4161:12;4114:61;4193:1;4203:236;4217:2;4214:1;4211:9;4203:236;;;4288:3;4275:17;4305:29;4328:5;4305:29;:::i;:::-;4347:18;;4385:12;;;;4417;;;;4235:1;4228:9;4203:236;;4473:173;4540:20;;-1:-1:-1;;;;;;4589:32:18;;4579:43;;4569:71;;4636:1;4633;4626:12;4569:71;4473:173;;;:::o;4651:530::-;4693:5;4746:3;4739:4;4731:6;4727:17;4723:27;4713:55;;4764:1;4761;4754:12;4713:55;4800:6;4787:20;-1:-1:-1;;;;;4822:2:18;4819:26;4816:52;;;4848:18;;:::i;:::-;4892:55;4935:2;4916:13;;-1:-1:-1;;4912:27:18;4941:4;4908:38;4892:55;:::i;:::-;4972:2;4963:7;4956:19;5018:3;5011:4;5006:2;4998:6;4994:15;4990:26;4987:35;4984:55;;;5035:1;5032;5025:12;4984:55;5100:2;5093:4;5085:6;5081:17;5074:4;5065:7;5061:18;5048:55;5148:1;5123:16;;;5141:4;5119:27;5112:38;;;;5127:7;4651:530;-1:-1:-1;;;4651:530:18:o;5186:251::-;5256:6;5309:2;5297:9;5288:7;5284:23;5280:32;5277:52;;;5325:1;5322;5315:12;5277:52;5357:9;5351:16;5376:31;5401:5;5376:31;:::i;5442:255::-;5509:6;5562:2;5550:9;5541:7;5537:23;5533:32;5530:52;;;5578:1;5575;5568:12;5530:52;5617:9;5604:23;5636:31;5661:5;5636:31;:::i;5702:1071::-;5856:6;5864;5872;5880;5888;5941:3;5929:9;5920:7;5916:23;5912:33;5909:53;;;5958:1;5955;5948:12;5909:53;5997:9;5984:23;6016:31;6041:5;6016:31;:::i;:::-;6066:5;-1:-1:-1;6123:2:18;6108:18;;6095:32;6136:33;6095:32;6136:33;:::i;:::-;6188:7;-1:-1:-1;6246:2:18;6231:18;;6218:32;-1:-1:-1;;;;;6299:14:18;;;6296:34;;;6326:1;6323;6316:12;6296:34;6349:61;6402:7;6393:6;6382:9;6378:22;6349:61;:::i;:::-;6339:71;;6463:2;6452:9;6448:18;6435:32;6419:48;;6492:2;6482:8;6479:16;6476:36;;;6508:1;6505;6498:12;6476:36;6531:63;6586:7;6575:8;6564:9;6560:24;6531:63;:::i;:::-;6521:73;;6647:3;6636:9;6632:19;6619:33;6603:49;;6677:2;6667:8;6664:16;6661:36;;;6693:1;6690;6683:12;6661:36;;6716:51;6759:7;6748:8;6737:9;6733:24;6716:51;:::i;:::-;6706:61;;;5702:1071;;;;;;;;:::o;6778:665::-;6873:6;6881;6889;6897;6950:3;6938:9;6929:7;6925:23;6921:33;6918:53;;;6967:1;6964;6957:12;6918:53;7006:9;6993:23;7025:31;7050:5;7025:31;:::i;:::-;7075:5;-1:-1:-1;7132:2:18;7117:18;;7104:32;7145:33;7104:32;7145:33;:::i;:::-;7197:7;-1:-1:-1;7251:2:18;7236:18;;7223:32;;-1:-1:-1;7306:2:18;7291:18;;7278:32;-1:-1:-1;;;;;7322:30:18;;7319:50;;;7365:1;7362;7355:12;7319:50;7388:49;7429:7;7420:6;7409:9;7405:22;7388:49;:::i;:::-;7378:59;;;6778:665;;;;;;;:::o;7448:734::-;7552:6;7560;7568;7576;7584;7637:3;7625:9;7616:7;7612:23;7608:33;7605:53;;;7654:1;7651;7644:12;7605:53;7693:9;7680:23;7712:31;7737:5;7712:31;:::i;:::-;7762:5;-1:-1:-1;7819:2:18;7804:18;;7791:32;7832:33;7791:32;7832:33;:::i;:::-;7884:7;-1:-1:-1;7938:2:18;7923:18;;7910:32;;-1:-1:-1;7989:2:18;7974:18;;7961:32;;-1:-1:-1;8044:3:18;8029:19;;8016:33;-1:-1:-1;;;;;8061:30:18;;8058:50;;;8104:1;8101;8094:12;8058:50;8127:49;8168:7;8159:6;8148:9;8144:22;8127:49;:::i;8187:383::-;8264:6;8272;8280;8333:2;8321:9;8312:7;8308:23;8304:32;8301:52;;;8349:1;8346;8339:12;8301:52;8388:9;8375:23;8407:31;8432:5;8407:31;:::i;:::-;8457:5;8509:2;8494:18;;8481:32;;-1:-1:-1;8560:2:18;8545:18;;;8532:32;;8187:383;-1:-1:-1;;;8187:383:18:o;8575:1073::-;8777:6;8785;8793;8801;8854:3;8842:9;8833:7;8829:23;8825:33;8822:53;;;8871:1;8868;8861:12;8822:53;8911:9;8898:23;-1:-1:-1;;;;;8981:2:18;8973:6;8970:14;8967:34;;;8997:1;8994;8987:12;8967:34;9020:70;9082:7;9073:6;9062:9;9058:22;9020:70;:::i;:::-;9010:80;;9143:2;9132:9;9128:18;9115:32;9099:48;;9172:2;9162:8;9159:16;9156:36;;;9188:1;9185;9178:12;9156:36;9211:63;9266:7;9255:8;9244:9;9240:24;9211:63;:::i;:::-;9201:73;;9327:2;9316:9;9312:18;9299:32;9283:48;;9356:2;9346:8;9343:16;9340:36;;;9372:1;9369;9362:12;9340:36;9395:63;9450:7;9439:8;9428:9;9424:24;9395:63;:::i;:::-;9385:73;;9511:2;9500:9;9496:18;9483:32;9467:48;;9540:2;9530:8;9527:16;9524:36;;;9556:1;9553;9546:12;9524:36;;9579:63;9634:7;9623:8;9612:9;9608:24;9579:63;:::i;9653:1300::-;9889:6;9897;9905;9913;9921;9974:3;9962:9;9953:7;9949:23;9945:33;9942:53;;;9991:1;9988;9981:12;9942:53;10031:9;10018:23;-1:-1:-1;;;;;10101:2:18;10093:6;10090:14;10087:34;;;10117:1;10114;10107:12;10087:34;10140:70;10202:7;10193:6;10182:9;10178:22;10140:70;:::i;:::-;10130:80;;10263:2;10252:9;10248:18;10235:32;10219:48;;10292:2;10282:8;10279:16;10276:36;;;10308:1;10305;10298:12;10276:36;10331:63;10386:7;10375:8;10364:9;10360:24;10331:63;:::i;:::-;10321:73;;10447:2;10436:9;10432:18;10419:32;10403:48;;10476:2;10466:8;10463:16;10460:36;;;10492:1;10489;10482:12;10460:36;10515:63;10570:7;10559:8;10548:9;10544:24;10515:63;:::i;:::-;10505:73;;10631:2;10620:9;10616:18;10603:32;10587:48;;10660:2;10650:8;10647:16;10644:36;;;10676:1;10673;10666:12;10644:36;10699:63;10754:7;10743:8;10732:9;10728:24;10699:63;:::i;:::-;10689:73;;10815:3;10804:9;10800:19;10787:33;10771:49;;10845:2;10835:8;10832:16;10829:36;;;10861:1;10858;10851:12;10829:36;;10884:63;10939:7;10928:8;10917:9;10913:24;10884:63;:::i;10958:1775::-;11276:6;11284;11292;11300;11308;11316;11324;11377:3;11365:9;11356:7;11352:23;11348:33;11345:53;;;11394:1;11391;11384:12;11345:53;11434:9;11421:23;-1:-1:-1;;;;;11504:2:18;11496:6;11493:14;11490:34;;;11520:1;11517;11510:12;11490:34;11543:70;11605:7;11596:6;11585:9;11581:22;11543:70;:::i;:::-;11533:80;;11666:2;11655:9;11651:18;11638:32;11622:48;;11695:2;11685:8;11682:16;11679:36;;;11711:1;11708;11701:12;11679:36;11734:63;11789:7;11778:8;11767:9;11763:24;11734:63;:::i;:::-;11724:73;;11850:2;11839:9;11835:18;11822:32;11806:48;;11879:2;11869:8;11866:16;11863:36;;;11895:1;11892;11885:12;11863:36;11918:63;11973:7;11962:8;11951:9;11947:24;11918:63;:::i;:::-;11908:73;;12034:2;12023:9;12019:18;12006:32;11990:48;;12063:2;12053:8;12050:16;12047:36;;;12079:1;12076;12069:12;12047:36;12102:63;12157:7;12146:8;12135:9;12131:24;12102:63;:::i;:::-;12092:73;;12218:3;12207:9;12203:19;12190:33;12174:49;;12248:2;12238:8;12235:16;12232:36;;;12264:1;12261;12254:12;12232:36;12287:61;12340:7;12329:8;12318:9;12314:24;12287:61;:::i;:::-;12277:71;;12401:3;12390:9;12386:19;12373:33;12357:49;;12431:2;12421:8;12418:16;12415:36;;;12447:1;12444;12437:12;12415:36;12470:62;12524:7;12513:8;12502:9;12498:24;12470:62;:::i;:::-;12460:72;;12585:3;12574:9;12570:19;12557:33;12541:49;;12615:2;12605:8;12602:16;12599:36;;;12631:1;12628;12621:12;12599:36;;12654:73;12719:7;12708:8;12697:9;12693:24;12654:73;:::i;:::-;12644:83;;;10958:1775;;;;;;;;;;:::o;12738:1523::-;13006:6;13014;13022;13030;13038;13046;13099:3;13087:9;13078:7;13074:23;13070:33;13067:53;;;13116:1;13113;13106:12;13067:53;13156:9;13143:23;-1:-1:-1;;;;;13226:2:18;13218:6;13215:14;13212:34;;;13242:1;13239;13232:12;13212:34;13265:70;13327:7;13318:6;13307:9;13303:22;13265:70;:::i;:::-;13255:80;;13388:2;13377:9;13373:18;13360:32;13344:48;;13417:2;13407:8;13404:16;13401:36;;;13433:1;13430;13423:12;13401:36;13456:63;13511:7;13500:8;13489:9;13485:24;13456:63;:::i;:::-;13446:73;;13572:2;13561:9;13557:18;13544:32;13528:48;;13601:2;13591:8;13588:16;13585:36;;;13617:1;13614;13607:12;13585:36;13640:63;13695:7;13684:8;13673:9;13669:24;13640:63;:::i;:::-;13630:73;;13756:2;13745:9;13741:18;13728:32;13712:48;;13785:2;13775:8;13772:16;13769:36;;;13801:1;13798;13791:12;13769:36;13824:63;13879:7;13868:8;13857:9;13853:24;13824:63;:::i;:::-;13814:73;;13940:3;13929:9;13925:19;13912:33;13896:49;;13970:2;13960:8;13957:16;13954:36;;;13986:1;13983;13976:12;13954:36;14009:61;14062:7;14051:8;14040:9;14036:24;14009:61;:::i;:::-;13999:71;;14123:3;14112:9;14108:19;14095:33;14079:49;;14153:2;14143:8;14140:16;14137:36;;;14169:1;14166;14159:12;14137:36;;14192:63;14247:7;14236:8;14225:9;14221:24;14192:63;:::i;:::-;14182:73;;;12738:1523;;;;;;;;:::o;14266:241::-;14322:6;14375:2;14363:9;14354:7;14350:23;14346:32;14343:52;;;14391:1;14388;14381:12;14343:52;14430:9;14417:23;14449:28;14471:5;14449:28;:::i;14512:245::-;14579:6;14632:2;14620:9;14611:7;14607:23;14603:32;14600:52;;;14648:1;14645;14638:12;14600:52;14680:9;14674:16;14699:28;14721:5;14699:28;:::i;14762:184::-;14820:6;14873:2;14861:9;14852:7;14848:23;14844:32;14841:52;;;14889:1;14886;14879:12;14841:52;14912:28;14930:9;14912:28;:::i;14951:180::-;15010:6;15063:2;15051:9;15042:7;15038:23;15034:32;15031:52;;;15079:1;15076;15069:12;15031:52;-1:-1:-1;15102:23:18;;14951:180;-1:-1:-1;14951:180:18:o;15136:247::-;15204:6;15257:2;15245:9;15236:7;15232:23;15228:32;15225:52;;;15273:1;15270;15263:12;15225:52;15305:9;15299:16;15324:29;15347:5;15324:29;:::i;15388:435::-;15441:3;15479:5;15473:12;15506:6;15501:3;15494:19;15532:4;15561:2;15556:3;15552:12;15545:19;;15598:2;15591:5;15587:14;15619:1;15629:169;15643:6;15640:1;15637:13;15629:169;;;15704:13;;15692:26;;15738:12;;;;15773:15;;;;15665:1;15658:9;15629:169;;;-1:-1:-1;15814:3:18;;15388:435;-1:-1:-1;;;;;15388:435:18:o;15828:359::-;16033:2;16029:15;;;;-1:-1:-1;;16025:53:18;16013:66;;16104:2;16095:12;;16088:28;;;;16141:2;16132:12;;16125:28;16178:2;16169:12;;15828:359::o;16192:274::-;16321:3;16359:6;16353:13;16375:53;16421:6;16416:3;16409:4;16401:6;16397:17;16375:53;:::i;:::-;16444:16;;;;;16192:274;-1:-1:-1;;16192:274:18:o;16471:889::-;-1:-1:-1;;;;;16922:15:18;;;16904:34;;16974:15;;16969:2;16954:18;;16947:43;16884:3;17021:2;17006:18;;16999:31;;;16847:4;;17053:57;;17090:19;;17082:6;17053:57;:::i;:::-;17158:9;17150:6;17146:22;17141:2;17130:9;17126:18;17119:50;17192:44;17229:6;17221;17192:44;:::i;:::-;17273:22;;;17267:3;17252:19;;;17245:51;;;;-1:-1:-1;;17320:1:18;17305:17;;17351:2;17339:15;;16471:889;-1:-1:-1;;;;16471:889:18:o;18671:756::-;18984:14;;18977:22;18959:41;;19031:2;19016:18;;19009:34;;;19091:4;19079:17;;19074:2;19059:18;;19052:45;-1:-1:-1;;;;;;19133:33:18;;19128:2;19113:18;;19106:61;19216:6;19204:19;;19198:3;19183:19;;19176:48;18946:3;18931:19;;19254:1;19243:13;;19233:144;;19299:10;19294:3;19290:20;19287:1;19280:31;19334:4;19331:1;19324:15;19362:4;19359:1;19352:15;19233:144;19414:6;19408:3;19397:9;19393:19;19386:35;18671:756;;;;;;;;;:::o;19639:383::-;19788:2;19777:9;19770:21;19751:4;19820:6;19814:13;19863:6;19858:2;19847:9;19843:18;19836:34;19879:66;19938:6;19933:2;19922:9;19918:18;19913:2;19905:6;19901:15;19879:66;:::i;:::-;20006:2;19985:15;-1:-1:-1;;19981:29:18;19966:45;;;;20013:2;19962:54;;19639:383;-1:-1:-1;;19639:383:18:o;25062:351::-;25264:2;25246:21;;;25303:2;25283:18;;;25276:30;25342:29;25337:2;25322:18;;25315:57;25404:2;25389:18;;25062:351::o;25418:347::-;25620:2;25602:21;;;25659:2;25639:18;;;25632:30;25698:25;25693:2;25678:18;;25671:53;25756:2;25741:18;;25418:347::o;26468:349::-;26670:2;26652:21;;;26709:2;26689:18;;;26682:30;26748:27;26743:2;26728:18;;26721:55;26808:2;26793:18;;26468:349::o;30751:337::-;30953:2;30935:21;;;30992:2;30972:18;;;30965:30;-1:-1:-1;;;31026:2:18;31011:18;;31004:43;31079:2;31064:18;;30751:337::o;32556:340::-;32758:2;32740:21;;;32797:2;32777:18;;;32770:30;-1:-1:-1;;;32831:2:18;32816:18;;32809:46;32887:2;32872:18;;32556:340::o;34549:275::-;34620:2;34614:9;34685:2;34666:13;;-1:-1:-1;;34662:27:18;34650:40;;-1:-1:-1;;;;;34705:34:18;;34741:22;;;34702:62;34699:88;;;34767:18;;:::i;:::-;34803:2;34796:22;34549:275;;-1:-1:-1;34549:275:18:o;34829:183::-;34889:4;-1:-1:-1;;;;;34914:6:18;34911:30;34908:56;;;34944:18;;:::i;:::-;-1:-1:-1;34989:1:18;34985:14;35001:4;34981:25;;34829:183::o;35017:224::-;35056:3;35084:6;35117:2;35114:1;35110:10;35147:2;35144:1;35140:10;35178:3;35174:2;35170:12;35165:3;35162:21;35159:47;;;35186:18;;:::i;:::-;35222:13;;35017:224;-1:-1:-1;;;;35017:224:18:o;35246:128::-;35286:3;35317:1;35313:6;35310:1;35307:13;35304:39;;;35323:18;;:::i;:::-;-1:-1:-1;35359:9:18;;35246:128::o;35379:217::-;35419:1;35445;35435:132;;35489:10;35484:3;35480:20;35477:1;35470:31;35524:4;35521:1;35514:15;35552:4;35549:1;35542:15;35435:132;-1:-1:-1;35581:9:18;;35379:217::o;35601:422::-;35690:1;35733:5;35690:1;35747:270;35768:7;35758:8;35755:21;35747:270;;;35827:4;35823:1;35819:6;35815:17;35809:4;35806:27;35803:53;;;35836:18;;:::i;:::-;35886:7;35876:8;35872:22;35869:55;;;35906:16;;;;35869:55;35985:22;;;;35945:15;;;;35747:270;;;35751:3;35601:422;;;;;:::o;36028:131::-;36088:5;36117:36;36144:8;36138:4;36213:5;36243:8;36233:80;;-1:-1:-1;36284:1:18;36298:5;;36233:80;36332:4;36322:76;;-1:-1:-1;36369:1:18;36383:5;;36322:76;36414:4;36432:1;36427:59;;;;36500:1;36495:130;;;;36407:218;;36427:59;36457:1;36448:10;;36471:5;;;36495:130;36532:3;36522:8;36519:17;36516:43;;;36539:18;;:::i;:::-;-1:-1:-1;;36595:1:18;36581:16;;36610:5;;36407:218;;36709:2;36699:8;36696:16;36690:3;36684:4;36681:13;36677:36;36671:2;36661:8;36658:16;36653:2;36647:4;36644:12;36640:35;36637:77;36634:159;;;-1:-1:-1;36746:19:18;;;36778:5;;36634:159;36825:34;36850:8;36844:4;36825:34;:::i;:::-;36895:6;36891:1;36887:6;36883:19;36874:7;36871:32;36868:58;;;36906:18;;:::i;:::-;36944:20;;36164:806;-1:-1:-1;;;36164:806:18:o;36975:168::-;37015:7;37081:1;37077;37073:6;37069:14;37066:1;37063:21;37058:1;37051:9;37044:17;37040:45;37037:71;;;37088:18;;:::i;:::-;-1:-1:-1;37128:9:18;;36975:168::o;37148:217::-;37187:4;37216:6;37272:10;;;;37242;;37294:12;;;37291:38;;;37309:18;;:::i;:::-;37346:13;;37148:217;-1:-1:-1;;;37148:217:18:o;37370:125::-;37410:4;37438:1;37435;37432:8;37429:34;;;37443:18;;:::i;:::-;-1:-1:-1;37480:9:18;;37370:125::o;37500:258::-;37572:1;37582:113;37596:6;37593:1;37590:13;37582:113;;;37672:11;;;37666:18;37653:11;;;37646:39;37618:2;37611:10;37582:113;;;37713:6;37710:1;37707:13;37704:48;;;-1:-1:-1;;37748:1:18;37730:16;;37723:27;37500:258::o;37763:135::-;37802:3;-1:-1:-1;;37823:17:18;;37820:43;;;37843:18;;:::i;:::-;-1:-1:-1;37890:1:18;37879:13;;37763:135::o;37903:127::-;37964:10;37959:3;37955:20;37952:1;37945:31;37995:4;37992:1;37985:15;38019:4;38016:1;38009:15;38035:127;38096:10;38091:3;38087:20;38084:1;38077:31;38127:4;38124:1;38117:15;38151:4;38148:1;38141:15;38167:127;38228:10;38223:3;38219:20;38216:1;38209:31;38259:4;38256:1;38249:15;38283:4;38280:1;38273:15;38299:127;38360:10;38355:3;38351:20;38348:1;38341:31;38391:4;38388:1;38381:15;38415:4;38412:1;38405:15;38431:131;-1:-1:-1;;;;;38506:31:18;;38496:42;;38486:70;;38552:1;38549;38542:12;38567:118;38653:5;38646:13;38639:21;38632:5;38629:32;38619:60;;38675:1;38672;38665:12;38690:114;38774:4;38767:5;38763:16;38756:5;38753:27;38743:55;;38794:1;38791;38784:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "offset": [
    2113,
    28010
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x76774EA3 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC9C40183 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC9C40183 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xCBE55E54 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0xFE46B7CD EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x76774EA3 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x937821A1 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xBF2B23EA EQ PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1C31F710 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x1C31F710 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x1CBB410F EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x296C21B7 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x14B5685C EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x193 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x4581 JUMP JUMPDEST PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0x4275 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x40CD JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x4547 JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x4003 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x4339 JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x41A0 JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP9 DUP10 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x20 DUP9 ADD MSTORE SWAP5 DUP8 AND SWAP5 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x124 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x118 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x459C JUMP JUMPDEST PUSH2 0x5F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4275 JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x2E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4020 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x41D5 JUMP JUMPDEST PUSH2 0x6A7 JUMP JUMPDEST PUSH2 0x14D PUSH2 0x343 CALLDATASIZE PUSH1 0x4 PUSH2 0x4453 JUMP JUMPDEST PUSH2 0x70E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0x4138 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x394 PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x41A0 JUMP JUMPDEST PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH2 0xFFFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xFF SWAP1 SWAP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x124 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x400 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x47E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x44A PUSH2 0x7CB PUSH2 0x445 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xD6D JUMP JUMPDEST PUSH2 0xEF3 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x47B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x480F JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x480F JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x47E8 JUMP JUMPDEST PUSH2 0x512 PUSH2 0x1028 PUSH2 0x445 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x15CB JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x53C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x460D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x57A JUMPI PUSH2 0x57A PUSH2 0x4A8D JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL DUP2 DIV PUSH1 0xE0 SHL SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0xE0 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5D4 JUMPI PUSH2 0x5D4 PUSH2 0x4A8D JUMP JUMPDEST SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP POP POP SWAP4 SWAP8 POP SWAP4 SWAP8 POP SWAP4 SWAP8 SWAP1 SWAP5 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x61B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x480F JUMP JUMPDEST PUSH2 0x2710 DUP2 LT PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A66656520657863656564732031303070637400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x694 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x47E8 JUMP JUMPDEST PUSH2 0x44A PUSH2 0x16FB PUSH2 0x445 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xD6D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x47E8 JUMP JUMPDEST PUSH2 0x708 PUSH2 0x1B02 PUSH2 0x445 DUP7 DUP7 DUP7 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x702 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH2 0xD6D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x47E8 JUMP JUMPDEST PUSH2 0x745 PUSH2 0x1EBB PUSH2 0x445 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x263C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x76A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x460D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP10 PUSH1 0x1 PUSH1 0xC8 SHL DUP3 DIV PUSH2 0xFFFF AND SWAP10 POP PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV PUSH1 0xFF AND SWAP9 POP PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0xD69 JUMPI PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x7F6 JUMPI PUSH2 0x7F6 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x814 JUMPI PUSH2 0x814 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x100 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x833 JUMPI PUSH2 0x833 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x84D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x460D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x881 JUMPI PUSH2 0x881 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x89F JUMPI PUSH2 0x89F PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x120 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x8BE JUMPI PUSH2 0x8BE PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8D8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x460D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE DUP4 DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE DUP4 SWAP1 KECCAK256 PUSH1 0xE0 DUP6 ADD SWAP1 SWAP4 MSTORE DUP2 SLOAD SWAP1 SWAP5 POP SWAP1 SWAP3 PUSH2 0x9D9 SWAP2 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x931 JUMPI PUSH2 0x931 PUSH2 0x4A8D JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x942 JUMPI PUSH2 0x942 PUSH2 0x4A8D JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP4 DIV PUSH1 0xE0 SHL AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 DIV AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9C0 PUSH2 0x4A8D JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9D1 JUMPI PUSH2 0x9D1 PUSH2 0x4A8D JUMP JUMPDEST SWAP1 MSTORE POP PUSH2 0x275E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0xA2E SWAP1 PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0xA85 SWAP1 CALLER TIMESTAMP PUSH2 0x2867 JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xA9B JUMPI PUSH2 0xA9B PUSH2 0x4A8D JUMP JUMPDEST DUP7 PUSH1 0x40 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xAB1 JUMPI PUSH2 0xAB1 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xACA JUMPI PUSH2 0xACA PUSH2 0x4A8D JUMP JUMPDEST EQ PUSH2 0xAE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4743 JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP3 DIV AND GT ISZERO PUSH2 0xB48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2932A7232A1D1D31B934BA34B1B0B61032B93937B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xB64 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x4A19 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP5 SLOAD SWAP2 SWAP3 POP PUSH2 0xC85 SWAP2 DUP6 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB90 JUMPI PUSH2 0xB90 PUSH2 0x4A8D JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xBA1 JUMPI PUSH2 0xBA1 PUSH2 0x4A8D JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP4 DIV PUSH1 0xE0 SHL AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 DIV AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC1F JUMPI PUSH2 0xC1F PUSH2 0x4A8D JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC30 JUMPI PUSH2 0xC30 PUSH2 0x4A8D JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE DUP4 PUSH2 0x291C JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP4 DIV DUP4 AND SWAP3 PUSH1 0x1C SWAP2 PUSH2 0xCBB SWAP2 DUP6 SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV AND PUSH2 0x488C JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH2 0x120 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xCEC JUMPI PUSH2 0xCEC PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH32 0x58855DD8908B14C6D7922D964418F37EFD968BC6B9B857560870B14A898F916D TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xD2F SWAP2 SWAP1 PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB NOT AND SWAP1 SSTORE POP DUP1 PUSH2 0xD61 DUP2 PUSH2 0x4A5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7CE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD75 PUSH2 0x3C5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xDBA JUMPI PUSH2 0xDBA PUSH2 0x4AB9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDE3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE14 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE45 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE84 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEB5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEE6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD MLOAD GT PUSH2 0xF39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x52654E46543A3A6E6F206E667473 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD MLOAD DUP2 PUSH1 0x20 ADD MLOAD EQ PUSH2 0x101B JUMPI DUP1 PUSH1 0x60 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0xF63 JUMPI PUSH2 0xF63 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x60 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0xF8E JUMPI PUSH2 0xF8E PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0xFDE JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0xFC3 JUMPI PUSH2 0xFC3 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xFDC JUMPI PUSH2 0xFDC PUSH2 0x4A8D JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0xFFB JUMPI PUSH1 0x20 DUP2 ADD DUP1 MLOAD SWAP1 PUSH2 0xFF3 DUP3 PUSH2 0x4A5C JUMP JUMPDEST SWAP1 MSTORE POP PUSH2 0xF39 JUMP JUMPDEST PUSH2 0x1008 DUP2 DUP4 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x20 DUP2 ADD DUP1 MLOAD DUP1 DUP4 MSTORE SWAP1 PUSH2 0xFF3 DUP3 PUSH2 0x4A5C JUMP JUMPDEST PUSH2 0xD69 DUP2 DUP4 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0x158A JUMPI PUSH2 0x1041 DUP3 DUP3 PUSH2 0x2BC1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x105D JUMPI PUSH2 0x105D PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x107B JUMPI PUSH2 0x107B PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1098 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x460D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 PUSH1 0xE0 DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 SLOAD SWAP1 SWAP4 POP SWAP1 SWAP2 PUSH2 0x1190 SWAP2 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x10E8 JUMPI PUSH2 0x10E8 PUSH2 0x4A8D JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x10F9 JUMPI PUSH2 0x10F9 PUSH2 0x4A8D JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP4 DIV PUSH1 0xE0 SHL AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 DIV AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1177 JUMPI PUSH2 0x1177 PUSH2 0x4A8D JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1188 JUMPI PUSH2 0x1188 PUSH2 0x4A8D JUMP JUMPDEST SWAP1 MSTORE POP PUSH2 0x2D7F JUMP JUMPDEST PUSH2 0x11C8 DUP5 PUSH2 0x180 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x11AA JUMPI PUSH2 0x11AA PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11C3 JUMPI PUSH2 0x11C3 PUSH2 0x4A8D JUMP JUMPDEST PUSH2 0x2E38 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x40 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x11E1 JUMPI PUSH2 0x11E1 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11FA JUMPI PUSH2 0x11FA PUSH2 0x4A8D JUMP JUMPDEST EQ SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x40 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x121E JUMPI PUSH2 0x121E PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1237 JUMPI PUSH2 0x1237 PUSH2 0x4A8D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xC0 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1261 JUMPI PUSH2 0x1261 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xE0 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1287 JUMPI PUSH2 0x1287 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0x12C6 JUMPI DUP7 PUSH1 0xA0 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x12B9 JUMPI PUSH2 0x12B9 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0x12FA JUMPI DUP7 PUSH1 0xA0 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x12ED JUMPI PUSH2 0x12ED PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x12FD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH2 0x180 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x131D JUMPI PUSH2 0x131D PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1336 JUMPI PUSH2 0x1336 PUSH2 0x4A8D JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0x1363 JUMPI PUSH2 0x1363 PUSH2 0x4A8D JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 SLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0xA0 DUP8 ADD MLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP5 AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0xA8 SHL PUSH1 0xFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH6 0xFFFFFFFFFFFF PUSH1 0xB0 SHL NOT AND PUSH1 0x1 PUSH1 0xB0 SHL PUSH1 0xE0 SWAP3 SWAP1 SWAP3 SHR SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0xD0 SHL NOT AND OR PUSH1 0x1 PUSH1 0xD0 SHL PUSH2 0xFFFF SWAP4 DUP5 AND MUL OR PUSH2 0xFFFF PUSH1 0xE0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL SWAP1 DUP2 OR DUP4 SSTORE PUSH1 0xC0 DUP5 ADD MLOAD SWAP2 DUP4 SWAP2 PUSH3 0xFFFFFF PUSH1 0xE0 SHL NOT SWAP1 SWAP2 AND PUSH1 0xFF PUSH1 0xF0 SHL NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0xF0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x143F JUMPI PUSH2 0x143F PUSH2 0x4A8D JUMP JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP5 PUSH1 0x80 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x145D JUMPI PUSH2 0x145D PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x147F JUMPI PUSH2 0x147F PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x46E173C7568BB4F093E16923381DCBA2A6B48F9CC9E688867965731218500AD3 DUP5 PUSH1 0x3 SLOAD DUP11 PUSH1 0xC0 ADD MLOAD DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x14D5 JUMPI PUSH2 0x14D5 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 PUSH1 0xE0 ADD MLOAD DUP12 DUP2 MLOAD DUP2 LT PUSH2 0x14F3 JUMPI PUSH2 0x14F3 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 PUSH2 0x1523 JUMPI DUP13 PUSH1 0xA0 ADD MLOAD DUP13 DUP2 MLOAD DUP2 LT PUSH2 0x1516 JUMPI PUSH2 0x1516 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP14 PUSH2 0x180 ADD MLOAD DUP14 DUP2 MLOAD DUP2 LT PUSH2 0x153D JUMPI PUSH2 0x153D PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1557 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x46AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x3 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x156F DUP4 PUSH2 0x4A5C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0x1582 SWAP1 PUSH2 0x4A5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x102B JUMP JUMPDEST POP PUSH2 0x15C8 DUP2 CALLER ADDRESS PUSH2 0x15AA DUP6 PUSH1 0x80 ADD MLOAD DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD PUSH1 0x0 PUSH2 0x2E8B JUMP JUMPDEST PUSH2 0x15C3 DUP7 PUSH1 0xA0 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD PUSH1 0x0 PUSH2 0x2E8B JUMP JUMPDEST PUSH2 0x2F4A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x15D3 PUSH2 0x3C5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x162A JUMPI PUSH2 0x162A PUSH2 0x4AB9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1653 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1684 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16B5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16E6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0xD69 JUMPI PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x1726 JUMPI PUSH2 0x1726 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1744 JUMPI PUSH2 0x1744 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x100 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1763 JUMPI PUSH2 0x1763 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x177D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x460D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x17B1 JUMPI PUSH2 0x17B1 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x17CF JUMPI PUSH2 0x17CF PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x120 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x17EE JUMPI PUSH2 0x17EE PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1808 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x460D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE DUP4 DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE DUP4 SWAP1 KECCAK256 PUSH1 0xE0 DUP6 ADD SWAP1 SWAP4 MSTORE DUP2 SLOAD SWAP1 SWAP5 POP SWAP1 SWAP3 PUSH2 0x1861 SWAP2 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x931 JUMPI PUSH2 0x931 PUSH2 0x4A8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x18B6 SWAP1 PUSH2 0x27E1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x190C SWAP1 TIMESTAMP PUSH2 0x30CB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH2 0x1A2A SWAP2 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1936 JUMPI PUSH2 0x1936 PUSH2 0x4A8D JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1947 JUMPI PUSH2 0x1947 PUSH2 0x4A8D JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP4 DIV PUSH1 0xE0 SHL AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 DIV AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19C5 JUMPI PUSH2 0x19C5 PUSH2 0x4A8D JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19D6 JUMPI PUSH2 0x19D6 PUSH2 0x4A8D JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x3121 JUMP JUMPDEST DUP1 SLOAD DUP3 SLOAD PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP3 DIV DUP3 AND SWAP2 DUP5 SWAP2 PUSH1 0x1C SWAP2 PUSH2 0x1A55 SWAP2 DUP6 SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV AND PUSH2 0x488C JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH2 0x120 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1A86 JUMPI PUSH2 0x1A86 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH32 0x4630B53A4335803B2A4F9C1CE896F4CADBF909907810E496EDA17614483D7B94 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1AC9 SWAP2 SWAP1 PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB NOT AND SWAP1 SSTORE POP DUP1 PUSH2 0x1AFA DUP2 PUSH2 0x4A5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16FE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x0 SWAP2 PUSH2 0x1B15 SWAP2 PUSH2 0x4A19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B2C JUMPI PUSH2 0x1B2C PUSH2 0x4AB9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B55 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP3 MLOAD SWAP1 SWAP2 POP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0x1E88 JUMPI PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x1B84 JUMPI PUSH2 0x1B84 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1BA2 JUMPI PUSH2 0x1BA2 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x100 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1BC1 JUMPI PUSH2 0x1BC1 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BDB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x460D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 PUSH1 0xE0 DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 SLOAD SWAP1 SWAP4 POP SWAP1 SWAP2 PUSH2 0x1C2B SWAP2 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x931 JUMPI PUSH2 0x931 PUSH2 0x4A8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP2 SLOAD PUSH2 0x1CFE SWAP2 SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C55 JUMPI PUSH2 0x1C55 PUSH2 0x4A8D JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C66 JUMPI PUSH2 0x1C66 PUSH2 0x4A8D JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP4 DIV PUSH1 0xE0 SHL AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 DIV AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CE4 JUMPI PUSH2 0x1CE4 PUSH2 0x4A8D JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1CF5 JUMPI PUSH2 0x1CF5 PUSH2 0x4A8D JUMP JUMPDEST SWAP1 MSTORE POP CALLER PUSH2 0x32D3 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1D14 JUMPI PUSH2 0x1D14 PUSH2 0x4A8D JUMP JUMPDEST DUP6 PUSH1 0x40 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1D2A JUMPI PUSH2 0x1D2A PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1D43 JUMPI PUSH2 0x1D43 PUSH2 0x4A8D JUMP JUMPDEST EQ PUSH2 0x1D60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4743 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xD0 SHL DUP2 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP3 DIV AND EQ PUSH2 0x1DBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14995391950E8E9858DD1A5D995B1E481C995B9D1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP1 SLOAD DUP6 MLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP1 DUP6 SWAP1 PUSH2 0x1DDB SWAP1 DUP7 PUSH2 0x4A19 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1DEB JUMPI PUSH2 0x1DEB PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP5 PUSH2 0x100 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1E0E JUMPI PUSH2 0x1E0E PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH32 0xD0234BC8DD7E933F60CBC1E90FC139A8A9683AF1CB92743607DAFB9DFB70059B TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1E51 SWAP2 SWAP1 PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH2 0x1E80 DUP2 PUSH2 0x4A5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B5C JUMP JUMPDEST POP PUSH2 0xD69 DUP3 ADDRESS CALLER PUSH2 0x1EA8 DUP7 PUSH1 0x80 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD PUSH1 0x0 PUSH2 0x2E8B JUMP JUMPDEST DUP7 MLOAD PUSH1 0x20 DUP9 ADD MLOAD PUSH2 0x15C3 SWAP2 DUP9 SWAP2 DUP2 PUSH2 0x2E8B JUMP JUMPDEST DUP1 MLOAD JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0xD69 JUMPI PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x1EE6 JUMPI PUSH2 0x1EE6 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1F04 JUMPI PUSH2 0x1F04 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x100 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1F23 JUMPI PUSH2 0x1F23 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F3D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x460D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x1F71 JUMPI PUSH2 0x1F71 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1F8F JUMPI PUSH2 0x1F8F PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FAC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x460D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE DUP4 DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE DUP4 SWAP1 KECCAK256 PUSH1 0xE0 DUP6 ADD SWAP1 SWAP4 MSTORE DUP2 SLOAD SWAP1 SWAP5 POP SWAP1 SWAP3 PUSH2 0x2005 SWAP2 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x931 JUMPI PUSH2 0x931 PUSH2 0x4A8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x205A SWAP1 PUSH2 0x332C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH2 0x212F SWAP2 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2084 JUMPI PUSH2 0x2084 PUSH2 0x4A8D JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2095 JUMPI PUSH2 0x2095 PUSH2 0x4A8D JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP4 DIV PUSH1 0xE0 SHL AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 DIV AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2113 JUMPI PUSH2 0x2113 PUSH2 0x4A8D JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2124 JUMPI PUSH2 0x2124 PUSH2 0x4A8D JUMP JUMPDEST SWAP1 MSTORE POP DUP8 DUP8 CALLER PUSH2 0x33DF JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2145 JUMPI PUSH2 0x2145 PUSH2 0x4A8D JUMP JUMPDEST DUP7 PUSH1 0x40 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x215B JUMPI PUSH2 0x215B PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2174 JUMPI PUSH2 0x2174 PUSH2 0x4A8D JUMP JUMPDEST EQ PUSH2 0x2191 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4743 JUMP JUMPDEST DUP2 SLOAD PUSH2 0x160 DUP8 ADD MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP2 DUP8 SWAP1 DUP2 LT PUSH2 0x21B8 JUMPI PUSH2 0x21B8 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x220E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A696E76616C69642072656E7420616D6F756E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x222E JUMPI PUSH2 0x222E PUSH2 0x4A8D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC6EE427F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC6EE427F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x227A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x228E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22B2 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2303 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2327 SWAP2 SWAP1 PUSH2 0x45B5 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x2339 DUP3 PUSH1 0xA PUSH2 0x492F JUMP JUMPDEST DUP7 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2355 SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xE0 SHL DUP4 PUSH2 0x364A JUMP JUMPDEST DUP12 PUSH2 0x140 ADD MLOAD DUP12 DUP2 MLOAD DUP2 LT PUSH2 0x236C JUMPI PUSH2 0x236C PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND DUP13 PUSH2 0x160 ADD MLOAD DUP13 DUP2 MLOAD DUP2 LT PUSH2 0x238E JUMPI PUSH2 0x238E PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x23A0 SWAP2 SWAP1 PUSH2 0x49D7 JUMP JUMPDEST PUSH2 0x23AA SWAP2 SWAP1 PUSH2 0x49D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x23CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x47B1 JUMP JUMPDEST PUSH2 0x23E1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER ADDRESS DUP5 PUSH2 0x36D9 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH2 0x140 ADD MLOAD DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x2414 JUMPI PUSH2 0x2414 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH2 0x160 ADD MLOAD DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x2447 JUMPI PUSH2 0x2447 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH2 0xFFFF SWAP1 DUP2 AND SWAP1 SWAP3 MSTORE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP4 DUP7 ADD MLOAD SWAP3 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0xC8 SHL MUL PUSH2 0xFFFF PUSH1 0xC8 SHL NOT PUSH4 0xFFFFFFFF SWAP1 SWAP7 AND PUSH1 0x1 PUSH1 0xA8 SHL MUL SWAP6 SWAP1 SWAP6 AND PUSH6 0xFFFFFFFFFFFF PUSH1 0xA8 SHL NOT PUSH1 0xFF SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP3 SWAP1 SWAP3 OR AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x160 DUP10 ADD MLOAD DUP1 MLOAD DUP10 SWAP1 DUP2 LT PUSH2 0x24F7 JUMPI PUSH2 0x24F7 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1C SWAP1 PUSH2 0x252D SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x49F6 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 SLOAD DUP10 PUSH2 0x100 ADD MLOAD DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x2561 JUMPI PUSH2 0x2561 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x61E1A1E6F89EABA4BA0119B0023BD32B1BB0412AB96CCD8D0588A3E98A097631 DUP13 PUSH2 0x160 ADD MLOAD DUP13 DUP2 MLOAD DUP2 LT PUSH2 0x25AB JUMPI PUSH2 0x25AB PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP14 PUSH2 0x140 ADD MLOAD DUP14 DUP2 MLOAD DUP2 LT PUSH2 0x25CA JUMPI PUSH2 0x25CA PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP11 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x261D DUP4 PUSH2 0x4A5C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP POP DUP1 DUP1 PUSH2 0x2634 SWAP1 PUSH2 0x4A5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x2644 PUSH2 0x3C5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2689 JUMPI PUSH2 0x2689 PUSH2 0x4AB9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x26B2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x26E3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2714 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE DUP2 DUP10 ADD DUP4 MSTORE DUP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x80 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 MLOAD SWAP5 DUP6 MSTORE SWAP5 DUP5 ADD SWAP1 SWAP3 MSTORE POP PUSH1 0xA0 SWAP1 SWAP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x276B DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x3744 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xFF AND PUSH2 0x27B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x52654E46543A3A6475726174696F6E207A65726F PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x15C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x47B1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x27EC SWAP1 PUSH2 0x3744 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0xFF AND PUSH2 0x2810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x477A JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x15C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E746564206174206973207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x28C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2932A7232A1D1D3737BA103932B73A32B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH2 0x28CA DUP4 DUP3 PUSH2 0x3790 JUMP JUMPDEST ISZERO PUSH2 0x2917 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A706173742072657475726E2064617465000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2934 JUMPI PUSH2 0x2934 PUSH2 0x4A8D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC6EE427F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC6EE427F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2994 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29B8 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A2D SWAP2 SWAP1 PUSH2 0x45B5 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x2A3F DUP3 PUSH1 0xA PUSH2 0x492F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A51 DUP9 PUSH1 0x60 ADD MLOAD DUP4 PUSH2 0x364A JUMP JUMPDEST DUP8 PUSH1 0x60 ADD MLOAD PUSH2 0xFFFF AND PUSH2 0x2A64 SWAP2 SWAP1 PUSH2 0x49D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND DUP3 PUSH2 0x2A7B SWAP2 SWAP1 PUSH2 0x49D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x15180 PUSH2 0x2A8D DUP5 DUP11 PUSH2 0x49D7 JUMP JUMPDEST PUSH2 0x2A97 SWAP2 SWAP1 PUSH2 0x48CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x2AF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A746F74616C2072656E746572207061796D656E74206973207A PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x65726F PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2B45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6C656E646572207061796D656E74206973207A65726F000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B51 DUP3 DUP5 PUSH2 0x4A19 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD PUSH1 0x0 EQ PUSH2 0x2B7D JUMPI PUSH1 0x0 PUSH2 0x2B6D DUP4 DUP14 PUSH1 0xC0 ADD MLOAD PUSH2 0x381E JUMP JUMPDEST SWAP1 POP PUSH2 0x2B79 DUP2 DUP5 PUSH2 0x4A19 JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x20 DUP12 ADD MLOAD PUSH2 0x2B97 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP5 PUSH2 0x38FB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BB4 JUMPI DUP10 MLOAD PUSH2 0x2BB4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP4 PUSH2 0x38FB JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xA0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2BD9 JUMPI PUSH2 0x2BD9 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x2C2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6C656E6420616D6F756E74206973207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH2 0xFFFF DUP1 AND DUP3 PUSH1 0xA0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2C49 JUMPI PUSH2 0x2C49 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x2C93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2932A7232A1D1D3737BA103AB4B73A189B PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xC0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2CAB JUMPI PUSH2 0x2CAB PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT PUSH2 0x2CD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x477A JUMP JUMPDEST PUSH1 0xFF DUP1 AND DUP3 PUSH1 0xC0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2CED JUMPI PUSH2 0x2CED PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT ISZERO PUSH2 0x2D39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0xA4CA9C8CA87474DCDEE840EAD2DCE87 PUSH1 0x83 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xE0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2D51 JUMPI PUSH2 0x2D51 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE0 SHR PUSH4 0xFFFFFFFF AND GT PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x47B1 JUMP JUMPDEST PUSH2 0x2D8C DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x392B JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2DDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x52654E46543A3A6475726174696F6E206E6F74207A65726F PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND ISZERO PUSH2 0x15C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E74207072696365206E6F74207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND GT PUSH2 0x15C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A746F6B656E2069732073656E74696E656C0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2E97 DUP5 DUP5 PUSH2 0x4A19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2EAE JUMPI PUSH2 0x2EAE PUSH2 0x4AB9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2ED7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F41 JUMPI DUP6 PUSH2 0x2EEF DUP5 DUP4 PUSH2 0x4A19 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2EFF JUMPI PUSH2 0x2EFF PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP7 DUP4 PUSH2 0x2F14 SWAP2 SWAP1 PUSH2 0x4A19 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2F24 JUMPI PUSH2 0x2F24 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x2F39 DUP2 PUSH2 0x4A5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2EDC JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP7 ADD MLOAD DUP7 MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x2F63 JUMPI PUSH2 0x2F63 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2F7C JUMPI PUSH2 0x2F7C PUSH2 0x4A8D JUMP JUMPDEST EQ ISZERO PUSH2 0x3042 JUMPI PUSH1 0x60 DUP6 ADD MLOAD DUP6 MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x2F99 JUMPI PUSH2 0x2F99 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD DUP6 DUP6 DUP9 PUSH1 0x80 ADD MLOAD DUP10 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x2FCB JUMPI PUSH2 0x2FCB PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3025 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3039 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x44A JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD DUP6 MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x3059 JUMPI PUSH2 0x3059 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2EB2C2D6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3092 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4653 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x30C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x30D5 DUP3 DUP3 PUSH2 0x3790 JUMP JUMPDEST PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72657475726E2064617465206E6F7420706173736564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xC0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3139 JUMPI PUSH2 0x3139 PUSH2 0x4A8D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC6EE427F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC6EE427F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3199 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31BD SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x320E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3232 SWAP2 SWAP1 PUSH2 0x45B5 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x3244 DUP3 PUSH1 0xA PUSH2 0x492F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3256 DUP8 PUSH1 0x60 ADD MLOAD DUP4 PUSH2 0x364A JUMP JUMPDEST DUP7 PUSH1 0x60 ADD MLOAD PUSH2 0xFFFF AND PUSH2 0x3269 SWAP2 SWAP1 PUSH2 0x49D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND DUP3 PUSH2 0x3280 SWAP2 SWAP1 PUSH2 0x49D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 EQ PUSH2 0x32AF JUMPI PUSH2 0x32AC DUP3 DUP9 PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x32A7 JUMPI PUSH2 0x32A7 PUSH2 0x4A8D JUMP JUMPDEST PUSH2 0x381E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD PUSH2 0x30C0 SWAP1 PUSH2 0x32C2 DUP4 DUP6 PUSH2 0x4A19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 SWAP1 PUSH2 0x38FB JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2932A7232A1D1D3737BA103632B73232B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x3337 SWAP1 PUSH2 0x392B JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3387 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x52654E46543A3A6475726174696F6E206E6F74207A65726F PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x15C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E746564206174206E6F74207A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3445 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A63616E742072656E74206F776E206E66740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0xFF DUP1 AND DUP4 PUSH2 0x140 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3460 JUMPI PUSH2 0x3460 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT ISZERO PUSH2 0x34AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0xA4CA9C8CA87474DCDEE840EAD2DCE87 PUSH1 0x83 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x140 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x34C5 JUMPI PUSH2 0x34C5 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT PUSH2 0x34ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x477A JUMP JUMPDEST PUSH2 0xFFFF DUP1 AND DUP4 PUSH2 0x160 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3509 JUMPI PUSH2 0x3509 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x3553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2932A7232A1D1D3737BA103AB4B73A189B PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x160 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x356C JUMPI PUSH2 0x356C PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x35C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E74416D6F756E74206973207A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND DUP4 PUSH2 0x140 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x35E0 JUMPI PUSH2 0x35E0 PUSH2 0x4AA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT ISZERO PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E74206475726174696F6E206578636565647320616C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDEEECAC840DAC2F PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3656 DUP4 DUP4 PUSH2 0x3982 JUMP JUMPDEST PUSH1 0xF0 DUP4 SWAP1 SHR PUSH2 0xFFFF PUSH1 0xE0 DUP6 SWAP1 SHR AND PUSH1 0x0 PUSH2 0x3672 PUSH2 0x2710 DUP7 PUSH2 0x48CA JUMP JUMPDEST SWAP1 POP PUSH2 0x270F DUP4 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x3688 JUMPI PUSH2 0x270F SWAP3 POP JUMPDEST PUSH2 0x270F DUP3 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x369C JUMPI PUSH2 0x270F SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x36AC DUP7 PUSH2 0xFFFF DUP7 AND PUSH2 0x49D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x36BE DUP4 PUSH2 0xFFFF DUP7 AND PUSH2 0x49D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x36CC DUP3 DUP5 PUSH2 0x48B2 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x708 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x3A13 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x52654E46543A3A7A65726F2061646472657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP3 GT PUSH2 0x37EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6E6F77206265666F72652072656E7465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH3 0x15180 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND PUSH2 0x3801 SWAP2 SWAP1 PUSH2 0x49D7 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x3816 SWAP1 PUSH4 0xFFFFFFFF AND DUP5 PUSH2 0x4A19 JUMP JUMPDEST GT SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD DUP4 PUSH2 0x382E SWAP2 SWAP1 PUSH2 0x49D7 JUMP JUMPDEST SWAP1 POP PUSH2 0x383C PUSH2 0x2710 DUP3 PUSH2 0x48CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3852 JUMPI PUSH2 0x3852 PUSH2 0x4A8D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC6EE427F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC6EE427F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x389E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38D6 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH2 0x38F3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP2 AND DUP6 PUSH2 0x38FB JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2917 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x370D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x15C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6E6F742061207A65726F206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0xE0 DUP3 SWAP1 SHR PUSH2 0x39CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x52654E46543A3A696E76616C6964207072696365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x52654E46543A3A696E76616C6964207363616C65 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A68 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3AE5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2917 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3A86 SWAP2 SWAP1 PUSH2 0x4564 JUMP JUMPDEST PUSH2 0x2917 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3AF4 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3AFE JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x3B5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x429 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x3BAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3BC9 SWAP2 SWAP1 PUSH2 0x4637 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3C06 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3C0B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3C1B DUP3 DUP3 DUP7 PUSH2 0x3C26 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3C35 JUMPI POP DUP2 PUSH2 0x3AF7 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x3C45 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x4710 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3CD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3CED PUSH2 0x3CE8 DUP4 PUSH2 0x4869 JUMP JUMPDEST PUSH2 0x4839 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3D0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3D35 JUMPI DUP2 CALLDATALOAD PUSH2 0x3D23 DUP2 PUSH2 0x4ACF JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3D10 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3D63 PUSH2 0x3CE8 DUP4 PUSH2 0x4869 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3D83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3D35 JUMPI PUSH2 0x3D97 DUP3 PUSH2 0x3F5A JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3D86 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3DBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3DCA PUSH2 0x3CE8 DUP4 PUSH2 0x4869 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3DEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x3E16 JUMPI DUP3 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x3E04 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP6 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3DEE JUMP JUMPDEST POP SWAP2 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3E35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3E45 PUSH2 0x3CE8 DUP4 PUSH2 0x4869 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3E65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x3E16 JUMPI DUP3 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x3E7F JUMPI DUP3 DUP4 REVERT JUMPDEST DUP6 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3E69 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3EA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3EB2 PUSH2 0x3CE8 DUP4 PUSH2 0x4869 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3ED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3D35 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3ED5 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3F02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3F12 PUSH2 0x3CE8 DUP4 PUSH2 0x4869 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3F32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3D35 JUMPI DUP2 CALLDATALOAD PUSH2 0x3F48 DUP2 PUSH2 0x4AF2 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3F35 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x3F72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3F88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3FA1 JUMPI PUSH2 0x3FA1 PUSH2 0x4AB9 JUMP JUMPDEST PUSH2 0x3FB4 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x4839 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x3FC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3AF7 DUP2 PUSH2 0x4ACF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3AF7 DUP2 PUSH2 0x4ACF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4038 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x4043 DUP2 PUSH2 0x4ACF JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x4053 DUP2 PUSH2 0x4ACF JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x406F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x407B DUP10 DUP4 DUP11 ADD PUSH2 0x3E91 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4091 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x409D DUP10 DUP4 DUP11 ADD PUSH2 0x3E91 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x40B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40C0 DUP9 DUP3 DUP10 ADD PUSH2 0x3F77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x40E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x40EE DUP2 PUSH2 0x4ACF JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x40FE DUP2 PUSH2 0x4ACF JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x412C DUP8 DUP3 DUP9 ADD PUSH2 0x3F77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x415B DUP2 PUSH2 0x4ACF JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x416B DUP2 PUSH2 0x4ACF JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x40C0 DUP9 DUP3 DUP10 ADD PUSH2 0x3F77 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x41B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x41C0 DUP2 PUSH2 0x4ACF JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x41EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x420E DUP9 DUP4 DUP10 ADD PUSH2 0x3DA9 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4230 DUP9 DUP4 DUP10 ADD PUSH2 0x3CC7 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4252 DUP9 DUP4 DUP10 ADD PUSH2 0x3E91 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x412C DUP8 DUP3 DUP9 ADD PUSH2 0x3E91 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x428D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x42A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x42B0 DUP10 DUP4 DUP11 ADD PUSH2 0x3DA9 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x42C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x42D2 DUP10 DUP4 DUP11 ADD PUSH2 0x3CC7 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x42E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x42F4 DUP10 DUP4 DUP11 ADD PUSH2 0x3E91 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x430A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4316 DUP10 DUP4 DUP11 ADD PUSH2 0x3E91 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x432C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40C0 DUP9 DUP3 DUP10 ADD PUSH2 0x3E91 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x436B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4377 DUP12 DUP4 DUP13 ADD PUSH2 0x3DA9 JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x438D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4399 DUP12 DUP4 DUP13 ADD PUSH2 0x3CC7 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x43AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43BB DUP12 DUP4 DUP13 ADD PUSH2 0x3E91 JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x43D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43DD DUP12 DUP4 DUP13 ADD PUSH2 0x3E91 JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x43F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43FF DUP12 DUP4 DUP13 ADD PUSH2 0x3EF1 JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4421 DUP12 DUP4 DUP13 ADD PUSH2 0x3D42 JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4444 DUP11 DUP3 DUP12 ADD PUSH2 0x3E24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x446C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x448F DUP11 DUP4 DUP12 ADD PUSH2 0x3DA9 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x44A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44B1 DUP11 DUP4 DUP12 ADD PUSH2 0x3CC7 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x44C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44D3 DUP11 DUP4 DUP12 ADD PUSH2 0x3E91 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x44E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44F5 DUP11 DUP4 DUP12 ADD PUSH2 0x3E91 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x450B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4517 DUP11 DUP4 DUP12 ADD PUSH2 0x3EF1 JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x452D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x453A DUP10 DUP3 DUP11 ADD PUSH2 0x3E91 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3AF7 DUP2 PUSH2 0x4AE4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3AF7 DUP2 PUSH2 0x4AE4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AF7 DUP3 PUSH2 0x3F5A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3AF7 DUP2 PUSH2 0x4AF2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4602 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x45E6 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP4 MSTORE PUSH1 0x14 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4649 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4A30 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x467F SWAP1 DUP4 ADD DUP6 PUSH2 0x45D2 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x4691 DUP2 DUP6 PUSH2 0x45D2 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP7 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xFF DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0xFFFF DUP4 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD PUSH1 0x4 DUP4 LT PUSH2 0x46FF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x472F DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4A30 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A696E76616C6964206E6674207374616E646172640000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6475726174696F6E206973207A65726F000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E74207072696365206973207A65726F00000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x14995391950E8E9C185D5CD959 PUSH1 0x9A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x2932A7232A1D1D3737BA1030B236B4B7 PUSH1 0x81 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4861 JUMPI PUSH2 0x4861 PUSH2 0x4AB9 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x4882 JUMPI PUSH2 0x4882 PUSH2 0x4AB9 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x48A9 JUMPI PUSH2 0x48A9 PUSH2 0x4A77 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x48C5 JUMPI PUSH2 0x48C5 PUSH2 0x4A77 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x48E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x4927 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x490D JUMPI PUSH2 0x490D PUSH2 0x4A77 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x491A JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x48F1 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AF7 DUP4 DUP4 PUSH1 0x0 DUP3 PUSH2 0x4945 JUMPI POP PUSH1 0x1 PUSH2 0x400 JUMP JUMPDEST DUP2 PUSH2 0x4952 JUMPI POP PUSH1 0x0 PUSH2 0x400 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4968 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4972 JUMPI PUSH2 0x498E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x400 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x4983 JUMPI PUSH2 0x4983 PUSH2 0x4A77 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x400 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x49B1 JUMPI POP DUP2 DUP2 EXP PUSH2 0x400 JUMP JUMPDEST PUSH2 0x49BB DUP4 DUP4 PUSH2 0x48EC JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x49CF JUMPI PUSH2 0x49CF PUSH2 0x4A77 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x49F1 JUMPI PUSH2 0x49F1 PUSH2 0x4A77 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x4A11 JUMPI PUSH2 0x4A11 PUSH2 0x4A77 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4A2B JUMPI PUSH2 0x4A2B PUSH2 0x4A77 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4A4B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4A33 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x708 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x4A70 JUMPI PUSH2 0x4A70 PUSH2 0x4A77 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x15C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x15C8 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC SUB DUP14 SWAP13 0xD5 GAS 0xC9 0xF9 INVALID 0xE5 0xCD TIMESTAMP PUSH9 0x53E07E138F4E888A85 MSIZE XOR PUSH25 0x9CDBF2DBD5BA3264736F6C6343000807003300000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "8": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "LT",
      "path": "15"
    },
    "9": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF3"
    },
    "12": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "16": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "SHR",
      "path": "15"
    },
    "19": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "20": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x76774EA3"
    },
    "25": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "GT",
      "path": "15"
    },
    "26": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8A"
    },
    "29": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "30": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "31": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC9C40183"
    },
    "36": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "GT",
      "path": "15"
    },
    "37": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "41": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "42": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC9C40183"
    },
    "47": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "EQ",
      "path": "15"
    },
    "48": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x315"
    },
    "51": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "52": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "53": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xCBE55E54"
    },
    "58": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "EQ",
      "path": "15"
    },
    "59": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x335"
    },
    "62": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "63": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "64": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xF23A6E61"
    },
    "69": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "EQ",
      "path": "15"
    },
    "70": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x348"
    },
    "73": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "74": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "75": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFE46B7CD"
    },
    "80": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "EQ",
      "path": "15"
    },
    "81": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x374"
    },
    "84": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "85": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "88": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "REVERT",
      "path": "15"
    },
    "89": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "90": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "91": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x76774EA3"
    },
    "96": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "EQ",
      "path": "15"
    },
    "97": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x285"
    },
    "100": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "101": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "102": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x937821A1"
    },
    "107": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "EQ",
      "path": "15"
    },
    "108": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A5"
    },
    "111": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "112": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "113": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xBC197C81"
    },
    "118": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "EQ",
      "path": "15"
    },
    "119": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C5"
    },
    "122": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "123": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "124": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xBF2B23EA"
    },
    "129": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "EQ",
      "path": "15"
    },
    "130": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F1"
    },
    "133": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "134": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "136": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "137": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "REVERT",
      "path": "15"
    },
    "138": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "139": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "140": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1C31F710"
    },
    "145": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "GT",
      "path": "15"
    },
    "146": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC6"
    },
    "149": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "150": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "151": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1C31F710"
    },
    "156": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "EQ",
      "path": "15"
    },
    "157": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B3"
    },
    "160": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "161": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "162": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1CBB410F"
    },
    "167": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "EQ",
      "path": "15"
    },
    "168": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D3"
    },
    "171": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "172": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "173": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x296C21B7"
    },
    "178": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "EQ",
      "path": "15"
    },
    "179": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F3"
    },
    "182": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "183": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "184": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x5C975ABB"
    },
    "189": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "EQ",
      "path": "15"
    },
    "190": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x26B"
    },
    "193": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "194": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "196": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "197": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "REVERT",
      "path": "15"
    },
    "198": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "199": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "200": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1FFC9A7"
    },
    "205": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "EQ",
      "path": "15"
    },
    "206": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF8"
    },
    "209": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "210": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "211": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x14B5685C"
    },
    "216": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "EQ",
      "path": "15"
    },
    "217": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12D"
    },
    "220": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "221": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "222": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x150B7A02"
    },
    "227": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "EQ",
      "path": "15"
    },
    "228": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14F"
    },
    "231": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "232": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "233": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x16C38B3C"
    },
    "238": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "EQ",
      "path": "15"
    },
    "239": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x193"
    },
    "242": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "243": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "244": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "246": {
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "DUP1",
      "path": "15"
    },
    "247": {
      "first_revert": true,
      "fn": null,
      "offset": [
        2113,
        28010
      ],
      "op": "REVERT",
      "path": "15"
    },
    "248": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "249": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "250": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "DUP1",
      "path": "3"
    },
    "251": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "252": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "255": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "256": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "258": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "DUP1",
      "path": "3"
    },
    "259": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "REVERT",
      "path": "3"
    },
    "260": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "261": {
      "op": "POP"
    },
    "262": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x118"
    },
    "265": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x113"
    },
    "268": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "269": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "271": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4581"
    },
    "274": {
      "fn": "ERC1155Receiver.supportsInterface",
      "jump": "i",
      "offset": [
        312,
        533
      ],
      "op": "JUMP",
      "path": "3"
    },
    "275": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "276": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CF"
    },
    "279": {
      "fn": "ERC1155Receiver.supportsInterface",
      "jump": "i",
      "offset": [
        312,
        533
      ],
      "op": "JUMP",
      "path": "3"
    },
    "280": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "281": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "283": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "284": {
      "op": "SWAP1"
    },
    "285": {
      "op": "ISZERO"
    },
    "286": {
      "op": "ISZERO"
    },
    "287": {
      "op": "DUP2"
    },
    "288": {
      "op": "MSTORE"
    },
    "289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "291": {
      "op": "ADD"
    },
    "292": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "293": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "296": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "DUP1",
      "path": "3"
    },
    "297": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "298": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "SUB",
      "path": "3"
    },
    "299": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "300": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "RETURN",
      "path": "3"
    },
    "301": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "302": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "303": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "DUP1",
      "path": "15"
    },
    "304": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "305": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x139"
    },
    "308": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "309": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "311": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "DUP1",
      "path": "15"
    },
    "312": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "REVERT",
      "path": "15"
    },
    "313": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "314": {
      "op": "POP"
    },
    "315": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "318": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x148"
    },
    "321": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "322": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "324": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4275"
    },
    "327": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMP",
      "path": "15"
    },
    "328": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "329": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x406"
    },
    "332": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMP",
      "path": "15"
    },
    "333": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "334": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "STOP",
      "path": "15"
    },
    "335": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "336": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "337": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "DUP1",
      "path": "10"
    },
    "338": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "339": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15B"
    },
    "342": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "343": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "345": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "DUP1",
      "path": "10"
    },
    "346": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "REVERT",
      "path": "10"
    },
    "347": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "348": {
      "op": "POP"
    },
    "349": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x17A"
    },
    "352": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16A"
    },
    "355": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "356": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "358": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x40CD"
    },
    "361": {
      "fn": "ERC721Holder.onERC721Received",
      "jump": "i",
      "offset": [
        517,
        717
      ],
      "op": "JUMP",
      "path": "10"
    },
    "362": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "363": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "368": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "370": {
      "op": "SHL"
    },
    "371": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "372": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "373": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "POP",
      "path": "10"
    },
    "374": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "POP",
      "path": "10"
    },
    "375": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "POP",
      "path": "10"
    },
    "376": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "POP",
      "path": "10"
    },
    "377": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMP",
      "path": "10"
    },
    "378": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "379": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "381": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "386": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "388": {
      "op": "SHL"
    },
    "389": {
      "op": "SUB"
    },
    "390": {
      "op": "NOT"
    },
    "391": {
      "op": "SWAP1"
    },
    "392": {
      "op": "SWAP2"
    },
    "393": {
      "op": "AND"
    },
    "394": {
      "op": "DUP2"
    },
    "395": {
      "op": "MSTORE"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "398": {
      "op": "ADD"
    },
    "399": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x124"
    },
    "402": {
      "op": "JUMP"
    },
    "403": {
      "fn": "Registry.setPaused",
      "offset": [
        27919,
        28008
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "404": {
      "fn": "Registry.setPaused",
      "offset": [
        27919,
        28008
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "405": {
      "fn": "Registry.setPaused",
      "offset": [
        27919,
        28008
      ],
      "op": "DUP1",
      "path": "15"
    },
    "406": {
      "fn": "Registry.setPaused",
      "offset": [
        27919,
        28008
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "407": {
      "fn": "Registry.setPaused",
      "offset": [
        27919,
        28008
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19F"
    },
    "410": {
      "fn": "Registry.setPaused",
      "offset": [
        27919,
        28008
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "411": {
      "fn": "Registry.setPaused",
      "offset": [
        27919,
        28008
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "413": {
      "fn": "Registry.setPaused",
      "offset": [
        27919,
        28008
      ],
      "op": "DUP1",
      "path": "15"
    },
    "414": {
      "fn": "Registry.setPaused",
      "offset": [
        27919,
        28008
      ],
      "op": "REVERT",
      "path": "15"
    },
    "415": {
      "fn": "Registry.setPaused",
      "offset": [
        27919,
        28008
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "416": {
      "op": "POP"
    },
    "417": {
      "fn": "Registry.setPaused",
      "offset": [
        27919,
        28008
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "420": {
      "fn": "Registry.setPaused",
      "offset": [
        27919,
        28008
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AE"
    },
    "423": {
      "fn": "Registry.setPaused",
      "offset": [
        27919,
        28008
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "424": {
      "fn": "Registry.setPaused",
      "offset": [
        27919,
        28008
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "426": {
      "fn": "Registry.setPaused",
      "offset": [
        27919,
        28008
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4547"
    },
    "429": {
      "fn": "Registry.setPaused",
      "jump": "i",
      "offset": [
        27919,
        28008
      ],
      "op": "JUMP",
      "path": "15"
    },
    "430": {
      "fn": "Registry.setPaused",
      "offset": [
        27919,
        28008
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "431": {
      "fn": "Registry.setPaused",
      "offset": [
        27919,
        28008
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x451"
    },
    "434": {
      "fn": "Registry.setPaused",
      "jump": "i",
      "offset": [
        27919,
        28008
      ],
      "op": "JUMP",
      "path": "15"
    },
    "435": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27793,
        27913
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "436": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27793,
        27913
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "437": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27793,
        27913
      ],
      "op": "DUP1",
      "path": "15"
    },
    "438": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27793,
        27913
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "439": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27793,
        27913
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BF"
    },
    "442": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27793,
        27913
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "443": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27793,
        27913
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "445": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27793,
        27913
      ],
      "op": "DUP1",
      "path": "15"
    },
    "446": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27793,
        27913
      ],
      "op": "REVERT",
      "path": "15"
    },
    "447": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27793,
        27913
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "448": {
      "op": "POP"
    },
    "449": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27793,
        27913
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "452": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27793,
        27913
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CE"
    },
    "455": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27793,
        27913
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "456": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27793,
        27913
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "458": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27793,
        27913
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4003"
    },
    "461": {
      "fn": "Registry.setBeneficiary",
      "jump": "i",
      "offset": [
        27793,
        27913
      ],
      "op": "JUMP",
      "path": "15"
    },
    "462": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27793,
        27913
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "463": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27793,
        27913
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48E"
    },
    "466": {
      "fn": "Registry.setBeneficiary",
      "jump": "i",
      "offset": [
        27793,
        27913
      ],
      "op": "JUMP",
      "path": "15"
    },
    "467": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "468": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "469": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "DUP1",
      "path": "15"
    },
    "470": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "471": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DF"
    },
    "474": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "475": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "477": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "DUP1",
      "path": "15"
    },
    "478": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "REVERT",
      "path": "15"
    },
    "479": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "480": {
      "op": "POP"
    },
    "481": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "484": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EE"
    },
    "487": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "488": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "490": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4339"
    },
    "493": {
      "fn": "Registry.lend",
      "jump": "i",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMP",
      "path": "15"
    },
    "494": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "495": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4DA"
    },
    "498": {
      "fn": "Registry.lend",
      "jump": "i",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMP",
      "path": "15"
    },
    "499": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "500": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "501": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "DUP1",
      "path": "15"
    },
    "502": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "503": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FF"
    },
    "506": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "507": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "509": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "DUP1",
      "path": "15"
    },
    "510": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "REVERT",
      "path": "15"
    },
    "511": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "512": {
      "op": "POP"
    },
    "513": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x213"
    },
    "516": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20E"
    },
    "519": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "520": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "522": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x41A0"
    },
    "525": {
      "fn": "Registry.getLending",
      "jump": "i",
      "offset": [
        18311,
        19088
      ],
      "op": "JUMP",
      "path": "15"
    },
    "526": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "527": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x51B"
    },
    "530": {
      "fn": "Registry.getLending",
      "jump": "i",
      "offset": [
        18311,
        19088
      ],
      "op": "JUMP",
      "path": "15"
    },
    "531": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "532": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "534": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "DUP1",
      "path": "15"
    },
    "535": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "536": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "538": {
      "op": "SWAP9"
    },
    "539": {
      "op": "DUP10"
    },
    "540": {
      "op": "AND"
    },
    "541": {
      "op": "DUP2"
    },
    "542": {
      "op": "MSTORE"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "549": {
      "op": "SHL"
    },
    "550": {
      "op": "SUB"
    },
    "551": {
      "op": "SWAP1"
    },
    "552": {
      "op": "SWAP8"
    },
    "553": {
      "op": "AND"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "556": {
      "op": "DUP9"
    },
    "557": {
      "op": "ADD"
    },
    "558": {
      "op": "MSTORE"
    },
    "559": {
      "op": "SWAP5"
    },
    "560": {
      "op": "DUP8"
    },
    "561": {
      "op": "AND"
    },
    "562": {
      "op": "SWAP5"
    },
    "563": {
      "op": "DUP7"
    },
    "564": {
      "op": "ADD"
    },
    "565": {
      "op": "SWAP5"
    },
    "566": {
      "op": "SWAP1"
    },
    "567": {
      "op": "SWAP5"
    },
    "568": {
      "op": "MSTORE"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "573": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "575": {
      "op": "SHL"
    },
    "576": {
      "op": "SUB"
    },
    "577": {
      "op": "NOT"
    },
    "578": {
      "op": "SWAP1"
    },
    "579": {
      "op": "SWAP3"
    },
    "580": {
      "op": "AND"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "583": {
      "op": "DUP6"
    },
    "584": {
      "op": "ADD"
    },
    "585": {
      "op": "MSTORE"
    },
    "586": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "589": {
      "op": "SWAP1"
    },
    "590": {
      "op": "DUP2"
    },
    "591": {
      "op": "AND"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "594": {
      "op": "DUP6"
    },
    "595": {
      "op": "ADD"
    },
    "596": {
      "op": "MSTORE"
    },
    "597": {
      "op": "AND"
    },
    "598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "600": {
      "op": "DUP4"
    },
    "601": {
      "op": "ADD"
    },
    "602": {
      "op": "MSTORE"
    },
    "603": {
      "op": "SWAP2"
    },
    "604": {
      "op": "SWAP1"
    },
    "605": {
      "op": "SWAP2"
    },
    "606": {
      "op": "AND"
    },
    "607": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "609": {
      "op": "DUP3"
    },
    "610": {
      "op": "ADD"
    },
    "611": {
      "op": "MSTORE"
    },
    "612": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "614": {
      "op": "ADD"
    },
    "615": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x124"
    },
    "618": {
      "op": "JUMP"
    },
    "619": {
      "offset": [
        2398,
        2424
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "620": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "621": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "DUP1",
      "path": "15"
    },
    "622": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "623": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x277"
    },
    "626": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "627": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "629": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "DUP1",
      "path": "15"
    },
    "630": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "REVERT",
      "path": "15"
    },
    "631": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "635": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "636": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x118"
    },
    "639": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "640": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "642": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "AND",
      "path": "15"
    },
    "643": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "DUP2",
      "path": "15"
    },
    "644": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "JUMP",
      "path": "15"
    },
    "645": {
      "fn": "Registry.setRentFee",
      "offset": [
        27625,
        27787
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "646": {
      "fn": "Registry.setRentFee",
      "offset": [
        27625,
        27787
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "647": {
      "fn": "Registry.setRentFee",
      "offset": [
        27625,
        27787
      ],
      "op": "DUP1",
      "path": "15"
    },
    "648": {
      "fn": "Registry.setRentFee",
      "offset": [
        27625,
        27787
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "649": {
      "fn": "Registry.setRentFee",
      "offset": [
        27625,
        27787
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x291"
    },
    "652": {
      "fn": "Registry.setRentFee",
      "offset": [
        27625,
        27787
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "653": {
      "fn": "Registry.setRentFee",
      "offset": [
        27625,
        27787
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "655": {
      "fn": "Registry.setRentFee",
      "offset": [
        27625,
        27787
      ],
      "op": "DUP1",
      "path": "15"
    },
    "656": {
      "fn": "Registry.setRentFee",
      "offset": [
        27625,
        27787
      ],
      "op": "REVERT",
      "path": "15"
    },
    "657": {
      "fn": "Registry.setRentFee",
      "offset": [
        27625,
        27787
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "658": {
      "op": "POP"
    },
    "659": {
      "fn": "Registry.setRentFee",
      "offset": [
        27625,
        27787
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "662": {
      "fn": "Registry.setRentFee",
      "offset": [
        27625,
        27787
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A0"
    },
    "665": {
      "fn": "Registry.setRentFee",
      "offset": [
        27625,
        27787
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "666": {
      "fn": "Registry.setRentFee",
      "offset": [
        27625,
        27787
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "668": {
      "fn": "Registry.setRentFee",
      "offset": [
        27625,
        27787
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x459C"
    },
    "671": {
      "fn": "Registry.setRentFee",
      "jump": "i",
      "offset": [
        27625,
        27787
      ],
      "op": "JUMP",
      "path": "15"
    },
    "672": {
      "fn": "Registry.setRentFee",
      "offset": [
        27625,
        27787
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "673": {
      "fn": "Registry.setRentFee",
      "offset": [
        27625,
        27787
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5F1"
    },
    "676": {
      "fn": "Registry.setRentFee",
      "jump": "i",
      "offset": [
        27625,
        27787
      ],
      "op": "JUMP",
      "path": "15"
    },
    "677": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "678": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "679": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "DUP1",
      "path": "15"
    },
    "680": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "681": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B1"
    },
    "684": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "685": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "687": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "DUP1",
      "path": "15"
    },
    "688": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "REVERT",
      "path": "15"
    },
    "689": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "690": {
      "op": "POP"
    },
    "691": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "694": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C0"
    },
    "697": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "698": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "700": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4275"
    },
    "703": {
      "fn": "Registry.claimRent",
      "jump": "i",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMP",
      "path": "15"
    },
    "704": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "705": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x671"
    },
    "708": {
      "fn": "Registry.claimRent",
      "jump": "i",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMP",
      "path": "15"
    },
    "709": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "710": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "711": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "DUP1",
      "path": "2"
    },
    "712": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "713": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D1"
    },
    "716": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "717": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "719": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "DUP1",
      "path": "2"
    },
    "720": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "REVERT",
      "path": "2"
    },
    "721": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "722": {
      "op": "POP"
    },
    "723": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A"
    },
    "726": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E0"
    },
    "729": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "730": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "732": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4020"
    },
    "735": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "jump": "i",
      "offset": [
        404,
        651
      ],
      "op": "JUMP",
      "path": "2"
    },
    "736": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "737": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "742": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "744": {
      "op": "SHL"
    },
    "745": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "746": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "747": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "2"
    },
    "748": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "2"
    },
    "749": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "2"
    },
    "750": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "2"
    },
    "751": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "2"
    },
    "752": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMP",
      "path": "2"
    },
    "753": {
      "offset": [
        2430,
        2456
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "754": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "755": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "DUP1",
      "path": "15"
    },
    "756": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "757": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2FD"
    },
    "760": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "761": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "763": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "DUP1",
      "path": "15"
    },
    "764": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "REVERT",
      "path": "15"
    },
    "765": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "766": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "POP",
      "path": "15"
    },
    "767": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x307"
    },
    "770": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "772": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "773": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "DUP2",
      "path": "15"
    },
    "774": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "JUMP",
      "path": "15"
    },
    "775": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "776": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "778": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "779": {
      "op": "SWAP1"
    },
    "780": {
      "op": "DUP2"
    },
    "781": {
      "op": "MSTORE"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "784": {
      "op": "ADD"
    },
    "785": {
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x124"
    },
    "788": {
      "op": "JUMP"
    },
    "789": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "790": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "791": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "DUP1",
      "path": "15"
    },
    "792": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "793": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x321"
    },
    "796": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "797": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "799": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "DUP1",
      "path": "15"
    },
    "800": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "REVERT",
      "path": "15"
    },
    "801": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "802": {
      "op": "POP"
    },
    "803": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "806": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x330"
    },
    "809": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "810": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "812": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x41D5"
    },
    "815": {
      "fn": "Registry.stopLend",
      "jump": "i",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMP",
      "path": "15"
    },
    "816": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "817": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6A7"
    },
    "820": {
      "fn": "Registry.stopLend",
      "jump": "i",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMP",
      "path": "15"
    },
    "821": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "822": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "825": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x343"
    },
    "828": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "829": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "831": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4453"
    },
    "834": {
      "fn": "Registry.rent",
      "jump": "i",
      "offset": [
        4301,
        4866
      ],
      "op": "JUMP",
      "path": "15"
    },
    "835": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "836": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x70E"
    },
    "839": {
      "fn": "Registry.rent",
      "jump": "i",
      "offset": [
        4301,
        4866
      ],
      "op": "JUMP",
      "path": "15"
    },
    "840": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "841": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "842": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "DUP1",
      "path": "2"
    },
    "843": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "844": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x354"
    },
    "847": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "848": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "850": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "DUP1",
      "path": "2"
    },
    "851": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "REVERT",
      "path": "2"
    },
    "852": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "853": {
      "op": "POP"
    },
    "854": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A"
    },
    "857": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x363"
    },
    "860": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "861": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "863": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4138"
    },
    "866": {
      "fn": "ERC1155Holder.onERC1155Received",
      "jump": "i",
      "offset": [
        179,
        398
      ],
      "op": "JUMP",
      "path": "2"
    },
    "867": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "868": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "873": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "875": {
      "op": "SHL"
    },
    "876": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "877": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "878": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "2"
    },
    "879": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "2"
    },
    "880": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "2"
    },
    "881": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "2"
    },
    "882": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "2"
    },
    "883": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMP",
      "path": "2"
    },
    "884": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "885": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "886": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "DUP1",
      "path": "15"
    },
    "887": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "888": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x380"
    },
    "891": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "892": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "894": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "DUP1",
      "path": "15"
    },
    "895": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "REVERT",
      "path": "15"
    },
    "896": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "897": {
      "op": "POP"
    },
    "898": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x394"
    },
    "901": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x38F"
    },
    "904": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "905": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "907": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x41A0"
    },
    "910": {
      "fn": "Registry.getRenting",
      "jump": "i",
      "offset": [
        19094,
        19686
      ],
      "op": "JUMP",
      "path": "15"
    },
    "911": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "912": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x74D"
    },
    "915": {
      "fn": "Registry.getRenting",
      "jump": "i",
      "offset": [
        19094,
        19686
      ],
      "op": "JUMP",
      "path": "15"
    },
    "916": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "917": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "919": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "DUP1",
      "path": "15"
    },
    "920": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "927": {
      "op": "SHL"
    },
    "928": {
      "op": "SUB"
    },
    "929": {
      "op": "SWAP1"
    },
    "930": {
      "op": "SWAP6"
    },
    "931": {
      "op": "AND"
    },
    "932": {
      "op": "DUP6"
    },
    "933": {
      "op": "MSTORE"
    },
    "934": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "937": {
      "op": "SWAP1"
    },
    "938": {
      "op": "SWAP4"
    },
    "939": {
      "op": "AND"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "942": {
      "op": "DUP6"
    },
    "943": {
      "op": "ADD"
    },
    "944": {
      "op": "MSTORE"
    },
    "945": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "947": {
      "op": "SWAP1"
    },
    "948": {
      "op": "SWAP2"
    },
    "949": {
      "op": "AND"
    },
    "950": {
      "op": "SWAP2"
    },
    "951": {
      "op": "DUP4"
    },
    "952": {
      "op": "ADD"
    },
    "953": {
      "op": "SWAP2"
    },
    "954": {
      "op": "SWAP1"
    },
    "955": {
      "op": "SWAP2"
    },
    "956": {
      "op": "MSTORE"
    },
    "957": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "962": {
      "op": "AND"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "965": {
      "op": "DUP3"
    },
    "966": {
      "op": "ADD"
    },
    "967": {
      "op": "MSTORE"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "970": {
      "op": "ADD"
    },
    "971": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x124"
    },
    "974": {
      "op": "JUMP"
    },
    "975": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "976": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        414,
        418
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "982": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "984": {
      "op": "SHL"
    },
    "985": {
      "op": "SUB"
    },
    "986": {
      "op": "NOT"
    },
    "987": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 0
    },
    "988": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "AND",
      "path": "3"
    },
    "989": {
      "op": "PUSH4",
      "value": "0x2711897"
    },
    "994": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "996": {
      "op": "SHL"
    },
    "997": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "EQ",
      "path": "3"
    },
    "998": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "DUP1",
      "path": "3"
    },
    "999": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        526
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x400"
    },
    "1002": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        526
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1003": {
      "op": "POP"
    },
    "1004": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1011": {
      "op": "SHL"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1018": {
      "op": "SHL"
    },
    "1019": {
      "op": "SUB"
    },
    "1020": {
      "op": "NOT"
    },
    "1021": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "13",
      "statement": 1
    },
    "1022": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "13"
    },
    "1023": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "13"
    },
    "1024": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        490,
        526
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1025": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        430,
        526
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1026": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1027": {
      "op": "POP"
    },
    "1028": {
      "op": "POP"
    },
    "1029": {
      "fn": "ERC1155Receiver.supportsInterface",
      "jump": "o",
      "offset": [
        312,
        533
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1030": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1031": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1033": {
      "fn": "Registry.stopRent",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1034": {
      "fn": "Registry.stopRent",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1036": {
      "fn": "Registry.stopRent",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "15"
    },
    "1037": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1038": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x432"
    },
    "1041": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1042": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1044": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1045": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1053": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1054": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1056": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "15"
    },
    "1057": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1060": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1061": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x47E8"
    },
    "1064": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1065": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1066": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1068": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1069": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1070": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1071": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SUB",
      "path": "15"
    },
    "1072": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1073": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "15"
    },
    "1074": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1075": {
      "fn": "Registry.stopRent",
      "offset": [
        5131,
        5365
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 2,
      "value": "0x44A"
    },
    "1078": {
      "fn": "Registry.stopRent",
      "offset": [
        5155,
        5169
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7CB"
    },
    "1081": {
      "fn": "Registry.stopRent",
      "offset": [
        5183,
        5355
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x445"
    },
    "1084": {
      "fn": "Registry.stopRent",
      "offset": [
        5221,
        5232
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1085": {
      "fn": "Registry.stopRent",
      "offset": [
        5250,
        5260
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1086": {
      "fn": "Registry.stopRent",
      "offset": [
        5278,
        5285
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1087": {
      "fn": "Registry.stopRent",
      "offset": [
        5303,
        5313
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1088": {
      "fn": "Registry.stopRent",
      "offset": [
        5331,
        5341
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1089": {
      "fn": "Registry.stopRent",
      "offset": [
        5183,
        5203
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD6D"
    },
    "1092": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        5183,
        5355
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1093": {
      "fn": "Registry.stopRent",
      "offset": [
        5183,
        5355
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1094": {
      "fn": "Registry.stopRent",
      "offset": [
        5131,
        5141
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEF3"
    },
    "1097": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        5131,
        5365
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1098": {
      "fn": "Registry.stopRent",
      "offset": [
        5131,
        5365
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1099": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "POP",
      "path": "15"
    },
    "1100": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "POP",
      "path": "15"
    },
    "1101": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "POP",
      "path": "15"
    },
    "1102": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "POP",
      "path": "15"
    },
    "1103": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "POP",
      "path": "15"
    },
    "1104": {
      "fn": "Registry.stopRent",
      "jump": "o",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1105": {
      "fn": "Registry.setPaused",
      "offset": [
        27919,
        28008
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1106": {
      "offset": [
        2669,
        2674
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1108": {
      "fn": "Registry.setPaused",
      "offset": [
        2669,
        2674
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1115": {
      "op": "SHL"
    },
    "1116": {
      "op": "SUB"
    },
    "1117": {
      "offset": [
        2669,
        2674
      ],
      "op": "AND",
      "path": "15"
    },
    "1118": {
      "offset": [
        2655,
        2665
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1119": {
      "offset": [
        2655,
        2674
      ],
      "op": "EQ",
      "path": "15"
    },
    "1120": {
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x47B"
    },
    "1123": {
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1124": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1126": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1127": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1133": {
      "op": "SHL"
    },
    "1134": {
      "offset": [
        2647,
        2695
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1135": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1136": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1138": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "ADD",
      "path": "15"
    },
    "1139": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1142": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1143": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x480F"
    },
    "1146": {
      "fn": "Registry.setPaused",
      "jump": "i",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1147": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1148": {
      "fn": "Registry.setPaused",
      "offset": [
        27983,
        27989
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 3,
      "value": "0x5"
    },
    "1150": {
      "fn": "Registry.setPaused",
      "offset": [
        27983,
        28001
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1151": {
      "fn": "Registry.setPaused",
      "offset": [
        27983,
        28001
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1154": {
      "op": "NOT"
    },
    "1155": {
      "fn": "Registry.setPaused",
      "offset": [
        27983,
        28001
      ],
      "op": "AND",
      "path": "15"
    },
    "1156": {
      "fn": "Registry.setPaused",
      "offset": [
        27983,
        28001
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1157": {
      "fn": "Registry.setPaused",
      "offset": [
        27983,
        28001
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1158": {
      "fn": "Registry.setPaused",
      "offset": [
        27983,
        28001
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1159": {
      "fn": "Registry.setPaused",
      "offset": [
        27983,
        28001
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1160": {
      "fn": "Registry.setPaused",
      "offset": [
        27983,
        28001
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1161": {
      "fn": "Registry.setPaused",
      "offset": [
        27983,
        28001
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1162": {
      "fn": "Registry.setPaused",
      "offset": [
        27983,
        28001
      ],
      "op": "OR",
      "path": "15"
    },
    "1163": {
      "fn": "Registry.setPaused",
      "offset": [
        27983,
        28001
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1164": {
      "fn": "Registry.setPaused",
      "offset": [
        27983,
        28001
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1165": {
      "fn": "Registry.setPaused",
      "jump": "o",
      "offset": [
        27919,
        28008
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1166": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27793,
        27913
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1167": {
      "offset": [
        2669,
        2674
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1169": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2669,
        2674
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1176": {
      "op": "SHL"
    },
    "1177": {
      "op": "SUB"
    },
    "1178": {
      "offset": [
        2669,
        2674
      ],
      "op": "AND",
      "path": "15"
    },
    "1179": {
      "offset": [
        2655,
        2665
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1180": {
      "offset": [
        2655,
        2674
      ],
      "op": "EQ",
      "path": "15"
    },
    "1181": {
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4B8"
    },
    "1184": {
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1185": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1187": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1188": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "offset": [
        2647,
        2695
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1196": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1197": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1199": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "ADD",
      "path": "15"
    },
    "1200": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1203": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1204": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x480F"
    },
    "1207": {
      "fn": "Registry.setBeneficiary",
      "jump": "i",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1208": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1209": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27878,
        27889
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 4,
      "value": "0x2"
    },
    "1211": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27878,
        27906
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1212": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27878,
        27906
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1219": {
      "op": "SHL"
    },
    "1220": {
      "op": "SUB"
    },
    "1221": {
      "op": "NOT"
    },
    "1222": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27878,
        27906
      ],
      "op": "AND",
      "path": "15"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1229": {
      "op": "SHL"
    },
    "1230": {
      "op": "SUB"
    },
    "1231": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27878,
        27906
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1232": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27878,
        27906
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1233": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27878,
        27906
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1234": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27878,
        27906
      ],
      "op": "AND",
      "path": "15"
    },
    "1235": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27878,
        27906
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1236": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27878,
        27906
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1237": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27878,
        27906
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1238": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27878,
        27906
      ],
      "op": "OR",
      "path": "15"
    },
    "1239": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27878,
        27906
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1240": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27878,
        27906
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1241": {
      "fn": "Registry.setBeneficiary",
      "jump": "o",
      "offset": [
        27793,
        27913
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1242": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1243": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1245": {
      "fn": "Registry.lend",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1246": {
      "fn": "Registry.lend",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1248": {
      "fn": "Registry.lend",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "15"
    },
    "1249": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1250": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4FD"
    },
    "1253": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1254": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1256": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1257": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1263": {
      "op": "SHL"
    },
    "1264": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1265": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1266": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1268": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "15"
    },
    "1269": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1272": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1273": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x47E8"
    },
    "1276": {
      "fn": "Registry.lend",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1277": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1278": {
      "fn": "Registry.lend",
      "offset": [
        3518,
        3813
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 5,
      "value": "0x512"
    },
    "1281": {
      "fn": "Registry.lend",
      "offset": [
        3542,
        3552
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1028"
    },
    "1284": {
      "fn": "Registry.lend",
      "offset": [
        3566,
        3803
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x445"
    },
    "1287": {
      "fn": "Registry.lend",
      "offset": [
        3602,
        3613
      ],
      "op": "DUP10",
      "path": "15"
    },
    "1288": {
      "fn": "Registry.lend",
      "offset": [
        3631,
        3641
      ],
      "op": "DUP10",
      "path": "15"
    },
    "1289": {
      "fn": "Registry.lend",
      "offset": [
        3659,
        3666
      ],
      "op": "DUP10",
      "path": "15"
    },
    "1290": {
      "fn": "Registry.lend",
      "offset": [
        3684,
        3694
      ],
      "op": "DUP10",
      "path": "15"
    },
    "1291": {
      "fn": "Registry.lend",
      "offset": [
        3712,
        3727
      ],
      "op": "DUP10",
      "path": "15"
    },
    "1292": {
      "fn": "Registry.lend",
      "offset": [
        3745,
        3759
      ],
      "op": "DUP10",
      "path": "15"
    },
    "1293": {
      "fn": "Registry.lend",
      "offset": [
        3777,
        3789
      ],
      "op": "DUP10",
      "path": "15"
    },
    "1294": {
      "fn": "Registry.lend",
      "offset": [
        3566,
        3584
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15CB"
    },
    "1297": {
      "fn": "Registry.lend",
      "jump": "i",
      "offset": [
        3566,
        3803
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1298": {
      "fn": "Registry.lend",
      "offset": [
        3518,
        3813
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1299": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "15"
    },
    "1300": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "15"
    },
    "1301": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "15"
    },
    "1302": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "15"
    },
    "1303": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "15"
    },
    "1304": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "15"
    },
    "1305": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "15"
    },
    "1306": {
      "fn": "Registry.lend",
      "jump": "o",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1307": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1308": {
      "fn": "Registry.getLending",
      "offset": [
        18478,
        18483
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1310": {
      "fn": "Registry.getLending",
      "offset": [
        18497,
        18504
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1311": {
      "fn": "Registry.getLending",
      "offset": [
        18518,
        18523
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1313": {
      "fn": "Registry.getLending",
      "offset": [
        18537,
        18543
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1314": {
      "fn": "Registry.getLending",
      "offset": [
        18557,
        18563
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1316": {
      "fn": "Registry.getLending",
      "offset": [
        18577,
        18583
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1317": {
      "fn": "Registry.getLending",
      "offset": [
        18597,
        18602
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1319": {
      "fn": "Registry.getLending",
      "offset": [
        18627,
        18645
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1320": {
      "fn": "Registry.getLending",
      "offset": [
        18688,
        18698
      ],
      "op": "DUP11",
      "path": "15"
    },
    "1321": {
      "fn": "Registry.getLending",
      "offset": [
        18700,
        18707
      ],
      "op": "DUP11",
      "path": "15"
    },
    "1322": {
      "fn": "Registry.getLending",
      "offset": [
        18709,
        18719
      ],
      "op": "DUP11",
      "path": "15"
    },
    "1323": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1325": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1326": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1328": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "ADD",
      "path": "15"
    },
    "1329": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x53C"
    },
    "1332": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1333": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1334": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1335": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1336": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x460D"
    },
    "1339": {
      "fn": "Registry.getLending",
      "jump": "i",
      "offset": [
        18671,
        18720
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1340": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1341": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1343": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1344": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1347": {
      "op": "NOT"
    },
    "1348": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1349": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1350": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "SUB",
      "path": "15"
    },
    "1351": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "ADD",
      "path": "15"
    },
    "1352": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1353": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1354": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1355": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1356": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1357": {
      "fn": "Registry.getLending",
      "offset": [
        18648,
        18730
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1358": {
      "fn": "Registry.getLending",
      "offset": [
        18648,
        18730
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1359": {
      "fn": "Registry.getLending",
      "offset": [
        18671,
        18720
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1361": {
      "fn": "Registry.getLending",
      "offset": [
        18648,
        18730
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1362": {
      "fn": "Registry.getLending",
      "offset": [
        18648,
        18730
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1363": {
      "fn": "Registry.getLending",
      "offset": [
        18648,
        18730
      ],
      "op": "ADD",
      "path": "15"
    },
    "1364": {
      "fn": "Registry.getLending",
      "offset": [
        18648,
        18730
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1365": {
      "fn": "Registry.getLending",
      "offset": [
        18740,
        18773
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1367": {
      "fn": "Registry.getLending",
      "offset": [
        18776,
        18796
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1368": {
      "fn": "Registry.getLending",
      "offset": [
        18776,
        18796
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1369": {
      "fn": "Registry.getLending",
      "offset": [
        18776,
        18796
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1370": {
      "fn": "Registry.getLending",
      "offset": [
        18776,
        18784
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "1372": {
      "fn": "Registry.getLending",
      "offset": [
        18776,
        18796
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1373": {
      "fn": "Registry.getLending",
      "offset": [
        18776,
        18796
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1374": {
      "fn": "Registry.getLending",
      "offset": [
        18776,
        18796
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1375": {
      "fn": "Registry.getLending",
      "offset": [
        18776,
        18796
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1376": {
      "fn": "Registry.getLending",
      "offset": [
        18776,
        18796
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1377": {
      "fn": "Registry.getLending",
      "offset": [
        18833,
        18852
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 6
    },
    "1378": {
      "fn": "Registry.getLending",
      "offset": [
        18833,
        18852
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1379": {
      "fn": "Registry.getLending",
      "offset": [
        18648,
        18730
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1380": {
      "fn": "Registry.getLending",
      "offset": [
        18648,
        18730
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1381": {
      "op": "POP"
    },
    "1382": {
      "fn": "Registry.getLending",
      "offset": [
        18776,
        18796
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1383": {
      "fn": "Registry.getLending",
      "offset": [
        18833,
        18852
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1385": {
      "fn": "Registry.getLending",
      "offset": [
        18833,
        18852
      ],
      "op": "AND",
      "path": "15"
    },
    "1386": {
      "fn": "Registry.getLending",
      "offset": [
        18833,
        18852
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1388": {
      "fn": "Registry.getLending",
      "offset": [
        18827,
        18853
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1389": {
      "fn": "Registry.getLending",
      "offset": [
        18827,
        18853
      ],
      "op": "GT",
      "path": "15"
    },
    "1390": {
      "fn": "Registry.getLending",
      "offset": [
        18827,
        18853
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1391": {
      "fn": "Registry.getLending",
      "offset": [
        18827,
        18853
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x57A"
    },
    "1394": {
      "fn": "Registry.getLending",
      "offset": [
        18827,
        18853
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1395": {
      "fn": "Registry.getLending",
      "offset": [
        18827,
        18853
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x57A"
    },
    "1398": {
      "fn": "Registry.getLending",
      "offset": [
        18827,
        18853
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "1401": {
      "fn": "Registry.getLending",
      "jump": "i",
      "offset": [
        18827,
        18853
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1402": {
      "fn": "Registry.getLending",
      "offset": [
        18827,
        18853
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1403": {
      "fn": "Registry.getLending",
      "offset": [
        18867,
        18888
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1404": {
      "fn": "Registry.getLending",
      "offset": [
        18867,
        18888
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1411": {
      "op": "SHL"
    },
    "1412": {
      "op": "SUB"
    },
    "1413": {
      "fn": "Registry.getLending",
      "offset": [
        18867,
        18888
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "1416": {
      "fn": "Registry.getLending",
      "offset": [
        18867,
        18888
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1417": {
      "fn": "Registry.getLending",
      "offset": [
        18867,
        18888
      ],
      "op": "DIV",
      "path": "15"
    },
    "1418": {
      "fn": "Registry.getLending",
      "offset": [
        18867,
        18888
      ],
      "op": "AND",
      "path": "15"
    },
    "1419": {
      "fn": "Registry.getLending",
      "offset": [
        18867,
        18888
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1420": {
      "fn": "Registry.getLending",
      "offset": [
        18902,
        18925
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1426": {
      "op": "SHL"
    },
    "1427": {
      "fn": "Registry.getLending",
      "offset": [
        18902,
        18925
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1428": {
      "fn": "Registry.getLending",
      "offset": [
        18902,
        18925
      ],
      "op": "DIV",
      "path": "15"
    },
    "1429": {
      "fn": "Registry.getLending",
      "offset": [
        18902,
        18925
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1430": {
      "fn": "Registry.getLending",
      "offset": [
        18902,
        18925
      ],
      "op": "AND",
      "path": "15"
    },
    "1431": {
      "fn": "Registry.getLending",
      "offset": [
        18902,
        18925
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1436": {
      "op": "SHL"
    },
    "1437": {
      "fn": "Registry.getLending",
      "offset": [
        18939,
        18961
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1438": {
      "fn": "Registry.getLending",
      "offset": [
        18939,
        18961
      ],
      "op": "DIV",
      "path": "15"
    },
    "1439": {
      "fn": "Registry.getLending",
      "offset": [
        18939,
        18961
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "1441": {
      "fn": "Registry.getLending",
      "offset": [
        18939,
        18961
      ],
      "op": "SHL",
      "path": "15"
    },
    "1442": {
      "fn": "Registry.getLending",
      "offset": [
        18939,
        18961
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1443": {
      "fn": "Registry.getLending",
      "offset": [
        18975,
        18993
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1450": {
      "op": "SHL"
    },
    "1451": {
      "fn": "Registry.getLending",
      "offset": [
        18975,
        18993
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1452": {
      "fn": "Registry.getLending",
      "offset": [
        18975,
        18993
      ],
      "op": "DIV",
      "path": "15"
    },
    "1453": {
      "fn": "Registry.getLending",
      "offset": [
        18975,
        18993
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1454": {
      "fn": "Registry.getLending",
      "offset": [
        18975,
        18993
      ],
      "op": "AND",
      "path": "15"
    },
    "1455": {
      "fn": "Registry.getLending",
      "offset": [
        18975,
        18993
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1460": {
      "op": "SHL"
    },
    "1461": {
      "fn": "Registry.getLending",
      "offset": [
        19007,
        19030
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1462": {
      "fn": "Registry.getLending",
      "offset": [
        19007,
        19030
      ],
      "op": "DIV",
      "path": "15"
    },
    "1463": {
      "fn": "Registry.getLending",
      "offset": [
        19007,
        19030
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1464": {
      "fn": "Registry.getLending",
      "offset": [
        19007,
        19030
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1465": {
      "fn": "Registry.getLending",
      "offset": [
        19007,
        19030
      ],
      "op": "AND",
      "path": "15"
    },
    "1466": {
      "fn": "Registry.getLending",
      "offset": [
        19007,
        19030
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1471": {
      "op": "SHL"
    },
    "1472": {
      "fn": "Registry.getLending",
      "offset": [
        19050,
        19070
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1473": {
      "fn": "Registry.getLending",
      "offset": [
        19050,
        19070
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1474": {
      "fn": "Registry.getLending",
      "offset": [
        19050,
        19070
      ],
      "op": "DIV",
      "path": "15"
    },
    "1475": {
      "fn": "Registry.getLending",
      "offset": [
        19050,
        19070
      ],
      "op": "AND",
      "path": "15"
    },
    "1476": {
      "fn": "Registry.getLending",
      "offset": [
        19044,
        19071
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "1478": {
      "fn": "Registry.getLending",
      "offset": [
        19044,
        19071
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1479": {
      "fn": "Registry.getLending",
      "offset": [
        19044,
        19071
      ],
      "op": "GT",
      "path": "15"
    },
    "1480": {
      "fn": "Registry.getLending",
      "offset": [
        19044,
        19071
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1481": {
      "fn": "Registry.getLending",
      "offset": [
        19044,
        19071
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5D4"
    },
    "1484": {
      "fn": "Registry.getLending",
      "offset": [
        19044,
        19071
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1485": {
      "fn": "Registry.getLending",
      "offset": [
        19044,
        19071
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5D4"
    },
    "1488": {
      "fn": "Registry.getLending",
      "offset": [
        19044,
        19071
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "1491": {
      "fn": "Registry.getLending",
      "jump": "i",
      "offset": [
        19044,
        19071
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1492": {
      "fn": "Registry.getLending",
      "offset": [
        19044,
        19071
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1493": {
      "fn": "Registry.getLending",
      "offset": [
        18806,
        19081
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1494": {
      "fn": "Registry.getLending",
      "offset": [
        18806,
        19081
      ],
      "op": "POP",
      "path": "15"
    },
    "1495": {
      "fn": "Registry.getLending",
      "offset": [
        18806,
        19081
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1496": {
      "fn": "Registry.getLending",
      "offset": [
        18806,
        19081
      ],
      "op": "POP",
      "path": "15"
    },
    "1497": {
      "fn": "Registry.getLending",
      "offset": [
        18806,
        19081
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1498": {
      "fn": "Registry.getLending",
      "offset": [
        18806,
        19081
      ],
      "op": "POP",
      "path": "15"
    },
    "1499": {
      "fn": "Registry.getLending",
      "offset": [
        18806,
        19081
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1500": {
      "fn": "Registry.getLending",
      "offset": [
        18806,
        19081
      ],
      "op": "POP",
      "path": "15"
    },
    "1501": {
      "fn": "Registry.getLending",
      "offset": [
        18806,
        19081
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1502": {
      "fn": "Registry.getLending",
      "offset": [
        18806,
        19081
      ],
      "op": "POP",
      "path": "15"
    },
    "1503": {
      "fn": "Registry.getLending",
      "offset": [
        18806,
        19081
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1504": {
      "fn": "Registry.getLending",
      "offset": [
        18806,
        19081
      ],
      "op": "POP",
      "path": "15"
    },
    "1505": {
      "fn": "Registry.getLending",
      "offset": [
        18806,
        19081
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1506": {
      "fn": "Registry.getLending",
      "offset": [
        18806,
        19081
      ],
      "op": "POP",
      "path": "15"
    },
    "1507": {
      "fn": "Registry.getLending",
      "offset": [
        18806,
        19081
      ],
      "op": "POP",
      "path": "15"
    },
    "1508": {
      "fn": "Registry.getLending",
      "offset": [
        18806,
        19081
      ],
      "op": "POP",
      "path": "15"
    },
    "1509": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1510": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "SWAP8",
      "path": "15"
    },
    "1511": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "POP",
      "path": "15"
    },
    "1512": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1513": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "SWAP8",
      "path": "15"
    },
    "1514": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "POP",
      "path": "15"
    },
    "1515": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1516": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "SWAP8",
      "path": "15"
    },
    "1517": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1518": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "1519": {
      "fn": "Registry.getLending",
      "offset": [
        18311,
        19088
      ],
      "op": "POP",
      "path": "15"
    },
    "1520": {
      "fn": "Registry.getLending",
      "jump": "o",
      "offset": [
        18311,
        19088
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1521": {
      "fn": "Registry.setRentFee",
      "offset": [
        27625,
        27787
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1522": {
      "offset": [
        2669,
        2674
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1524": {
      "fn": "Registry.setRentFee",
      "offset": [
        2669,
        2674
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1531": {
      "op": "SHL"
    },
    "1532": {
      "op": "SUB"
    },
    "1533": {
      "offset": [
        2669,
        2674
      ],
      "op": "AND",
      "path": "15"
    },
    "1534": {
      "offset": [
        2655,
        2665
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1535": {
      "offset": [
        2655,
        2674
      ],
      "op": "EQ",
      "path": "15"
    },
    "1536": {
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x61B"
    },
    "1539": {
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1540": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1542": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1543": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1549": {
      "op": "SHL"
    },
    "1550": {
      "offset": [
        2647,
        2695
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1551": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1552": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1554": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "ADD",
      "path": "15"
    },
    "1555": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1558": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1559": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x480F"
    },
    "1562": {
      "fn": "Registry.setRentFee",
      "jump": "i",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1563": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1564": {
      "fn": "Registry.setRentFee",
      "offset": [
        27715,
        27720
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 7,
      "value": "0x2710"
    },
    "1567": {
      "fn": "Registry.setRentFee",
      "offset": [
        27702,
        27712
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1568": {
      "branch": 130,
      "fn": "Registry.setRentFee",
      "offset": [
        27702,
        27720
      ],
      "op": "LT",
      "path": "15"
    },
    "1569": {
      "fn": "Registry.setRentFee",
      "offset": [
        27694,
        27750
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x66C"
    },
    "1572": {
      "branch": 130,
      "fn": "Registry.setRentFee",
      "offset": [
        27694,
        27750
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1573": {
      "fn": "Registry.setRentFee",
      "offset": [
        27694,
        27750
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1575": {
      "fn": "Registry.setRentFee",
      "offset": [
        27694,
        27750
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1576": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1582": {
      "op": "SHL"
    },
    "1583": {
      "fn": "Registry.setRentFee",
      "offset": [
        27694,
        27750
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1584": {
      "fn": "Registry.setRentFee",
      "offset": [
        27694,
        27750
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1587": {
      "fn": "Registry.setRentFee",
      "offset": [
        27694,
        27750
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1589": {
      "fn": "Registry.setRentFee",
      "offset": [
        27694,
        27750
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1590": {
      "fn": "Registry.setRentFee",
      "offset": [
        27694,
        27750
      ],
      "op": "ADD",
      "path": "15"
    },
    "1591": {
      "op": "MSTORE"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1596": {
      "op": "DUP3"
    },
    "1597": {
      "op": "ADD"
    },
    "1598": {
      "op": "MSTORE"
    },
    "1599": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A66656520657863656564732031303070637400000000000000"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1634": {
      "op": "DUP3"
    },
    "1635": {
      "op": "ADD"
    },
    "1636": {
      "op": "MSTORE"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1639": {
      "op": "ADD"
    },
    "1640": {
      "fn": "Registry.setRentFee",
      "offset": [
        27694,
        27750
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1643": {
      "op": "JUMP"
    },
    "1644": {
      "fn": "Registry.setRentFee",
      "offset": [
        27694,
        27750
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1645": {
      "fn": "Registry.setRentFee",
      "offset": [
        27760,
        27767
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 8,
      "value": "0x6"
    },
    "1647": {
      "fn": "Registry.setRentFee",
      "offset": [
        27760,
        27780
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1648": {
      "fn": "Registry.setRentFee",
      "jump": "o",
      "offset": [
        27625,
        27787
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1649": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1650": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1652": {
      "fn": "Registry.claimRent",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1653": {
      "fn": "Registry.claimRent",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1655": {
      "fn": "Registry.claimRent",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "15"
    },
    "1656": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1657": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x694"
    },
    "1660": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1661": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1663": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1664": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1670": {
      "op": "SHL"
    },
    "1671": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1672": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1673": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1675": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "15"
    },
    "1676": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1679": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1680": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x47E8"
    },
    "1683": {
      "fn": "Registry.claimRent",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1684": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1685": {
      "fn": "Registry.claimRent",
      "offset": [
        5638,
        5873
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 9,
      "value": "0x44A"
    },
    "1688": {
      "fn": "Registry.claimRent",
      "offset": [
        5662,
        5677
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16FB"
    },
    "1691": {
      "fn": "Registry.claimRent",
      "offset": [
        5691,
        5863
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x445"
    },
    "1694": {
      "fn": "Registry.claimRent",
      "offset": [
        5729,
        5740
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1695": {
      "fn": "Registry.claimRent",
      "offset": [
        5758,
        5768
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1696": {
      "fn": "Registry.claimRent",
      "offset": [
        5786,
        5793
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1697": {
      "fn": "Registry.claimRent",
      "offset": [
        5811,
        5821
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1698": {
      "fn": "Registry.claimRent",
      "offset": [
        5839,
        5849
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1699": {
      "fn": "Registry.claimRent",
      "offset": [
        5691,
        5711
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD6D"
    },
    "1702": {
      "fn": "Registry.claimRent",
      "jump": "i",
      "offset": [
        5691,
        5863
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1703": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1704": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1706": {
      "fn": "Registry.stopLend",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1707": {
      "fn": "Registry.stopLend",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1709": {
      "fn": "Registry.stopLend",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "15"
    },
    "1710": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1711": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6CA"
    },
    "1714": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1715": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1717": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1718": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1724": {
      "op": "SHL"
    },
    "1725": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1726": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1727": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1729": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "15"
    },
    "1730": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1733": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1734": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x47E8"
    },
    "1737": {
      "fn": "Registry.stopLend",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1738": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1739": {
      "fn": "Registry.stopLend",
      "offset": [
        4048,
        4288
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 10,
      "value": "0x708"
    },
    "1742": {
      "fn": "Registry.stopLend",
      "offset": [
        4072,
        4086
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B02"
    },
    "1745": {
      "fn": "Registry.stopLend",
      "offset": [
        4100,
        4278
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x445"
    },
    "1748": {
      "fn": "Registry.stopLend",
      "offset": [
        4138,
        4149
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1749": {
      "fn": "Registry.stopLend",
      "offset": [
        4167,
        4177
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1750": {
      "fn": "Registry.stopLend",
      "offset": [
        4195,
        4202
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1751": {
      "fn": "Registry.stopLend",
      "offset": [
        4220,
        4230
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1752": {
      "fn": "Registry.stopLend",
      "offset": [
        4262,
        4263
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1754": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1756": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1757": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1758": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1759": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1760": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1761": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1762": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1764": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "MUL",
      "path": "15"
    },
    "1765": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1767": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "ADD",
      "path": "15"
    },
    "1768": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1769": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "ADD",
      "path": "15"
    },
    "1770": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1772": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1773": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1774": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1775": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x702"
    },
    "1778": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1779": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1780": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1782": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "ADD",
      "path": "15"
    },
    "1783": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1785": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1786": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "MUL",
      "path": "15"
    },
    "1787": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1788": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1789": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1790": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "1791": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "ADD",
      "path": "15"
    },
    "1792": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1793": {
      "op": "POP"
    },
    "1794": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1795": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "POP",
      "path": "15"
    },
    "1796": {
      "fn": "Registry.stopLend",
      "offset": [
        4100,
        4120
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD6D"
    },
    "1799": {
      "fn": "Registry.stopLend",
      "jump": "i",
      "offset": [
        4100,
        4278
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1800": {
      "fn": "Registry.stopLend",
      "offset": [
        4048,
        4288
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1801": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "POP",
      "path": "15"
    },
    "1802": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "POP",
      "path": "15"
    },
    "1803": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "POP",
      "path": "15"
    },
    "1804": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "POP",
      "path": "15"
    },
    "1805": {
      "fn": "Registry.stopLend",
      "jump": "o",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1806": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1807": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1809": {
      "fn": "Registry.rent",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1810": {
      "fn": "Registry.rent",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1812": {
      "fn": "Registry.rent",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "15"
    },
    "1813": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1814": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x731"
    },
    "1817": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1818": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1820": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1821": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1827": {
      "op": "SHL"
    },
    "1828": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1829": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1830": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1832": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "15"
    },
    "1833": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1836": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1837": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x47E8"
    },
    "1840": {
      "fn": "Registry.rent",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1841": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1842": {
      "fn": "Registry.rent",
      "offset": [
        4601,
        4859
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 11,
      "value": "0x745"
    },
    "1845": {
      "fn": "Registry.rent",
      "offset": [
        4625,
        4635
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EBB"
    },
    "1848": {
      "fn": "Registry.rent",
      "offset": [
        4649,
        4849
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x445"
    },
    "1851": {
      "fn": "Registry.rent",
      "offset": [
        4685,
        4696
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1852": {
      "fn": "Registry.rent",
      "offset": [
        4714,
        4724
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1853": {
      "fn": "Registry.rent",
      "offset": [
        4742,
        4749
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1854": {
      "fn": "Registry.rent",
      "offset": [
        4767,
        4777
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1855": {
      "fn": "Registry.rent",
      "offset": [
        4795,
        4807
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1856": {
      "fn": "Registry.rent",
      "offset": [
        4825,
        4835
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1857": {
      "fn": "Registry.rent",
      "offset": [
        4649,
        4667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x263C"
    },
    "1860": {
      "fn": "Registry.rent",
      "jump": "i",
      "offset": [
        4649,
        4849
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1861": {
      "fn": "Registry.rent",
      "offset": [
        4601,
        4859
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1862": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "POP",
      "path": "15"
    },
    "1863": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "POP",
      "path": "15"
    },
    "1864": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "POP",
      "path": "15"
    },
    "1865": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "POP",
      "path": "15"
    },
    "1866": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "POP",
      "path": "15"
    },
    "1867": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "POP",
      "path": "15"
    },
    "1868": {
      "fn": "Registry.rent",
      "jump": "o",
      "offset": [
        4301,
        4866
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1869": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1870": {
      "fn": "Registry.getRenting",
      "offset": [
        19261,
        19268
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1872": {
      "fn": "Registry.getRenting",
      "offset": [
        19282,
        19288
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1873": {
      "fn": "Registry.getRenting",
      "offset": [
        19302,
        19307
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1875": {
      "fn": "Registry.getRenting",
      "offset": [
        19321,
        19327
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1876": {
      "fn": "Registry.getRenting",
      "offset": [
        19352,
        19370
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1878": {
      "fn": "Registry.getRenting",
      "offset": [
        19413,
        19423
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1879": {
      "fn": "Registry.getRenting",
      "offset": [
        19425,
        19432
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1880": {
      "fn": "Registry.getRenting",
      "offset": [
        19434,
        19444
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1881": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1883": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1884": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1886": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "ADD",
      "path": "15"
    },
    "1887": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x76A"
    },
    "1890": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1891": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1892": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1893": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1894": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x460D"
    },
    "1897": {
      "fn": "Registry.getRenting",
      "jump": "i",
      "offset": [
        19396,
        19445
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1898": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1899": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1901": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1902": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1903": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1904": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1905": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "SUB",
      "path": "15"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1908": {
      "op": "NOT"
    },
    "1909": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "ADD",
      "path": "15"
    },
    "1910": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1911": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1912": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1913": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1914": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1915": {
      "fn": "Registry.getRenting",
      "offset": [
        19373,
        19455
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1916": {
      "fn": "Registry.getRenting",
      "offset": [
        19373,
        19455
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1917": {
      "fn": "Registry.getRenting",
      "offset": [
        19396,
        19445
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1919": {
      "fn": "Registry.getRenting",
      "offset": [
        19373,
        19455
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1920": {
      "fn": "Registry.getRenting",
      "offset": [
        19373,
        19455
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1921": {
      "fn": "Registry.getRenting",
      "offset": [
        19373,
        19455
      ],
      "op": "ADD",
      "path": "15"
    },
    "1922": {
      "fn": "Registry.getRenting",
      "offset": [
        19373,
        19455
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1923": {
      "fn": "Registry.getRenting",
      "offset": [
        19465,
        19498
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1925": {
      "fn": "Registry.getRenting",
      "offset": [
        19501,
        19521
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1926": {
      "fn": "Registry.getRenting",
      "offset": [
        19501,
        19521
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1927": {
      "fn": "Registry.getRenting",
      "offset": [
        19501,
        19521
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1928": {
      "fn": "Registry.getRenting",
      "offset": [
        19501,
        19509
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "1930": {
      "fn": "Registry.getRenting",
      "offset": [
        19501,
        19521
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1931": {
      "fn": "Registry.getRenting",
      "offset": [
        19501,
        19521
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1932": {
      "fn": "Registry.getRenting",
      "offset": [
        19501,
        19521
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1933": {
      "fn": "Registry.getRenting",
      "offset": [
        19501,
        19521
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1934": {
      "fn": "Registry.getRenting",
      "offset": [
        19501,
        19521
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1935": {
      "fn": "Registry.getRenting",
      "offset": [
        19552,
        19573
      ],
      "op": "SLOAD",
      "path": "15",
      "statement": 12
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1942": {
      "op": "SHL"
    },
    "1943": {
      "op": "SUB"
    },
    "1944": {
      "fn": "Registry.getRenting",
      "offset": [
        19552,
        19573
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1945": {
      "fn": "Registry.getRenting",
      "offset": [
        19552,
        19573
      ],
      "op": "AND",
      "path": "15"
    },
    "1946": {
      "fn": "Registry.getRenting",
      "offset": [
        19552,
        19573
      ],
      "op": "SWAP10",
      "path": "15"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "1951": {
      "op": "SHL"
    },
    "1952": {
      "fn": "Registry.getRenting",
      "offset": [
        19587,
        19605
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1953": {
      "fn": "Registry.getRenting",
      "offset": [
        19587,
        19605
      ],
      "op": "DIV",
      "path": "15"
    },
    "1954": {
      "fn": "Registry.getRenting",
      "offset": [
        19587,
        19605
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "1957": {
      "fn": "Registry.getRenting",
      "offset": [
        19587,
        19605
      ],
      "op": "AND",
      "path": "15"
    },
    "1958": {
      "fn": "Registry.getRenting",
      "offset": [
        19587,
        19605
      ],
      "op": "SWAP10",
      "path": "15"
    },
    "1959": {
      "op": "POP"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1964": {
      "op": "SHL"
    },
    "1965": {
      "fn": "Registry.getRenting",
      "offset": [
        19619,
        19639
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1966": {
      "fn": "Registry.getRenting",
      "offset": [
        19619,
        19639
      ],
      "op": "DIV",
      "path": "15"
    },
    "1967": {
      "fn": "Registry.getRenting",
      "offset": [
        19619,
        19639
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1969": {
      "fn": "Registry.getRenting",
      "offset": [
        19619,
        19639
      ],
      "op": "AND",
      "path": "15"
    },
    "1970": {
      "fn": "Registry.getRenting",
      "offset": [
        19619,
        19639
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1971": {
      "op": "POP"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1976": {
      "op": "SHL"
    },
    "1977": {
      "fn": "Registry.getRenting",
      "offset": [
        19653,
        19669
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1978": {
      "fn": "Registry.getRenting",
      "offset": [
        19653,
        19669
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1979": {
      "fn": "Registry.getRenting",
      "offset": [
        19653,
        19669
      ],
      "op": "DIV",
      "path": "15"
    },
    "1980": {
      "fn": "Registry.getRenting",
      "offset": [
        19653,
        19669
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1985": {
      "fn": "Registry.getRenting",
      "offset": [
        19653,
        19669
      ],
      "op": "AND",
      "path": "15"
    },
    "1986": {
      "fn": "Registry.getRenting",
      "offset": [
        19653,
        19669
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "1987": {
      "op": "POP"
    },
    "1988": {
      "fn": "Registry.getRenting",
      "offset": [
        19094,
        19686
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "1989": {
      "op": "POP"
    },
    "1990": {
      "op": "POP"
    },
    "1991": {
      "op": "POP"
    },
    "1992": {
      "op": "POP"
    },
    "1993": {
      "op": "POP"
    },
    "1994": {
      "fn": "Registry.getRenting",
      "jump": "o",
      "offset": [
        19094,
        19686
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1995": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11571,
        13104
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1996": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11660,
        11667
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1997": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11660,
        11667
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1998": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11643,
        13098
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1999": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11673,
        11675
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2000": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11673,
        11681
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2002": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11673,
        11681
      ],
      "op": "ADD",
      "path": "15"
    },
    "2003": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11673,
        11681
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2004": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11669,
        11670
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2005": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11669,
        11681
      ],
      "op": "LT",
      "path": "15"
    },
    "2006": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11643,
        13098
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2007": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11643,
        13098
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD69"
    },
    "2010": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11643,
        13098
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2011": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11702,
        11727
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2013": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11795,
        11797
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2014": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11795,
        11808
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "2016": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11795,
        11808
      ],
      "op": "ADD",
      "path": "15"
    },
    "2017": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11795,
        11808
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2018": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11809,
        11811
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2019": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11809,
        11816
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2021": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11809,
        11816
      ],
      "op": "ADD",
      "path": "15"
    },
    "2022": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11809,
        11816
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2023": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11795,
        11817
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2024": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11795,
        11817
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2025": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11795,
        11817
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2026": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11795,
        11817
      ],
      "op": "LT",
      "path": "15"
    },
    "2027": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11795,
        11817
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7F6"
    },
    "2030": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11795,
        11817
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2031": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11795,
        11817
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7F6"
    },
    "2034": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11795,
        11817
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "2037": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11795,
        11817
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2038": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11795,
        11817
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2039": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11795,
        11817
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2041": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11795,
        11817
      ],
      "op": "MUL",
      "path": "15"
    },
    "2042": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11795,
        11817
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2044": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11795,
        11817
      ],
      "op": "ADD",
      "path": "15"
    },
    "2045": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11795,
        11817
      ],
      "op": "ADD",
      "path": "15"
    },
    "2046": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11795,
        11817
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2047": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11839,
        11841
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2048": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11839,
        11849
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2050": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11839,
        11849
      ],
      "op": "ADD",
      "path": "15"
    },
    "2051": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11839,
        11849
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2052": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11850,
        11851
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2053": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11839,
        11852
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2054": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11839,
        11852
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2055": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11839,
        11852
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2056": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11839,
        11852
      ],
      "op": "LT",
      "path": "15"
    },
    "2057": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11839,
        11852
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x814"
    },
    "2060": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11839,
        11852
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2061": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11839,
        11852
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x814"
    },
    "2064": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11839,
        11852
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "2067": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11839,
        11852
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2068": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11839,
        11852
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2069": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11839,
        11852
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2071": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11839,
        11852
      ],
      "op": "MUL",
      "path": "15"
    },
    "2072": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11839,
        11852
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2074": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11839,
        11852
      ],
      "op": "ADD",
      "path": "15"
    },
    "2075": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11839,
        11852
      ],
      "op": "ADD",
      "path": "15"
    },
    "2076": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11839,
        11852
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2077": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11874,
        11876
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2078": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11874,
        11886
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "2081": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11874,
        11886
      ],
      "op": "ADD",
      "path": "15"
    },
    "2082": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11874,
        11886
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2083": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11887,
        11888
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2084": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11874,
        11889
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2085": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11874,
        11889
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2086": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11874,
        11889
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2087": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11874,
        11889
      ],
      "op": "LT",
      "path": "15"
    },
    "2088": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11874,
        11889
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x833"
    },
    "2091": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11874,
        11889
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2092": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11874,
        11889
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x833"
    },
    "2095": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11874,
        11889
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "2098": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11874,
        11889
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2099": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11874,
        11889
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2100": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11874,
        11889
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2102": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11874,
        11889
      ],
      "op": "MUL",
      "path": "15"
    },
    "2103": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11874,
        11889
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2105": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11874,
        11889
      ],
      "op": "ADD",
      "path": "15"
    },
    "2106": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11874,
        11889
      ],
      "op": "ADD",
      "path": "15"
    },
    "2107": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11874,
        11889
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2108": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2110": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2111": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2113": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "ADD",
      "path": "15"
    },
    "2114": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x84D"
    },
    "2117": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2118": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2119": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2120": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2121": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x460D"
    },
    "2124": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11757,
        11907
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2125": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2126": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2128": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2129": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2131": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2132": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2133": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "SUB",
      "path": "15"
    },
    "2134": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "SUB",
      "path": "15"
    },
    "2135": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2136": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2137": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2138": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2140": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11757,
        11907
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2141": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11730,
        11921
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2142": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11730,
        11921
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2143": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11730,
        11921
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2144": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11730,
        11921
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2146": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11730,
        11921
      ],
      "op": "ADD",
      "path": "15"
    },
    "2147": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11730,
        11921
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2148": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11702,
        11921
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2149": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11702,
        11921
      ],
      "op": "POP",
      "path": "15"
    },
    "2150": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11935,
        11960
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2152": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12028,
        12030
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2153": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12028,
        12041
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "2155": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12028,
        12041
      ],
      "op": "ADD",
      "path": "15"
    },
    "2156": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12028,
        12041
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2157": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12042,
        12044
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2158": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12042,
        12049
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2160": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12042,
        12049
      ],
      "op": "ADD",
      "path": "15"
    },
    "2161": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12042,
        12049
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2162": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12028,
        12050
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2163": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12028,
        12050
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2164": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12028,
        12050
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2165": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12028,
        12050
      ],
      "op": "LT",
      "path": "15"
    },
    "2166": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12028,
        12050
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x881"
    },
    "2169": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12028,
        12050
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2170": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12028,
        12050
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x881"
    },
    "2173": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12028,
        12050
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "2176": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12028,
        12050
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2177": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12028,
        12050
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2178": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12028,
        12050
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2180": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12028,
        12050
      ],
      "op": "MUL",
      "path": "15"
    },
    "2181": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12028,
        12050
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2183": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12028,
        12050
      ],
      "op": "ADD",
      "path": "15"
    },
    "2184": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12028,
        12050
      ],
      "op": "ADD",
      "path": "15"
    },
    "2185": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12028,
        12050
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2186": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12072,
        12074
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2187": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12072,
        12082
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2189": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12072,
        12082
      ],
      "op": "ADD",
      "path": "15"
    },
    "2190": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12072,
        12082
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2191": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12083,
        12084
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2192": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12072,
        12085
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2193": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12072,
        12085
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2194": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12072,
        12085
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2195": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12072,
        12085
      ],
      "op": "LT",
      "path": "15"
    },
    "2196": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12072,
        12085
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x89F"
    },
    "2199": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12072,
        12085
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2200": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12072,
        12085
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x89F"
    },
    "2203": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12072,
        12085
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "2206": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12072,
        12085
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2207": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12072,
        12085
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2208": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12072,
        12085
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2210": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12072,
        12085
      ],
      "op": "MUL",
      "path": "15"
    },
    "2211": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12072,
        12085
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2213": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12072,
        12085
      ],
      "op": "ADD",
      "path": "15"
    },
    "2214": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12072,
        12085
      ],
      "op": "ADD",
      "path": "15"
    },
    "2215": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12072,
        12085
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2216": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12107,
        12109
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2217": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12107,
        12119
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x120"
    },
    "2220": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12107,
        12119
      ],
      "op": "ADD",
      "path": "15"
    },
    "2221": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12107,
        12119
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2222": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12120,
        12121
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2223": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12107,
        12122
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2224": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12107,
        12122
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2225": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12107,
        12122
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2226": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12107,
        12122
      ],
      "op": "LT",
      "path": "15"
    },
    "2227": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12107,
        12122
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8BE"
    },
    "2230": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12107,
        12122
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2231": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12107,
        12122
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8BE"
    },
    "2234": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12107,
        12122
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "2237": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12107,
        12122
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2238": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12107,
        12122
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2239": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12107,
        12122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2241": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12107,
        12122
      ],
      "op": "MUL",
      "path": "15"
    },
    "2242": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12107,
        12122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2244": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12107,
        12122
      ],
      "op": "ADD",
      "path": "15"
    },
    "2245": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12107,
        12122
      ],
      "op": "ADD",
      "path": "15"
    },
    "2246": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12107,
        12122
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2247": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2249": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2250": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2252": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "ADD",
      "path": "15"
    },
    "2253": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8D8"
    },
    "2256": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2257": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2258": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2259": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2260": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x460D"
    },
    "2263": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11990,
        12140
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2264": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2265": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2267": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2268": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2271": {
      "op": "NOT"
    },
    "2272": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2273": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2274": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "SUB",
      "path": "15"
    },
    "2275": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "ADD",
      "path": "15"
    },
    "2276": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2277": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2278": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2279": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2280": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2281": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11963,
        12154
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2282": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11963,
        12154
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2283": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2285": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11963,
        12154
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2286": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11963,
        12154
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2287": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11963,
        12154
      ],
      "op": "ADD",
      "path": "15"
    },
    "2288": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11963,
        12154
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2289": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12168,
        12201
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2291": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12204,
        12231
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2292": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12204,
        12231
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2293": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12204,
        12231
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2294": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12204,
        12212
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "2296": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12204,
        12231
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2297": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12204,
        12231
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2298": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12204,
        12231
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2299": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12204,
        12231
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2300": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12204,
        12231
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2301": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12281,
        12308
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2302": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12281,
        12308
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2303": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12281,
        12308
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2304": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12281,
        12289
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "2306": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12281,
        12308
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2307": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12281,
        12308
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2308": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12281,
        12308
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2309": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12281,
        12308
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2310": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12281,
        12308
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2311": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12281,
        12308
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2312": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 13,
      "value": "0xE0"
    },
    "2314": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2315": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "ADD",
      "path": "15"
    },
    "2316": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2317": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2318": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2319": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2320": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2321": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11963,
        12154
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2322": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11963,
        12154
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "2323": {
      "op": "POP"
    },
    "2324": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12204,
        12231
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2325": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12204,
        12231
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2326": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9D9"
    },
    "2329": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2330": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12204,
        12231
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2331": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12204,
        12231
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2332": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2333": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11990,
        12140
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2334": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2336": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "AND",
      "path": "15"
    },
    "2337": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2339": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2340": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "GT",
      "path": "15"
    },
    "2341": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2342": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x931"
    },
    "2345": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2346": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x931"
    },
    "2349": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "2352": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12322,
        12346
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2353": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2354": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2356": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2357": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "GT",
      "path": "15"
    },
    "2358": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2359": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x942"
    },
    "2362": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2363": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x942"
    },
    "2366": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "2369": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12322,
        12346
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2370": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2371": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2372": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2373": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2374": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2381": {
      "op": "SHL"
    },
    "2382": {
      "op": "SUB"
    },
    "2383": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "2386": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2387": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DIV",
      "path": "15"
    },
    "2388": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "AND",
      "path": "15"
    },
    "2389": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2391": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2392": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "ADD",
      "path": "15"
    },
    "2393": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2394": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2400": {
      "op": "SHL"
    },
    "2401": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2402": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DIV",
      "path": "15"
    },
    "2403": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2404": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "AND",
      "path": "15"
    },
    "2405": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2407": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2408": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "ADD",
      "path": "15"
    },
    "2409": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2416": {
      "op": "SHL"
    },
    "2417": {
      "op": "SUB"
    },
    "2418": {
      "op": "NOT"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2423": {
      "op": "SHL"
    },
    "2424": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2425": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DIV",
      "path": "15"
    },
    "2426": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "2428": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "SHL",
      "path": "15"
    },
    "2429": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "AND",
      "path": "15"
    },
    "2430": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "2432": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2433": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "ADD",
      "path": "15"
    },
    "2434": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2435": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2442": {
      "op": "SHL"
    },
    "2443": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2444": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DIV",
      "path": "15"
    },
    "2445": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2446": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "AND",
      "path": "15"
    },
    "2447": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2449": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2450": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "ADD",
      "path": "15"
    },
    "2451": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2456": {
      "op": "SHL"
    },
    "2457": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2458": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DIV",
      "path": "15"
    },
    "2459": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "AND",
      "path": "15"
    },
    "2460": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "2462": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2463": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "ADD",
      "path": "15"
    },
    "2464": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2465": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "2467": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2468": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2469": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "ADD",
      "path": "15"
    },
    "2470": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2475": {
      "op": "SHL"
    },
    "2476": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2477": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2478": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DIV",
      "path": "15"
    },
    "2479": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "AND",
      "path": "15"
    },
    "2480": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "2482": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2483": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "GT",
      "path": "15"
    },
    "2484": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2485": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9C0"
    },
    "2488": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2489": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9C0"
    },
    "2492": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "2495": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12322,
        12346
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2496": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2497": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "2499": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2500": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "GT",
      "path": "15"
    },
    "2501": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2502": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9D1"
    },
    "2505": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2506": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9D1"
    },
    "2509": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "2512": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12322,
        12346
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2513": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2514": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2515": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2516": {
      "op": "POP"
    },
    "2517": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12337
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x275E"
    },
    "2520": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12322,
        12346
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2521": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12346
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2522": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 14,
      "value": "0x40"
    },
    "2524": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2525": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2526": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2528": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2529": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "ADD",
      "path": "15"
    },
    "2530": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2531": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2532": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2533": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2540": {
      "op": "SHL"
    },
    "2541": {
      "op": "SUB"
    },
    "2542": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2543": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "AND",
      "path": "15"
    },
    "2544": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2545": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2550": {
      "op": "SHL"
    },
    "2551": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2552": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "DIV",
      "path": "15"
    },
    "2553": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2555": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "AND",
      "path": "15"
    },
    "2556": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2558": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2559": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "ADD",
      "path": "15"
    },
    "2560": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2565": {
      "op": "SHL"
    },
    "2566": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2567": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "DIV",
      "path": "15"
    },
    "2568": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2573": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "AND",
      "path": "15"
    },
    "2574": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2575": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2576": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "ADD",
      "path": "15"
    },
    "2577": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2578": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2579": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2580": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "2585": {
      "op": "SHL"
    },
    "2586": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2587": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2588": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "DIV",
      "path": "15"
    },
    "2589": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "2592": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "AND",
      "path": "15"
    },
    "2593": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "2595": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2596": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "ADD",
      "path": "15"
    },
    "2597": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2598": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA2E"
    },
    "2601": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2602": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12375
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27E1"
    },
    "2605": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12360,
        12384
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2606": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12360,
        12384
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2607": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 15,
      "value": "0x40"
    },
    "2609": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2610": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2611": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2613": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2614": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "ADD",
      "path": "15"
    },
    "2615": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2616": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2617": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2618": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2625": {
      "op": "SHL"
    },
    "2626": {
      "op": "SUB"
    },
    "2627": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2628": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "AND",
      "path": "15"
    },
    "2629": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2630": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2635": {
      "op": "SHL"
    },
    "2636": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2637": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "DIV",
      "path": "15"
    },
    "2638": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2640": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "AND",
      "path": "15"
    },
    "2641": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2643": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2644": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "ADD",
      "path": "15"
    },
    "2645": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2650": {
      "op": "SHL"
    },
    "2651": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2652": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "DIV",
      "path": "15"
    },
    "2653": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2658": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "AND",
      "path": "15"
    },
    "2659": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2660": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2661": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "ADD",
      "path": "15"
    },
    "2662": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2663": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2664": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2665": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "2670": {
      "op": "SHL"
    },
    "2671": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2672": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2673": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "DIV",
      "path": "15"
    },
    "2674": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "2677": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "AND",
      "path": "15"
    },
    "2678": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "2680": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2681": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "ADD",
      "path": "15"
    },
    "2682": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2683": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA85"
    },
    "2686": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2687": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12426,
        12436
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2688": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12438,
        12453
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "2689": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12416
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2867"
    },
    "2692": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12398,
        12454
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2693": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12398,
        12454
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2694": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12514,
        12533
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 16
    },
    "2695": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12514,
        12533
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2696": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12514,
        12533
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2698": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12514,
        12533
      ],
      "op": "AND",
      "path": "15"
    },
    "2699": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12514,
        12533
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2701": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12533
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2702": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12533
      ],
      "op": "GT",
      "path": "15"
    },
    "2703": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12533
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2704": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12533
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA9B"
    },
    "2707": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12533
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2708": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12533
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA9B"
    },
    "2711": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12533
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "2714": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12493,
        12533
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2715": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12533
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2716": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12495
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2717": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12507
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2719": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12507
      ],
      "op": "ADD",
      "path": "15"
    },
    "2720": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12507
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2721": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12508,
        12509
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2722": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12510
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2723": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12510
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2724": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12510
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2725": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12510
      ],
      "op": "LT",
      "path": "15"
    },
    "2726": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12510
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAB1"
    },
    "2729": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12510
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2730": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12510
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAB1"
    },
    "2733": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12510
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "2736": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12493,
        12510
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2737": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12510
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2738": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12510
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2740": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12510
      ],
      "op": "MUL",
      "path": "15"
    },
    "2741": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12510
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2743": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12510
      ],
      "op": "ADD",
      "path": "15"
    },
    "2744": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12510
      ],
      "op": "ADD",
      "path": "15"
    },
    "2745": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12510
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2746": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12533
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2748": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12533
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2749": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12533
      ],
      "op": "GT",
      "path": "15"
    },
    "2750": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12533
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2751": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12533
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xACA"
    },
    "2754": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12533
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2755": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12533
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xACA"
    },
    "2758": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12533
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "2761": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12493,
        12533
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2762": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12533
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2763": {
      "branch": 131,
      "fn": "Registry.handleStopRent",
      "offset": [
        12493,
        12533
      ],
      "op": "EQ",
      "path": "15"
    },
    "2764": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12468,
        12594
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAE7"
    },
    "2767": {
      "branch": 131,
      "fn": "Registry.handleStopRent",
      "offset": [
        12468,
        12594
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2768": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12468,
        12594
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2770": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12468,
        12594
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2771": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2777": {
      "op": "SHL"
    },
    "2778": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12468,
        12594
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2779": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12468,
        12594
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2780": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12468,
        12594
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2782": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12468,
        12594
      ],
      "op": "ADD",
      "path": "15"
    },
    "2783": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12468,
        12594
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "2786": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12468,
        12594
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2787": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12468,
        12594
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4743"
    },
    "2790": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12468,
        12594
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2791": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12468,
        12594
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2792": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12655,
        12673
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 17
    },
    "2793": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12655,
        12673
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2794": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12633,
        12651
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2795": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12633,
        12651
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2800": {
      "op": "SHL"
    },
    "2801": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12655,
        12673
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2802": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12655,
        12673
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2803": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12655,
        12673
      ],
      "op": "DIV",
      "path": "15"
    },
    "2804": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12655,
        12673
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "2807": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12655,
        12673
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2808": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12655,
        12673
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2809": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12655,
        12673
      ],
      "op": "AND",
      "path": "15"
    },
    "2810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2812": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "2814": {
      "op": "SHL"
    },
    "2815": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12633,
        12651
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2816": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12633,
        12651
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2817": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12633,
        12651
      ],
      "op": "DIV",
      "path": "15"
    },
    "2818": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12633,
        12651
      ],
      "op": "AND",
      "path": "15"
    },
    "2819": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12633,
        12673
      ],
      "op": "GT",
      "path": "15"
    },
    "2820": {
      "branch": 132,
      "fn": "Registry.handleStopRent",
      "offset": [
        12633,
        12673
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2821": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12608,
        12728
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB48"
    },
    "2824": {
      "branch": 132,
      "fn": "Registry.handleStopRent",
      "offset": [
        12608,
        12728
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2825": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12608,
        12728
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2827": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12608,
        12728
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2828": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2832": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2834": {
      "op": "SHL"
    },
    "2835": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12608,
        12728
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2836": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12608,
        12728
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2839": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12608,
        12728
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2841": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12608,
        12728
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2842": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12608,
        12728
      ],
      "op": "ADD",
      "path": "15"
    },
    "2843": {
      "op": "MSTORE"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2848": {
      "op": "DUP3"
    },
    "2849": {
      "op": "ADD"
    },
    "2850": {
      "op": "MSTORE"
    },
    "2851": {
      "op": "PUSH21",
      "value": "0x2932A7232A1D1D31B934BA34B1B0B61032B93937B9"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "2875": {
      "op": "SHL"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2878": {
      "op": "DUP3"
    },
    "2879": {
      "op": "ADD"
    },
    "2880": {
      "op": "MSTORE"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2883": {
      "op": "ADD"
    },
    "2884": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12608,
        12728
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "2887": {
      "op": "JUMP"
    },
    "2888": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12608,
        12728
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2889": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12792,
        12808
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2890": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12792,
        12808
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2891": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12742,
        12771
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2893": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12742,
        12771
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2894": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12774,
        12808
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB64"
    },
    "2897": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12774,
        12808
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2902": {
      "op": "SHL"
    },
    "2903": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12792,
        12808
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2904": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12792,
        12808
      ],
      "op": "DIV",
      "path": "15"
    },
    "2905": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12792,
        12808
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2910": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12792,
        12808
      ],
      "op": "AND",
      "path": "15"
    },
    "2911": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12774,
        12789
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "2912": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12774,
        12808
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A19"
    },
    "2915": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12774,
        12808
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2916": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12774,
        12808
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2917": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 18,
      "value": "0x40"
    },
    "2919": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2920": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2921": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "2923": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2924": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "ADD",
      "path": "15"
    },
    "2925": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2926": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2927": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2928": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2929": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2930": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12742,
        12808
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2931": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12742,
        12808
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2932": {
      "op": "POP"
    },
    "2933": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC85"
    },
    "2936": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2937": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12841,
        12848
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2938": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12841,
        12848
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2939": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2940": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2941": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2943": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "AND",
      "path": "15"
    },
    "2944": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2946": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2947": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "GT",
      "path": "15"
    },
    "2948": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2949": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB90"
    },
    "2952": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2953": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB90"
    },
    "2956": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "2959": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12822,
        12881
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2960": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2961": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2963": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2964": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "GT",
      "path": "15"
    },
    "2965": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2966": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBA1"
    },
    "2969": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2970": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBA1"
    },
    "2973": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "2976": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12822,
        12881
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2977": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2978": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2979": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2980": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2981": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2988": {
      "op": "SHL"
    },
    "2989": {
      "op": "SUB"
    },
    "2990": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "2993": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2994": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DIV",
      "path": "15"
    },
    "2995": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "AND",
      "path": "15"
    },
    "2996": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2998": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2999": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "ADD",
      "path": "15"
    },
    "3000": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3001": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3007": {
      "op": "SHL"
    },
    "3008": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3009": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DIV",
      "path": "15"
    },
    "3010": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3011": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "AND",
      "path": "15"
    },
    "3012": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3014": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3015": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "ADD",
      "path": "15"
    },
    "3016": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3023": {
      "op": "SHL"
    },
    "3024": {
      "op": "SUB"
    },
    "3025": {
      "op": "NOT"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "3030": {
      "op": "SHL"
    },
    "3031": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3032": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DIV",
      "path": "15"
    },
    "3033": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "3035": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SHL",
      "path": "15"
    },
    "3036": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "AND",
      "path": "15"
    },
    "3037": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3039": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3040": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "ADD",
      "path": "15"
    },
    "3041": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3042": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3049": {
      "op": "SHL"
    },
    "3050": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3051": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DIV",
      "path": "15"
    },
    "3052": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3053": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "AND",
      "path": "15"
    },
    "3054": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "3056": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3057": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "ADD",
      "path": "15"
    },
    "3058": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3063": {
      "op": "SHL"
    },
    "3064": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3065": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DIV",
      "path": "15"
    },
    "3066": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "AND",
      "path": "15"
    },
    "3067": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "3069": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3070": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "ADD",
      "path": "15"
    },
    "3071": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3072": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "3074": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3075": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3076": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "ADD",
      "path": "15"
    },
    "3077": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3082": {
      "op": "SHL"
    },
    "3083": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3084": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3085": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DIV",
      "path": "15"
    },
    "3086": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "AND",
      "path": "15"
    },
    "3087": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "3089": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3090": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "GT",
      "path": "15"
    },
    "3091": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3092": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC1F"
    },
    "3095": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3096": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC1F"
    },
    "3099": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "3102": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12822,
        12881
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3103": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3104": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "3106": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3107": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "GT",
      "path": "15"
    },
    "3108": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3109": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC30"
    },
    "3112": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3113": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC30"
    },
    "3116": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "3119": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12822,
        12881
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3120": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3121": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3122": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3123": {
      "op": "POP"
    },
    "3124": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3126": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3127": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3128": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "3130": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3131": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "ADD",
      "path": "15"
    },
    "3132": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3133": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3134": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3135": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3142": {
      "op": "SHL"
    },
    "3143": {
      "op": "SUB"
    },
    "3144": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3145": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "AND",
      "path": "15"
    },
    "3146": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3147": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3152": {
      "op": "SHL"
    },
    "3153": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3154": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DIV",
      "path": "15"
    },
    "3155": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "3157": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "AND",
      "path": "15"
    },
    "3158": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3160": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3161": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "ADD",
      "path": "15"
    },
    "3162": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3167": {
      "op": "SHL"
    },
    "3168": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3169": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DIV",
      "path": "15"
    },
    "3170": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3175": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "AND",
      "path": "15"
    },
    "3176": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3177": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3178": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "ADD",
      "path": "15"
    },
    "3179": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3180": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3181": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3182": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3185": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "3187": {
      "op": "SHL"
    },
    "3188": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3189": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3190": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DIV",
      "path": "15"
    },
    "3191": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "3194": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "AND",
      "path": "15"
    },
    "3195": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3197": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3198": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "ADD",
      "path": "15"
    },
    "3199": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3200": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12859,
        12880
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3201": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12840
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x291C"
    },
    "3204": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12822,
        12881
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3205": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12822,
        12881
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3206": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12942,
        12960
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 19
    },
    "3207": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12942,
        12960
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3208": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12942,
        12960
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3210": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12922
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3211": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12922
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3212": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12922
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3213": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12903
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "3215": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12922
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3217": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12922
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3218": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12922
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3220": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12922
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3221": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12922
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3222": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3223": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3224": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12942,
        12960
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "3231": {
      "op": "SHL"
    },
    "3232": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12942,
        12960
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3233": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12942,
        12960
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "3234": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12942,
        12960
      ],
      "op": "DIV",
      "path": "15"
    },
    "3235": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12942,
        12960
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3236": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12942,
        12960
      ],
      "op": "AND",
      "path": "15"
    },
    "3237": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12942,
        12960
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3238": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12938
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1C"
    },
    "3240": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12938
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3241": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCBB"
    },
    "3244": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3245": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12942,
        12960
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3246": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12942,
        12960
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3251": {
      "op": "SHL"
    },
    "3252": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3253": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "DIV",
      "path": "15"
    },
    "3254": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "AND",
      "path": "15"
    },
    "3255": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x488C"
    },
    "3258": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12895,
        12960
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3259": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3260": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3261": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "POP",
      "path": "15"
    },
    "3262": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "3265": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "EXP",
      "path": "15"
    },
    "3266": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3267": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3268": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3269": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "3272": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "MUL",
      "path": "15"
    },
    "3273": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "NOT",
      "path": "15"
    },
    "3274": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "AND",
      "path": "15"
    },
    "3275": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3276": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3277": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "3280": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "AND",
      "path": "15"
    },
    "3281": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "MUL",
      "path": "15"
    },
    "3282": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "OR",
      "path": "15"
    },
    "3283": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3284": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3285": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12895,
        12960
      ],
      "op": "POP",
      "path": "15"
    },
    "3286": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12998,
        13000
      ],
      "op": "DUP7",
      "path": "15",
      "statement": 20
    },
    "3287": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12998,
        13010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x120"
    },
    "3290": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12998,
        13010
      ],
      "op": "ADD",
      "path": "15"
    },
    "3291": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12998,
        13010
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3292": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13011,
        13012
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3293": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12998,
        13013
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3294": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12998,
        13013
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3295": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12998,
        13013
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3296": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12998,
        13013
      ],
      "op": "LT",
      "path": "15"
    },
    "3297": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12998,
        13013
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCEC"
    },
    "3300": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12998,
        13013
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3301": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12998,
        13013
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCEC"
    },
    "3304": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12998,
        13013
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "3307": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12998,
        13013
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3308": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12998,
        13013
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3309": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12998,
        13013
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3311": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12998,
        13013
      ],
      "op": "MUL",
      "path": "15"
    },
    "3312": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12998,
        13013
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3314": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12998,
        13013
      ],
      "op": "ADD",
      "path": "15"
    },
    "3315": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12998,
        13013
      ],
      "op": "ADD",
      "path": "15"
    },
    "3316": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12998,
        13013
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3317": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12979,
        13039
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x58855DD8908B14C6D7922D964418F37EFD968BC6B9B857560870B14A898F916D"
    },
    "3350": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13022,
        13037
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "3351": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12979,
        13039
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3353": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12979,
        13039
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3354": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12979,
        13039
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD2F"
    },
    "3357": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12979,
        13039
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3358": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12979,
        13039
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3359": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3364": {
      "op": "SWAP2"
    },
    "3365": {
      "op": "SWAP1"
    },
    "3366": {
      "op": "SWAP2"
    },
    "3367": {
      "op": "AND"
    },
    "3368": {
      "op": "DUP2"
    },
    "3369": {
      "op": "MSTORE"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3372": {
      "op": "ADD"
    },
    "3373": {
      "op": "SWAP1"
    },
    "3374": {
      "op": "JUMP"
    },
    "3375": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12979,
        13039
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3376": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12979,
        13039
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3378": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12979,
        13039
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3379": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12979,
        13039
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3380": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12979,
        13039
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3381": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12979,
        13039
      ],
      "op": "SUB",
      "path": "15"
    },
    "3382": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12979,
        13039
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3383": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12979,
        13039
      ],
      "op": "LOG2",
      "path": "15"
    },
    "3384": {
      "op": "POP"
    },
    "3385": {
      "op": "POP"
    },
    "3386": {
      "op": "POP"
    },
    "3387": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13060,
        13087
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 21,
      "value": "0x0"
    },
    "3389": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13060,
        13087
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3390": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13060,
        13087
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3391": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13060,
        13087
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3392": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13060,
        13068
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "3394": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13060,
        13087
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3396": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13060,
        13087
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3397": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13060,
        13087
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3399": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13060,
        13087
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3400": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13060,
        13087
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3401": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13053,
        13087
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3402": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13053,
        13087
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3409": {
      "op": "SHL"
    },
    "3410": {
      "op": "SUB"
    },
    "3411": {
      "op": "NOT"
    },
    "3412": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13053,
        13087
      ],
      "op": "AND",
      "path": "15"
    },
    "3413": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13053,
        13087
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3414": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13053,
        13087
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3415": {
      "op": "POP"
    },
    "3416": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11683,
        11686
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 22
    },
    "3417": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11683,
        11686
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD61"
    },
    "3420": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11683,
        11686
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3421": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11683,
        11686
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A5C"
    },
    "3424": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11683,
        11686
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3425": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11683,
        11686
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3426": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11683,
        11686
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3427": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11683,
        11686
      ],
      "op": "POP",
      "path": "15"
    },
    "3428": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11683,
        11686
      ],
      "op": "POP",
      "path": "15"
    },
    "3429": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11643,
        13098
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7CE"
    },
    "3432": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11643,
        13098
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3433": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11643,
        13098
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3434": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11643,
        13098
      ],
      "op": "POP",
      "path": "15"
    },
    "3435": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11571,
        13104
      ],
      "op": "POP",
      "path": "15"
    },
    "3436": {
      "fn": "Registry.handleStopRent",
      "jump": "o",
      "offset": [
        11571,
        13104
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3437": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21619,
        22428
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3438": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21874,
        21892
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD75"
    },
    "3441": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21874,
        21892
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3C5F"
    },
    "3444": {
      "fn": "Registry.createActionCallData",
      "jump": "i",
      "offset": [
        21874,
        21892
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3445": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21874,
        21892
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3446": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 23,
      "value": "0x40"
    },
    "3448": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3449": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3450": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A0"
    },
    "3453": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "ADD",
      "path": "15"
    },
    "3454": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3456": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3457": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3458": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21938,
        21939
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3460": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3461": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3462": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3464": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "ADD",
      "path": "15"
    },
    "3465": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21960,
        21961
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3467": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3468": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3469": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3471": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "ADD",
      "path": "15"
    },
    "3472": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21988,
        21999
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3473": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3474": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3475": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3477": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "ADD",
      "path": "15"
    },
    "3478": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22035
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3479": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3480": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3481": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3483": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "ADD",
      "path": "15"
    },
    "3484": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22058,
        22065
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3485": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3486": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3487": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3489": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "ADD",
      "path": "15"
    },
    "3490": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22105,
        22106
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3498": {
      "op": "SHL"
    },
    "3499": {
      "op": "SUB"
    },
    "3500": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3501": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "GT",
      "path": "15"
    },
    "3502": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3503": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDBA"
    },
    "3506": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3507": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDBA"
    },
    "3510": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AB9"
    },
    "3513": {
      "fn": "Registry.createActionCallData",
      "jump": "i",
      "offset": [
        22091,
        22107
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3514": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3515": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3517": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3518": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3519": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3520": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3521": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3522": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3523": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3525": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "MUL",
      "path": "15"
    },
    "3526": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3528": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "ADD",
      "path": "15"
    },
    "3529": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3530": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "ADD",
      "path": "15"
    },
    "3531": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3533": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3534": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3535": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3536": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDE3"
    },
    "3539": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3540": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3541": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3543": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "ADD",
      "path": "15"
    },
    "3544": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3546": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3547": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "MUL",
      "path": "15"
    },
    "3548": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3549": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3550": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3551": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "3552": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "ADD",
      "path": "15"
    },
    "3553": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3554": {
      "op": "POP"
    },
    "3555": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22091,
        22107
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3556": {
      "op": "POP"
    },
    "3557": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3558": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3559": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3561": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "ADD",
      "path": "15"
    },
    "3562": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22304,
        22305
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3564": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3566": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3567": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3568": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3569": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3570": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3571": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3572": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3574": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "MUL",
      "path": "15"
    },
    "3575": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3577": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "ADD",
      "path": "15"
    },
    "3578": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3579": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "ADD",
      "path": "15"
    },
    "3580": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3582": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3583": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3584": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3585": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE14"
    },
    "3588": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3589": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3590": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3592": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "ADD",
      "path": "15"
    },
    "3593": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3595": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3596": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "MUL",
      "path": "15"
    },
    "3597": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3598": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3599": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3600": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "3601": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "ADD",
      "path": "15"
    },
    "3602": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3603": {
      "op": "POP"
    },
    "3604": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22292,
        22306
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3605": {
      "op": "POP"
    },
    "3606": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3607": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3608": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3610": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "ADD",
      "path": "15"
    },
    "3611": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22349,
        22350
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3613": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3615": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3616": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3617": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3618": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3619": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3620": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3621": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3623": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "MUL",
      "path": "15"
    },
    "3624": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3626": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "ADD",
      "path": "15"
    },
    "3627": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3628": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "ADD",
      "path": "15"
    },
    "3629": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3631": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3632": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3633": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3634": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE45"
    },
    "3637": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3638": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3639": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3641": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "ADD",
      "path": "15"
    },
    "3642": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3644": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3645": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "MUL",
      "path": "15"
    },
    "3646": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3647": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3648": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3649": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "3650": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "ADD",
      "path": "15"
    },
    "3651": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3652": {
      "op": "POP"
    },
    "3653": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22351
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3654": {
      "op": "POP"
    },
    "3655": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3656": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3657": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3659": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3660": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "ADD",
      "path": "15"
    },
    "3661": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3662": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3663": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3664": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3666": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3667": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "ADD",
      "path": "15"
    },
    "3668": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3669": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3670": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3671": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3673": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "ADD",
      "path": "15"
    },
    "3674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3676": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3678": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3679": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3680": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3681": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3682": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3683": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3684": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3686": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "MUL",
      "path": "15"
    },
    "3687": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3689": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "ADD",
      "path": "15"
    },
    "3690": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3691": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "ADD",
      "path": "15"
    },
    "3692": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3694": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3695": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3696": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3697": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE84"
    },
    "3700": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3701": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3702": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3704": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "ADD",
      "path": "15"
    },
    "3705": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3707": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3708": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "MUL",
      "path": "15"
    },
    "3709": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3710": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3711": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3712": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "3713": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "ADD",
      "path": "15"
    },
    "3714": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3715": {
      "op": "POP"
    },
    "3716": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22219
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3717": {
      "op": "POP"
    },
    "3718": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3719": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3720": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3722": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "ADD",
      "path": "15"
    },
    "3723": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22259,
        22260
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3725": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3727": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3728": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3729": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3730": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3731": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3732": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3733": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3735": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "MUL",
      "path": "15"
    },
    "3736": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3738": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "ADD",
      "path": "15"
    },
    "3739": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3740": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "ADD",
      "path": "15"
    },
    "3741": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3743": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3744": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3745": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3746": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEB5"
    },
    "3749": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3750": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3751": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3753": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "ADD",
      "path": "15"
    },
    "3754": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3756": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3757": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "MUL",
      "path": "15"
    },
    "3758": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3759": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3760": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3761": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "3762": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "ADD",
      "path": "15"
    },
    "3763": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3764": {
      "op": "POP"
    },
    "3765": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22245,
        22261
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3766": {
      "op": "POP"
    },
    "3767": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3768": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3769": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3771": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "ADD",
      "path": "15"
    },
    "3772": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22409
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3774": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3776": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3777": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3778": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3779": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3780": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3781": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3782": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3784": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "MUL",
      "path": "15"
    },
    "3785": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3787": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "ADD",
      "path": "15"
    },
    "3788": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3789": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "ADD",
      "path": "15"
    },
    "3790": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3792": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3793": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3794": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3795": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEE6"
    },
    "3798": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3799": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3800": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3802": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "ADD",
      "path": "15"
    },
    "3803": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3805": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3806": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "MUL",
      "path": "15"
    },
    "3807": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3808": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3809": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3810": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "3811": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "ADD",
      "path": "15"
    },
    "3812": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3813": {
      "op": "POP"
    },
    "3814": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22379,
        22410
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3815": {
      "op": "POP"
    },
    "3816": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3817": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21909,
        22421
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3818": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21904,
        22421
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "3819": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21619,
        22428
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "3820": {
      "op": "POP"
    },
    "3821": {
      "op": "POP"
    },
    "3822": {
      "op": "POP"
    },
    "3823": {
      "op": "POP"
    },
    "3824": {
      "op": "POP"
    },
    "3825": {
      "op": "POP"
    },
    "3826": {
      "fn": "Registry.createActionCallData",
      "jump": "o",
      "offset": [
        21619,
        22428
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3827": {
      "fn": "Registry.bundleCall",
      "offset": [
        14465,
        15074
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3828": {
      "fn": "Registry.bundleCall",
      "offset": [
        14631,
        14632
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 24,
      "value": "0x0"
    },
    "3830": {
      "fn": "Registry.bundleCall",
      "offset": [
        14608,
        14610
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3831": {
      "fn": "Registry.bundleCall",
      "offset": [
        14608,
        14621
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3833": {
      "fn": "Registry.bundleCall",
      "offset": [
        14608,
        14621
      ],
      "op": "ADD",
      "path": "15"
    },
    "3834": {
      "fn": "Registry.bundleCall",
      "offset": [
        14608,
        14621
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3835": {
      "fn": "Registry.bundleCall",
      "offset": [
        14608,
        14628
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3836": {
      "branch": 133,
      "fn": "Registry.bundleCall",
      "offset": [
        14608,
        14632
      ],
      "op": "GT",
      "path": "15"
    },
    "3837": {
      "fn": "Registry.bundleCall",
      "offset": [
        14600,
        14651
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF39"
    },
    "3840": {
      "branch": 133,
      "fn": "Registry.bundleCall",
      "offset": [
        14600,
        14651
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3841": {
      "fn": "Registry.bundleCall",
      "offset": [
        14600,
        14651
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3843": {
      "fn": "Registry.bundleCall",
      "offset": [
        14600,
        14651
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3844": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3848": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3850": {
      "op": "SHL"
    },
    "3851": {
      "fn": "Registry.bundleCall",
      "offset": [
        14600,
        14651
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3852": {
      "fn": "Registry.bundleCall",
      "offset": [
        14600,
        14651
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3855": {
      "fn": "Registry.bundleCall",
      "offset": [
        14600,
        14651
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3857": {
      "fn": "Registry.bundleCall",
      "offset": [
        14600,
        14651
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3858": {
      "fn": "Registry.bundleCall",
      "offset": [
        14600,
        14651
      ],
      "op": "ADD",
      "path": "15"
    },
    "3859": {
      "op": "MSTORE"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "3862": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3864": {
      "op": "DUP3"
    },
    "3865": {
      "op": "ADD"
    },
    "3866": {
      "op": "MSTORE"
    },
    "3867": {
      "op": "PUSH14",
      "value": "0x52654E46543A3A6E6F206E667473"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3884": {
      "op": "SHL"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3887": {
      "op": "DUP3"
    },
    "3888": {
      "op": "ADD"
    },
    "3889": {
      "op": "MSTORE"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3892": {
      "op": "ADD"
    },
    "3893": {
      "fn": "Registry.bundleCall",
      "offset": [
        14600,
        14651
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "3896": {
      "op": "JUMP"
    },
    "3897": {
      "fn": "Registry.bundleCall",
      "offset": [
        14600,
        14651
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3898": {
      "fn": "Registry.bundleCall",
      "offset": [
        14680,
        14682
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3899": {
      "fn": "Registry.bundleCall",
      "offset": [
        14680,
        14693
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3901": {
      "fn": "Registry.bundleCall",
      "offset": [
        14680,
        14693
      ],
      "op": "ADD",
      "path": "15"
    },
    "3902": {
      "fn": "Registry.bundleCall",
      "offset": [
        14680,
        14693
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3903": {
      "fn": "Registry.bundleCall",
      "offset": [
        14680,
        14700
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3904": {
      "fn": "Registry.bundleCall",
      "offset": [
        14668,
        14670
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3905": {
      "fn": "Registry.bundleCall",
      "offset": [
        14668,
        14676
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3907": {
      "fn": "Registry.bundleCall",
      "offset": [
        14668,
        14676
      ],
      "op": "ADD",
      "path": "15"
    },
    "3908": {
      "fn": "Registry.bundleCall",
      "offset": [
        14668,
        14676
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3909": {
      "fn": "Registry.bundleCall",
      "offset": [
        14668,
        14700
      ],
      "op": "EQ",
      "path": "15"
    },
    "3910": {
      "fn": "Registry.bundleCall",
      "offset": [
        14661,
        15047
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x101B"
    },
    "3913": {
      "fn": "Registry.bundleCall",
      "offset": [
        14661,
        15047
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3914": {
      "fn": "Registry.bundleCall",
      "offset": [
        14764,
        14766
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3915": {
      "fn": "Registry.bundleCall",
      "offset": [
        14764,
        14777
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3917": {
      "fn": "Registry.bundleCall",
      "offset": [
        14764,
        14777
      ],
      "op": "ADD",
      "path": "15"
    },
    "3918": {
      "fn": "Registry.bundleCall",
      "offset": [
        14764,
        14777
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3919": {
      "fn": "Registry.bundleCall",
      "offset": [
        14778,
        14780
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3920": {
      "fn": "Registry.bundleCall",
      "offset": [
        14778,
        14786
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3922": {
      "fn": "Registry.bundleCall",
      "offset": [
        14778,
        14786
      ],
      "op": "ADD",
      "path": "15"
    },
    "3923": {
      "fn": "Registry.bundleCall",
      "offset": [
        14778,
        14786
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3924": {
      "fn": "Registry.bundleCall",
      "offset": [
        14764,
        14787
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3925": {
      "fn": "Registry.bundleCall",
      "offset": [
        14764,
        14787
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3926": {
      "fn": "Registry.bundleCall",
      "offset": [
        14764,
        14787
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3927": {
      "fn": "Registry.bundleCall",
      "offset": [
        14764,
        14787
      ],
      "op": "LT",
      "path": "15"
    },
    "3928": {
      "fn": "Registry.bundleCall",
      "offset": [
        14764,
        14787
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF63"
    },
    "3931": {
      "fn": "Registry.bundleCall",
      "offset": [
        14764,
        14787
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3932": {
      "fn": "Registry.bundleCall",
      "offset": [
        14764,
        14787
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF63"
    },
    "3935": {
      "fn": "Registry.bundleCall",
      "offset": [
        14764,
        14787
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "3938": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        14764,
        14787
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3939": {
      "fn": "Registry.bundleCall",
      "offset": [
        14764,
        14787
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3940": {
      "fn": "Registry.bundleCall",
      "offset": [
        14764,
        14787
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3942": {
      "fn": "Registry.bundleCall",
      "offset": [
        14764,
        14787
      ],
      "op": "MUL",
      "path": "15"
    },
    "3943": {
      "fn": "Registry.bundleCall",
      "offset": [
        14764,
        14787
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3945": {
      "fn": "Registry.bundleCall",
      "offset": [
        14764,
        14787
      ],
      "op": "ADD",
      "path": "15"
    },
    "3946": {
      "fn": "Registry.bundleCall",
      "offset": [
        14764,
        14787
      ],
      "op": "ADD",
      "path": "15"
    },
    "3947": {
      "fn": "Registry.bundleCall",
      "offset": [
        14764,
        14787
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3954": {
      "op": "SHL"
    },
    "3955": {
      "op": "SUB"
    },
    "3956": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14787
      ],
      "op": "AND",
      "path": "15"
    },
    "3957": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14740
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3958": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14751
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3960": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14751
      ],
      "op": "ADD",
      "path": "15"
    },
    "3961": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14751
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3962": {
      "fn": "Registry.bundleCall",
      "offset": [
        14752,
        14754
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3963": {
      "fn": "Registry.bundleCall",
      "offset": [
        14752,
        14759
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3965": {
      "fn": "Registry.bundleCall",
      "offset": [
        14752,
        14759
      ],
      "op": "ADD",
      "path": "15"
    },
    "3966": {
      "fn": "Registry.bundleCall",
      "offset": [
        14752,
        14759
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3967": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14760
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3968": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14760
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3969": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14760
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3970": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14760
      ],
      "op": "LT",
      "path": "15"
    },
    "3971": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14760
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF8E"
    },
    "3974": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14760
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3975": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14760
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF8E"
    },
    "3978": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14760
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "3981": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        14738,
        14760
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3982": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14760
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3983": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14760
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3985": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14760
      ],
      "op": "MUL",
      "path": "15"
    },
    "3986": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14760
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3988": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14760
      ],
      "op": "ADD",
      "path": "15"
    },
    "3989": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14760
      ],
      "op": "ADD",
      "path": "15"
    },
    "3990": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14760
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3997": {
      "op": "SHL"
    },
    "3998": {
      "op": "SUB"
    },
    "3999": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14787
      ],
      "op": "AND",
      "path": "15"
    },
    "4000": {
      "fn": "Registry.bundleCall",
      "offset": [
        14738,
        14787
      ],
      "op": "EQ",
      "path": "15"
    },
    "4001": {
      "fn": "Registry.bundleCall",
      "offset": [
        14737,
        14865
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4002": {
      "fn": "Registry.bundleCall",
      "offset": [
        14737,
        14865
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4003": {
      "fn": "Registry.bundleCall",
      "offset": [
        14737,
        14865
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFDE"
    },
    "4006": {
      "fn": "Registry.bundleCall",
      "offset": [
        14737,
        14865
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4007": {
      "op": "POP"
    },
    "4008": {
      "fn": "Registry.bundleCall",
      "offset": [
        14837,
        14864
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4010": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14811
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4011": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14823
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4013": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14823
      ],
      "op": "ADD",
      "path": "15"
    },
    "4014": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14823
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4015": {
      "fn": "Registry.bundleCall",
      "offset": [
        14824,
        14826
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4016": {
      "fn": "Registry.bundleCall",
      "offset": [
        14824,
        14832
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4018": {
      "fn": "Registry.bundleCall",
      "offset": [
        14824,
        14832
      ],
      "op": "ADD",
      "path": "15"
    },
    "4019": {
      "fn": "Registry.bundleCall",
      "offset": [
        14824,
        14832
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4020": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14833
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4021": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14833
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4022": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14833
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4023": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14833
      ],
      "op": "LT",
      "path": "15"
    },
    "4024": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14833
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFC3"
    },
    "4027": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14833
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4028": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14833
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFC3"
    },
    "4031": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14833
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "4034": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        14809,
        14833
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4035": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14833
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4036": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14833
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4038": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14833
      ],
      "op": "MUL",
      "path": "15"
    },
    "4039": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14833
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4041": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14833
      ],
      "op": "ADD",
      "path": "15"
    },
    "4042": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14833
      ],
      "op": "ADD",
      "path": "15"
    },
    "4043": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14833
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4044": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14864
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4046": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14864
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4047": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14864
      ],
      "op": "GT",
      "path": "15"
    },
    "4048": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14864
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4049": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14864
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFDC"
    },
    "4052": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14864
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4053": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14864
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFDC"
    },
    "4056": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14864
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "4059": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        14809,
        14864
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4060": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14864
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4061": {
      "fn": "Registry.bundleCall",
      "offset": [
        14809,
        14864
      ],
      "op": "EQ",
      "path": "15"
    },
    "4062": {
      "fn": "Registry.bundleCall",
      "offset": [
        14737,
        14865
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4063": {
      "fn": "Registry.bundleCall",
      "offset": [
        14716,
        15037
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4064": {
      "fn": "Registry.bundleCall",
      "offset": [
        14716,
        15037
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFB"
    },
    "4067": {
      "fn": "Registry.bundleCall",
      "offset": [
        14716,
        15037
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4068": {
      "fn": "Registry.bundleCall",
      "offset": [
        14898,
        14906
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 25,
      "value": "0x20"
    },
    "4070": {
      "fn": "Registry.bundleCall",
      "offset": [
        14898,
        14906
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4071": {
      "fn": "Registry.bundleCall",
      "offset": [
        14898,
        14906
      ],
      "op": "ADD",
      "path": "15"
    },
    "4072": {
      "fn": "Registry.bundleCall",
      "offset": [
        14898,
        14908
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4073": {
      "fn": "Registry.bundleCall",
      "offset": [
        14898,
        14908
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4074": {
      "fn": "Registry.bundleCall",
      "offset": [
        14898,
        14908
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4075": {
      "fn": "Registry.bundleCall",
      "offset": [
        14898,
        14908
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFF3"
    },
    "4078": {
      "fn": "Registry.bundleCall",
      "offset": [
        14898,
        14908
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4079": {
      "fn": "Registry.bundleCall",
      "offset": [
        14898,
        14908
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A5C"
    },
    "4082": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        14898,
        14908
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4083": {
      "fn": "Registry.bundleCall",
      "offset": [
        14898,
        14908
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4084": {
      "fn": "Registry.bundleCall",
      "offset": [
        14898,
        14908
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4085": {
      "fn": "Registry.bundleCall",
      "offset": [
        14898,
        14908
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4086": {
      "op": "POP"
    },
    "4087": {
      "fn": "Registry.bundleCall",
      "offset": [
        14661,
        15047
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF39"
    },
    "4090": {
      "fn": "Registry.bundleCall",
      "offset": [
        14661,
        15047
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4091": {
      "fn": "Registry.bundleCall",
      "offset": [
        14716,
        15037
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4092": {
      "fn": "Registry.bundleCall",
      "offset": [
        14947,
        14958
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 26,
      "value": "0x1008"
    },
    "4095": {
      "fn": "Registry.bundleCall",
      "offset": [
        14955,
        14957
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4096": {
      "fn": "Registry.bundleCall",
      "offset": [
        14947,
        14954
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4097": {
      "fn": "Registry.bundleCall",
      "offset": [
        14947,
        14958
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "4102": {
      "fn": "Registry.bundleCall",
      "offset": [
        14947,
        14958
      ],
      "op": "AND",
      "path": "15"
    },
    "4103": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        14947,
        14958
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4104": {
      "fn": "Registry.bundleCall",
      "offset": [
        14947,
        14958
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4105": {
      "fn": "Registry.bundleCall",
      "offset": [
        14986,
        14994
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 27,
      "value": "0x20"
    },
    "4107": {
      "fn": "Registry.bundleCall",
      "offset": [
        14986,
        14994
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4108": {
      "fn": "Registry.bundleCall",
      "offset": [
        14986,
        14994
      ],
      "op": "ADD",
      "path": "15"
    },
    "4109": {
      "fn": "Registry.bundleCall",
      "offset": [
        14986,
        14994
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4110": {
      "fn": "Registry.bundleCall",
      "offset": [
        14986,
        14994
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4111": {
      "fn": "Registry.bundleCall",
      "offset": [
        14976,
        14994
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4112": {
      "fn": "Registry.bundleCall",
      "offset": [
        14976,
        14994
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4113": {
      "fn": "Registry.bundleCall",
      "offset": [
        14976,
        14994
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4114": {
      "fn": "Registry.bundleCall",
      "offset": [
        14986,
        14994
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4115": {
      "fn": "Registry.bundleCall",
      "offset": [
        15012,
        15022
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 28,
      "value": "0xFF3"
    },
    "4118": {
      "fn": "Registry.bundleCall",
      "offset": [
        14986,
        14994
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4119": {
      "fn": "Registry.bundleCall",
      "offset": [
        15012,
        15022
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A5C"
    },
    "4122": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        15012,
        15022
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4123": {
      "fn": "Registry.bundleCall",
      "offset": [
        14661,
        15047
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4124": {
      "fn": "Registry.bundleCall",
      "offset": [
        15056,
        15067
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 29,
      "value": "0xD69"
    },
    "4127": {
      "fn": "Registry.bundleCall",
      "offset": [
        15064,
        15066
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4128": {
      "fn": "Registry.bundleCall",
      "offset": [
        15056,
        15063
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4129": {
      "fn": "Registry.bundleCall",
      "offset": [
        15056,
        15067
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "4134": {
      "fn": "Registry.bundleCall",
      "offset": [
        15056,
        15067
      ],
      "op": "AND",
      "path": "15"
    },
    "4135": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        15056,
        15067
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4136": {
      "fn": "Registry.handleLend",
      "offset": [
        6068,
        7766
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4137": {
      "fn": "Registry.handleLend",
      "offset": [
        6153,
        6160
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4138": {
      "fn": "Registry.handleLend",
      "offset": [
        6153,
        6160
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4139": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7546
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4140": {
      "fn": "Registry.handleLend",
      "offset": [
        6166,
        6168
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4141": {
      "fn": "Registry.handleLend",
      "offset": [
        6166,
        6174
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4143": {
      "fn": "Registry.handleLend",
      "offset": [
        6166,
        6174
      ],
      "op": "ADD",
      "path": "15"
    },
    "4144": {
      "fn": "Registry.handleLend",
      "offset": [
        6166,
        6174
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4145": {
      "fn": "Registry.handleLend",
      "offset": [
        6162,
        6163
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4146": {
      "fn": "Registry.handleLend",
      "offset": [
        6162,
        6174
      ],
      "op": "LT",
      "path": "15"
    },
    "4147": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7546
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4148": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7546
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x158A"
    },
    "4151": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7546
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4152": {
      "fn": "Registry.handleLend",
      "offset": [
        6195,
        6218
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 30,
      "value": "0x1041"
    },
    "4155": {
      "fn": "Registry.handleLend",
      "offset": [
        6212,
        6214
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4156": {
      "fn": "Registry.handleLend",
      "offset": [
        6216,
        6217
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4157": {
      "fn": "Registry.handleLend",
      "offset": [
        6195,
        6211
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BC1"
    },
    "4160": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6195,
        6218
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4161": {
      "fn": "Registry.handleLend",
      "offset": [
        6195,
        6218
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4162": {
      "fn": "Registry.handleLend",
      "offset": [
        6232,
        6250
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4164": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6320
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4165": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6331
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4167": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6331
      ],
      "op": "ADD",
      "path": "15"
    },
    "4168": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6331
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4169": {
      "fn": "Registry.handleLend",
      "offset": [
        6332,
        6334
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4170": {
      "fn": "Registry.handleLend",
      "offset": [
        6332,
        6339
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4172": {
      "fn": "Registry.handleLend",
      "offset": [
        6332,
        6339
      ],
      "op": "ADD",
      "path": "15"
    },
    "4173": {
      "fn": "Registry.handleLend",
      "offset": [
        6332,
        6339
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4174": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4175": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4176": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4177": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "LT",
      "path": "15"
    },
    "4178": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x105D"
    },
    "4181": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4182": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x105D"
    },
    "4185": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "4188": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6318,
        6340
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4189": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4190": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4192": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "MUL",
      "path": "15"
    },
    "4193": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4195": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "ADD",
      "path": "15"
    },
    "4196": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "ADD",
      "path": "15"
    },
    "4197": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4198": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6364
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4199": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6372
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "4201": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6372
      ],
      "op": "ADD",
      "path": "15"
    },
    "4202": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6372
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4203": {
      "fn": "Registry.handleLend",
      "offset": [
        6373,
        6374
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4204": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4205": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4206": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4207": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "LT",
      "path": "15"
    },
    "4208": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x107B"
    },
    "4211": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4212": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x107B"
    },
    "4215": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "4218": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6362,
        6375
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4219": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4220": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4222": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "MUL",
      "path": "15"
    },
    "4223": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4225": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "ADD",
      "path": "15"
    },
    "4226": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "ADD",
      "path": "15"
    },
    "4227": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4228": {
      "fn": "Registry.handleLend",
      "offset": [
        6397,
        6406
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "4230": {
      "fn": "Registry.handleLend",
      "offset": [
        6397,
        6406
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4231": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4233": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4234": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4236": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "ADD",
      "path": "15"
    },
    "4237": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1098"
    },
    "4240": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "4241": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4242": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4243": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4244": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x460D"
    },
    "4247": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6280,
        6424
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4248": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4249": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4251": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4252": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4255": {
      "op": "NOT"
    },
    "4256": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4257": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4258": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "SUB",
      "path": "15"
    },
    "4259": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "ADD",
      "path": "15"
    },
    "4260": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4261": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4262": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4263": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4264": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4265": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4266": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4267": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4269": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4270": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4271": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "ADD",
      "path": "15"
    },
    "4272": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4273": {
      "fn": "Registry.handleLend",
      "offset": [
        6452,
        6485
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4275": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4276": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4277": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4278": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6496
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "4280": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4281": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4282": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4283": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4284": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4285": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4286": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4287": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 31,
      "value": "0xE0"
    },
    "4289": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4290": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "15"
    },
    "4291": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4292": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4293": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4294": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4295": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4296": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4297": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "4298": {
      "op": "POP"
    },
    "4299": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4300": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4301": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1190"
    },
    "4304": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4305": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4306": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4307": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4308": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4309": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4311": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "15"
    },
    "4312": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4314": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4315": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "GT",
      "path": "15"
    },
    "4316": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4317": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10E8"
    },
    "4320": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4321": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10E8"
    },
    "4324": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "4327": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4328": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4329": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4331": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4332": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "GT",
      "path": "15"
    },
    "4333": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4334": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10F9"
    },
    "4337": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4338": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10F9"
    },
    "4341": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "4344": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4345": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4346": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4347": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4348": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4349": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4356": {
      "op": "SHL"
    },
    "4357": {
      "op": "SUB"
    },
    "4358": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "4361": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4362": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DIV",
      "path": "15"
    },
    "4363": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "15"
    },
    "4364": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4366": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4367": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "15"
    },
    "4368": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4369": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4373": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4375": {
      "op": "SHL"
    },
    "4376": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4377": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DIV",
      "path": "15"
    },
    "4378": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4379": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "15"
    },
    "4380": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4382": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4383": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "15"
    },
    "4384": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4391": {
      "op": "SHL"
    },
    "4392": {
      "op": "SUB"
    },
    "4393": {
      "op": "NOT"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4398": {
      "op": "SHL"
    },
    "4399": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4400": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DIV",
      "path": "15"
    },
    "4401": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "4403": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SHL",
      "path": "15"
    },
    "4404": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "15"
    },
    "4405": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4407": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4408": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "15"
    },
    "4409": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4410": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4415": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4417": {
      "op": "SHL"
    },
    "4418": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4419": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DIV",
      "path": "15"
    },
    "4420": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4421": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "15"
    },
    "4422": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "4424": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4425": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "15"
    },
    "4426": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4431": {
      "op": "SHL"
    },
    "4432": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4433": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DIV",
      "path": "15"
    },
    "4434": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "15"
    },
    "4435": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "4437": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4438": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "15"
    },
    "4439": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4440": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "4442": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4443": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4444": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "15"
    },
    "4445": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4448": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4450": {
      "op": "SHL"
    },
    "4451": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4452": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4453": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DIV",
      "path": "15"
    },
    "4454": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "15"
    },
    "4455": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "4457": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4458": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "GT",
      "path": "15"
    },
    "4459": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4460": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1177"
    },
    "4463": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4464": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1177"
    },
    "4467": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "4470": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4471": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4472": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "4474": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4475": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "GT",
      "path": "15"
    },
    "4476": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4477": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1188"
    },
    "4480": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4481": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1188"
    },
    "4484": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "4487": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4488": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4489": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4490": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4491": {
      "op": "POP"
    },
    "4492": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6534
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D7F"
    },
    "4495": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4496": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4497": {
      "fn": "Registry.handleLend",
      "offset": [
        6557,
        6606
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 32,
      "value": "0x11C8"
    },
    "4500": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6588
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4501": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6601
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x180"
    },
    "4504": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6601
      ],
      "op": "ADD",
      "path": "15"
    },
    "4505": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6601
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4506": {
      "fn": "Registry.handleLend",
      "offset": [
        6602,
        6603
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4507": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4508": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4509": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4510": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "LT",
      "path": "15"
    },
    "4511": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11AA"
    },
    "4514": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4515": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11AA"
    },
    "4518": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "4521": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6586,
        6604
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4522": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4523": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4525": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "MUL",
      "path": "15"
    },
    "4526": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4528": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "ADD",
      "path": "15"
    },
    "4529": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "ADD",
      "path": "15"
    },
    "4530": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4531": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "4533": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4534": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "GT",
      "path": "15"
    },
    "4535": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4536": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11C3"
    },
    "4539": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4540": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11C3"
    },
    "4543": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "4546": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6580,
        6605
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4547": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4548": {
      "fn": "Registry.handleLend",
      "offset": [
        6557,
        6579
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E38"
    },
    "4551": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6557,
        6606
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4552": {
      "fn": "Registry.handleLend",
      "offset": [
        6557,
        6606
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4553": {
      "fn": "Registry.handleLend",
      "offset": [
        6620,
        6630
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4555": {
      "fn": "Registry.handleLend",
      "offset": [
        6620,
        6630
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4556": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6635
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4557": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6647
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4559": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6647
      ],
      "op": "ADD",
      "path": "15"
    },
    "4560": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6647
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4561": {
      "fn": "Registry.handleLend",
      "offset": [
        6648,
        6649
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4562": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4563": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4564": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4565": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "LT",
      "path": "15"
    },
    "4566": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11E1"
    },
    "4569": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4570": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11E1"
    },
    "4573": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "4576": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6633,
        6650
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4577": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4578": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4580": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "MUL",
      "path": "15"
    },
    "4581": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4583": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "ADD",
      "path": "15"
    },
    "4584": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "ADD",
      "path": "15"
    },
    "4585": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4586": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4588": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4589": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "GT",
      "path": "15"
    },
    "4590": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4591": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11FA"
    },
    "4594": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4595": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11FA"
    },
    "4598": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "4601": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6633,
        6680
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4602": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4603": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "EQ",
      "path": "15"
    },
    "4604": {
      "fn": "Registry.handleLend",
      "offset": [
        6620,
        6680
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4605": {
      "fn": "Registry.handleLend",
      "offset": [
        6620,
        6680
      ],
      "op": "POP",
      "path": "15"
    },
    "4606": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 33,
      "value": "0x40"
    },
    "4608": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4609": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4610": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "4612": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "ADD",
      "path": "15"
    },
    "4613": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4615": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4616": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4617": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6768
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4618": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6780
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4620": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6780
      ],
      "op": "ADD",
      "path": "15"
    },
    "4621": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6780
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4622": {
      "fn": "Registry.handleLend",
      "offset": [
        6781,
        6782
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4623": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4624": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4625": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4626": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "LT",
      "path": "15"
    },
    "4627": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x121E"
    },
    "4630": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4631": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x121E"
    },
    "4634": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "4637": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6766,
        6783
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4638": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4639": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4641": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "MUL",
      "path": "15"
    },
    "4642": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4644": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "ADD",
      "path": "15"
    },
    "4645": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "ADD",
      "path": "15"
    },
    "4646": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4647": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4649": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4650": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "GT",
      "path": "15"
    },
    "4651": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4652": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1237"
    },
    "4655": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4656": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1237"
    },
    "4659": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "4662": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6717,
        7147
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4663": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4664": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4665": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4666": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4668": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "ADD",
      "path": "15"
    },
    "4669": {
      "fn": "Registry.handleLend",
      "offset": [
        6824,
        6834
      ],
      "op": "CALLER",
      "path": "15"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4676": {
      "op": "SHL"
    },
    "4677": {
      "op": "SUB"
    },
    "4678": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "AND",
      "path": "15"
    },
    "4679": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4680": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4681": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4683": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "ADD",
      "path": "15"
    },
    "4684": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6872
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4685": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6888
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "4687": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6888
      ],
      "op": "ADD",
      "path": "15"
    },
    "4688": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6888
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4689": {
      "fn": "Registry.handleLend",
      "offset": [
        6889,
        6890
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4690": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4691": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4692": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4693": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "LT",
      "path": "15"
    },
    "4694": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1261"
    },
    "4697": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4698": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1261"
    },
    "4701": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "4704": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6870,
        6891
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4705": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4706": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4708": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "MUL",
      "path": "15"
    },
    "4709": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4711": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "ADD",
      "path": "15"
    },
    "4712": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "ADD",
      "path": "15"
    },
    "4713": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4714": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4716": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "AND",
      "path": "15"
    },
    "4717": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4718": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4719": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4721": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "ADD",
      "path": "15"
    },
    "4722": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6927
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4723": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "4725": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6942
      ],
      "op": "ADD",
      "path": "15"
    },
    "4726": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6942
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4727": {
      "fn": "Registry.handleLend",
      "offset": [
        6943,
        6944
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4728": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4729": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4730": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4731": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "LT",
      "path": "15"
    },
    "4732": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1287"
    },
    "4735": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4736": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1287"
    },
    "4739": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "4742": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6925,
        6945
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4743": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4744": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4746": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "MUL",
      "path": "15"
    },
    "4747": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4749": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "ADD",
      "path": "15"
    },
    "4750": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "ADD",
      "path": "15"
    },
    "4751": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4756": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4758": {
      "op": "SHL"
    },
    "4759": {
      "op": "SUB"
    },
    "4760": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "NOT",
      "path": "15"
    },
    "4761": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "AND",
      "path": "15"
    },
    "4762": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4763": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4764": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4766": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "ADD",
      "path": "15"
    },
    "4767": {
      "branch": 134,
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        6980
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4768": {
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        7011
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12C6"
    },
    "4771": {
      "branch": 134,
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        7011
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4772": {
      "fn": "Registry.handleLend",
      "offset": [
        6994,
        6996
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4773": {
      "fn": "Registry.handleLend",
      "offset": [
        6994,
        7007
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "4775": {
      "fn": "Registry.handleLend",
      "offset": [
        6994,
        7007
      ],
      "op": "ADD",
      "path": "15"
    },
    "4776": {
      "fn": "Registry.handleLend",
      "offset": [
        6994,
        7007
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4777": {
      "fn": "Registry.handleLend",
      "offset": [
        7008,
        7009
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4778": {
      "fn": "Registry.handleLend",
      "offset": [
        6994,
        7010
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4779": {
      "fn": "Registry.handleLend",
      "offset": [
        6994,
        7010
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4780": {
      "fn": "Registry.handleLend",
      "offset": [
        6994,
        7010
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4781": {
      "fn": "Registry.handleLend",
      "offset": [
        6994,
        7010
      ],
      "op": "LT",
      "path": "15"
    },
    "4782": {
      "fn": "Registry.handleLend",
      "offset": [
        6994,
        7010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12B9"
    },
    "4785": {
      "fn": "Registry.handleLend",
      "offset": [
        6994,
        7010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4786": {
      "fn": "Registry.handleLend",
      "offset": [
        6994,
        7010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12B9"
    },
    "4789": {
      "fn": "Registry.handleLend",
      "offset": [
        6994,
        7010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "4792": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6994,
        7010
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4793": {
      "fn": "Registry.handleLend",
      "offset": [
        6994,
        7010
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4794": {
      "fn": "Registry.handleLend",
      "offset": [
        6994,
        7010
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4796": {
      "fn": "Registry.handleLend",
      "offset": [
        6994,
        7010
      ],
      "op": "MUL",
      "path": "15"
    },
    "4797": {
      "fn": "Registry.handleLend",
      "offset": [
        6994,
        7010
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4799": {
      "fn": "Registry.handleLend",
      "offset": [
        6994,
        7010
      ],
      "op": "ADD",
      "path": "15"
    },
    "4800": {
      "fn": "Registry.handleLend",
      "offset": [
        6994,
        7010
      ],
      "op": "ADD",
      "path": "15"
    },
    "4801": {
      "fn": "Registry.handleLend",
      "offset": [
        6994,
        7010
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4802": {
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        7011
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12C9"
    },
    "4805": {
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        7011
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4806": {
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        7011
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4807": {
      "fn": "Registry.handleLend",
      "offset": [
        6983,
        6984
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4809": {
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        7011
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4810": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "4813": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "AND",
      "path": "15"
    },
    "4814": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4815": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4816": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4818": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "ADD",
      "path": "15"
    },
    "4819": {
      "branch": 135,
      "fn": "Registry.handleLend",
      "offset": [
        7046,
        7051
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4820": {
      "fn": "Registry.handleLend",
      "offset": [
        7046,
        7082
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12FA"
    },
    "4823": {
      "branch": 135,
      "fn": "Registry.handleLend",
      "offset": [
        7046,
        7082
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4824": {
      "fn": "Registry.handleLend",
      "offset": [
        7065,
        7067
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4825": {
      "fn": "Registry.handleLend",
      "offset": [
        7065,
        7078
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "4827": {
      "fn": "Registry.handleLend",
      "offset": [
        7065,
        7078
      ],
      "op": "ADD",
      "path": "15"
    },
    "4828": {
      "fn": "Registry.handleLend",
      "offset": [
        7065,
        7078
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4829": {
      "fn": "Registry.handleLend",
      "offset": [
        7079,
        7080
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4830": {
      "fn": "Registry.handleLend",
      "offset": [
        7065,
        7081
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4831": {
      "fn": "Registry.handleLend",
      "offset": [
        7065,
        7081
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4832": {
      "fn": "Registry.handleLend",
      "offset": [
        7065,
        7081
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4833": {
      "fn": "Registry.handleLend",
      "offset": [
        7065,
        7081
      ],
      "op": "LT",
      "path": "15"
    },
    "4834": {
      "fn": "Registry.handleLend",
      "offset": [
        7065,
        7081
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12ED"
    },
    "4837": {
      "fn": "Registry.handleLend",
      "offset": [
        7065,
        7081
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4838": {
      "fn": "Registry.handleLend",
      "offset": [
        7065,
        7081
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12ED"
    },
    "4841": {
      "fn": "Registry.handleLend",
      "offset": [
        7065,
        7081
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "4844": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7065,
        7081
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4845": {
      "fn": "Registry.handleLend",
      "offset": [
        7065,
        7081
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4846": {
      "fn": "Registry.handleLend",
      "offset": [
        7065,
        7081
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4848": {
      "fn": "Registry.handleLend",
      "offset": [
        7065,
        7081
      ],
      "op": "MUL",
      "path": "15"
    },
    "4849": {
      "fn": "Registry.handleLend",
      "offset": [
        7065,
        7081
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4851": {
      "fn": "Registry.handleLend",
      "offset": [
        7065,
        7081
      ],
      "op": "ADD",
      "path": "15"
    },
    "4852": {
      "fn": "Registry.handleLend",
      "offset": [
        7065,
        7081
      ],
      "op": "ADD",
      "path": "15"
    },
    "4853": {
      "fn": "Registry.handleLend",
      "offset": [
        7065,
        7081
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4854": {
      "fn": "Registry.handleLend",
      "offset": [
        7046,
        7082
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12FD"
    },
    "4857": {
      "fn": "Registry.handleLend",
      "offset": [
        7046,
        7082
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4858": {
      "fn": "Registry.handleLend",
      "offset": [
        7046,
        7082
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4859": {
      "fn": "Registry.handleLend",
      "offset": [
        7054,
        7055
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4861": {
      "fn": "Registry.handleLend",
      "offset": [
        7046,
        7082
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4862": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "4865": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "AND",
      "path": "15"
    },
    "4866": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4867": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4868": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4870": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "ADD",
      "path": "15"
    },
    "4871": {
      "fn": "Registry.handleLend",
      "offset": [
        7114,
        7116
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4872": {
      "fn": "Registry.handleLend",
      "offset": [
        7114,
        7129
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x180"
    },
    "4875": {
      "fn": "Registry.handleLend",
      "offset": [
        7114,
        7129
      ],
      "op": "ADD",
      "path": "15"
    },
    "4876": {
      "fn": "Registry.handleLend",
      "offset": [
        7114,
        7129
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4877": {
      "fn": "Registry.handleLend",
      "offset": [
        7130,
        7131
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4878": {
      "fn": "Registry.handleLend",
      "offset": [
        7114,
        7132
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4879": {
      "fn": "Registry.handleLend",
      "offset": [
        7114,
        7132
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4880": {
      "fn": "Registry.handleLend",
      "offset": [
        7114,
        7132
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4881": {
      "fn": "Registry.handleLend",
      "offset": [
        7114,
        7132
      ],
      "op": "LT",
      "path": "15"
    },
    "4882": {
      "fn": "Registry.handleLend",
      "offset": [
        7114,
        7132
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x131D"
    },
    "4885": {
      "fn": "Registry.handleLend",
      "offset": [
        7114,
        7132
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4886": {
      "fn": "Registry.handleLend",
      "offset": [
        7114,
        7132
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x131D"
    },
    "4889": {
      "fn": "Registry.handleLend",
      "offset": [
        7114,
        7132
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "4892": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7114,
        7132
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4893": {
      "fn": "Registry.handleLend",
      "offset": [
        7114,
        7132
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4894": {
      "fn": "Registry.handleLend",
      "offset": [
        7114,
        7132
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4896": {
      "fn": "Registry.handleLend",
      "offset": [
        7114,
        7132
      ],
      "op": "MUL",
      "path": "15"
    },
    "4897": {
      "fn": "Registry.handleLend",
      "offset": [
        7114,
        7132
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4899": {
      "fn": "Registry.handleLend",
      "offset": [
        7114,
        7132
      ],
      "op": "ADD",
      "path": "15"
    },
    "4900": {
      "fn": "Registry.handleLend",
      "offset": [
        7114,
        7132
      ],
      "op": "ADD",
      "path": "15"
    },
    "4901": {
      "fn": "Registry.handleLend",
      "offset": [
        7114,
        7132
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4902": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "4904": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4905": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "GT",
      "path": "15"
    },
    "4906": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4907": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1336"
    },
    "4910": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4911": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1336"
    },
    "4914": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "4917": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6717,
        7147
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4918": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4919": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4920": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7147
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4921": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4923": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4924": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4925": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4926": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6702
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "4928": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4930": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4931": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4933": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4934": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4935": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4936": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4937": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4938": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4939": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4940": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4943": {
      "op": "NOT"
    },
    "4944": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "AND",
      "path": "15"
    },
    "4945": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4947": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4948": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4949": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4950": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "GT",
      "path": "15"
    },
    "4951": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4952": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1363"
    },
    "4955": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4956": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1363"
    },
    "4959": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "4962": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6694,
        7147
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4963": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4964": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "MUL",
      "path": "15"
    },
    "4965": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "OR",
      "path": "15"
    },
    "4966": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4967": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4968": {
      "op": "POP"
    },
    "4969": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4971": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4972": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "ADD",
      "path": "15"
    },
    "4973": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4974": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4975": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4976": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4978": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4979": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "ADD",
      "path": "15"
    },
    "4980": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4981": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4983": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4984": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "ADD",
      "path": "15"
    },
    "4985": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4986": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "4988": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4989": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "ADD",
      "path": "15"
    },
    "4990": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4991": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "4993": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4994": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "ADD",
      "path": "15"
    },
    "4995": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4996": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5001": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "5003": {
      "op": "SHL"
    },
    "5004": {
      "op": "SUB"
    },
    "5005": {
      "op": "NOT"
    },
    "5006": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5007": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "5008": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "AND",
      "path": "15"
    },
    "5009": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "5012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5018": {
      "op": "SHL"
    },
    "5019": {
      "op": "SUB"
    },
    "5020": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5021": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "5022": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "AND",
      "path": "15"
    },
    "5023": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "5024": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5025": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "5026": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "MUL",
      "path": "15"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5029": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5031": {
      "op": "SHL"
    },
    "5032": {
      "op": "NOT"
    },
    "5033": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "AND",
      "path": "15"
    },
    "5034": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "5035": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5036": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "5037": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "OR",
      "path": "15"
    },
    "5038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5040": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5042": {
      "op": "SHL"
    },
    "5043": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "5045": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5046": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "5047": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "AND",
      "path": "15"
    },
    "5048": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5049": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5050": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5051": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "MUL",
      "path": "15"
    },
    "5052": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5053": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5054": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5055": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "OR",
      "path": "15"
    },
    "5056": {
      "op": "PUSH6",
      "value": "0xFFFFFFFFFFFF"
    },
    "5063": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "5065": {
      "op": "SHL"
    },
    "5066": {
      "op": "NOT"
    },
    "5067": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "AND",
      "path": "15"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5070": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "5072": {
      "op": "SHL"
    },
    "5073": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "5075": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5076": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5077": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5078": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SHR",
      "path": "15"
    },
    "5079": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5080": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5081": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5082": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "MUL",
      "path": "15"
    },
    "5083": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5088": {
      "op": "SHL"
    },
    "5089": {
      "op": "NOT"
    },
    "5090": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "AND",
      "path": "15"
    },
    "5091": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "OR",
      "path": "15"
    },
    "5092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5094": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5096": {
      "op": "SHL"
    },
    "5097": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "5100": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "5101": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5102": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "AND",
      "path": "15"
    },
    "5103": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "MUL",
      "path": "15"
    },
    "5104": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "OR",
      "path": "15"
    },
    "5105": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "5108": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5110": {
      "op": "SHL"
    },
    "5111": {
      "op": "NOT"
    },
    "5112": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5113": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "AND",
      "path": "15"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5118": {
      "op": "SHL"
    },
    "5119": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "5120": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5121": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5122": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "AND",
      "path": "15"
    },
    "5123": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5124": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5125": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5126": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "MUL",
      "path": "15"
    },
    "5127": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5128": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5129": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "OR",
      "path": "15"
    },
    "5130": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5131": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5132": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "5134": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5135": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "ADD",
      "path": "15"
    },
    "5136": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5137": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5138": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5139": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5140": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "5144": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5146": {
      "op": "SHL"
    },
    "5147": {
      "op": "NOT"
    },
    "5148": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5149": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5150": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "AND",
      "path": "15"
    },
    "5151": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5153": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5155": {
      "op": "SHL"
    },
    "5156": {
      "op": "NOT"
    },
    "5157": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5158": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5159": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "AND",
      "path": "15"
    },
    "5160": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "OR",
      "path": "15"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5163": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5165": {
      "op": "SHL"
    },
    "5166": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5167": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "5169": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5170": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "GT",
      "path": "15"
    },
    "5171": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5172": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x143F"
    },
    "5175": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5176": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x143F"
    },
    "5179": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "5182": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6694,
        7147
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5183": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5184": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "MUL",
      "path": "15"
    },
    "5185": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "OR",
      "path": "15"
    },
    "5186": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5187": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5188": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "POP",
      "path": "15"
    },
    "5189": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5190": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "POP",
      "path": "15"
    },
    "5191": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7147
      ],
      "op": "POP",
      "path": "15"
    },
    "5192": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7291
      ],
      "op": "DUP5",
      "path": "15",
      "statement": 34
    },
    "5193": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7299
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "5195": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7299
      ],
      "op": "ADD",
      "path": "15"
    },
    "5196": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7299
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5197": {
      "fn": "Registry.handleLend",
      "offset": [
        7300,
        7301
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5198": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7302
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5199": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7302
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5200": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7302
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5201": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7302
      ],
      "op": "LT",
      "path": "15"
    },
    "5202": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7302
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x145D"
    },
    "5205": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7302
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5206": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7302
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x145D"
    },
    "5209": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7302
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "5212": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7289,
        7302
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5213": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7302
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5214": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7302
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5216": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7302
      ],
      "op": "MUL",
      "path": "15"
    },
    "5217": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7302
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5219": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7302
      ],
      "op": "ADD",
      "path": "15"
    },
    "5220": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7302
      ],
      "op": "ADD",
      "path": "15"
    },
    "5221": {
      "fn": "Registry.handleLend",
      "offset": [
        7289,
        7302
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5222": {
      "fn": "Registry.handleLend",
      "offset": [
        7249,
        7251
      ],
      "op": "DUP6",
      "path": "15"
    },
    "5223": {
      "fn": "Registry.handleLend",
      "offset": [
        7249,
        7262
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "5225": {
      "fn": "Registry.handleLend",
      "offset": [
        7249,
        7262
      ],
      "op": "ADD",
      "path": "15"
    },
    "5226": {
      "fn": "Registry.handleLend",
      "offset": [
        7249,
        7262
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5227": {
      "fn": "Registry.handleLend",
      "offset": [
        7263,
        7265
      ],
      "op": "DUP7",
      "path": "15"
    },
    "5228": {
      "fn": "Registry.handleLend",
      "offset": [
        7263,
        7270
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5230": {
      "fn": "Registry.handleLend",
      "offset": [
        7263,
        7270
      ],
      "op": "ADD",
      "path": "15"
    },
    "5231": {
      "fn": "Registry.handleLend",
      "offset": [
        7263,
        7270
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5232": {
      "fn": "Registry.handleLend",
      "offset": [
        7249,
        7271
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5233": {
      "fn": "Registry.handleLend",
      "offset": [
        7249,
        7271
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5234": {
      "fn": "Registry.handleLend",
      "offset": [
        7249,
        7271
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5235": {
      "fn": "Registry.handleLend",
      "offset": [
        7249,
        7271
      ],
      "op": "LT",
      "path": "15"
    },
    "5236": {
      "fn": "Registry.handleLend",
      "offset": [
        7249,
        7271
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x147F"
    },
    "5239": {
      "fn": "Registry.handleLend",
      "offset": [
        7249,
        7271
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5240": {
      "fn": "Registry.handleLend",
      "offset": [
        7249,
        7271
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x147F"
    },
    "5243": {
      "fn": "Registry.handleLend",
      "offset": [
        7249,
        7271
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "5246": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7249,
        7271
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5247": {
      "fn": "Registry.handleLend",
      "offset": [
        7249,
        7271
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5248": {
      "fn": "Registry.handleLend",
      "offset": [
        7249,
        7271
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5250": {
      "fn": "Registry.handleLend",
      "offset": [
        7249,
        7271
      ],
      "op": "MUL",
      "path": "15"
    },
    "5251": {
      "fn": "Registry.handleLend",
      "offset": [
        7249,
        7271
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5253": {
      "fn": "Registry.handleLend",
      "offset": [
        7249,
        7271
      ],
      "op": "ADD",
      "path": "15"
    },
    "5254": {
      "fn": "Registry.handleLend",
      "offset": [
        7249,
        7271
      ],
      "op": "ADD",
      "path": "15"
    },
    "5255": {
      "fn": "Registry.handleLend",
      "offset": [
        7249,
        7271
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5262": {
      "op": "SHL"
    },
    "5263": {
      "op": "SUB"
    },
    "5264": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "AND",
      "path": "15"
    },
    "5265": {
      "fn": "Registry.handleLend",
      "offset": [
        7221,
        7231
      ],
      "op": "CALLER",
      "path": "15"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5272": {
      "op": "SHL"
    },
    "5273": {
      "op": "SUB"
    },
    "5274": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "AND",
      "path": "15"
    },
    "5275": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x46E173C7568BB4F093E16923381DCBA2A6B48F9CC9E688867965731218500AD3"
    },
    "5308": {
      "fn": "Registry.handleLend",
      "offset": [
        7198,
        7203
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5309": {
      "fn": "Registry.handleLend",
      "offset": [
        7320,
        7329
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "5311": {
      "fn": "Registry.handleLend",
      "offset": [
        7320,
        7329
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5312": {
      "fn": "Registry.handleLend",
      "offset": [
        7347,
        7349
      ],
      "op": "DUP11",
      "path": "15"
    },
    "5313": {
      "fn": "Registry.handleLend",
      "offset": [
        7347,
        7365
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "5315": {
      "fn": "Registry.handleLend",
      "offset": [
        7347,
        7365
      ],
      "op": "ADD",
      "path": "15"
    },
    "5316": {
      "fn": "Registry.handleLend",
      "offset": [
        7347,
        7365
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5317": {
      "fn": "Registry.handleLend",
      "offset": [
        7366,
        7367
      ],
      "op": "DUP11",
      "path": "15"
    },
    "5318": {
      "fn": "Registry.handleLend",
      "offset": [
        7347,
        7368
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5319": {
      "fn": "Registry.handleLend",
      "offset": [
        7347,
        7368
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5320": {
      "fn": "Registry.handleLend",
      "offset": [
        7347,
        7368
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5321": {
      "fn": "Registry.handleLend",
      "offset": [
        7347,
        7368
      ],
      "op": "LT",
      "path": "15"
    },
    "5322": {
      "fn": "Registry.handleLend",
      "offset": [
        7347,
        7368
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D5"
    },
    "5325": {
      "fn": "Registry.handleLend",
      "offset": [
        7347,
        7368
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5326": {
      "fn": "Registry.handleLend",
      "offset": [
        7347,
        7368
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D5"
    },
    "5329": {
      "fn": "Registry.handleLend",
      "offset": [
        7347,
        7368
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "5332": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7347,
        7368
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5333": {
      "fn": "Registry.handleLend",
      "offset": [
        7347,
        7368
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5334": {
      "fn": "Registry.handleLend",
      "offset": [
        7347,
        7368
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5336": {
      "fn": "Registry.handleLend",
      "offset": [
        7347,
        7368
      ],
      "op": "MUL",
      "path": "15"
    },
    "5337": {
      "fn": "Registry.handleLend",
      "offset": [
        7347,
        7368
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5339": {
      "fn": "Registry.handleLend",
      "offset": [
        7347,
        7368
      ],
      "op": "ADD",
      "path": "15"
    },
    "5340": {
      "fn": "Registry.handleLend",
      "offset": [
        7347,
        7368
      ],
      "op": "ADD",
      "path": "15"
    },
    "5341": {
      "fn": "Registry.handleLend",
      "offset": [
        7347,
        7368
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5342": {
      "fn": "Registry.handleLend",
      "offset": [
        7386,
        7388
      ],
      "op": "DUP12",
      "path": "15"
    },
    "5343": {
      "fn": "Registry.handleLend",
      "offset": [
        7386,
        7403
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "5345": {
      "fn": "Registry.handleLend",
      "offset": [
        7386,
        7403
      ],
      "op": "ADD",
      "path": "15"
    },
    "5346": {
      "fn": "Registry.handleLend",
      "offset": [
        7386,
        7403
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5347": {
      "fn": "Registry.handleLend",
      "offset": [
        7404,
        7405
      ],
      "op": "DUP12",
      "path": "15"
    },
    "5348": {
      "fn": "Registry.handleLend",
      "offset": [
        7386,
        7406
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5349": {
      "fn": "Registry.handleLend",
      "offset": [
        7386,
        7406
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5350": {
      "fn": "Registry.handleLend",
      "offset": [
        7386,
        7406
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5351": {
      "fn": "Registry.handleLend",
      "offset": [
        7386,
        7406
      ],
      "op": "LT",
      "path": "15"
    },
    "5352": {
      "fn": "Registry.handleLend",
      "offset": [
        7386,
        7406
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14F3"
    },
    "5355": {
      "fn": "Registry.handleLend",
      "offset": [
        7386,
        7406
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5356": {
      "fn": "Registry.handleLend",
      "offset": [
        7386,
        7406
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14F3"
    },
    "5359": {
      "fn": "Registry.handleLend",
      "offset": [
        7386,
        7406
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "5362": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7386,
        7406
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5363": {
      "fn": "Registry.handleLend",
      "offset": [
        7386,
        7406
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5364": {
      "fn": "Registry.handleLend",
      "offset": [
        7386,
        7406
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5366": {
      "fn": "Registry.handleLend",
      "offset": [
        7386,
        7406
      ],
      "op": "MUL",
      "path": "15"
    },
    "5367": {
      "fn": "Registry.handleLend",
      "offset": [
        7386,
        7406
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5369": {
      "fn": "Registry.handleLend",
      "offset": [
        7386,
        7406
      ],
      "op": "ADD",
      "path": "15"
    },
    "5370": {
      "fn": "Registry.handleLend",
      "offset": [
        7386,
        7406
      ],
      "op": "ADD",
      "path": "15"
    },
    "5371": {
      "fn": "Registry.handleLend",
      "offset": [
        7386,
        7406
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5372": {
      "branch": 136,
      "fn": "Registry.handleLend",
      "offset": [
        7424,
        7429
      ],
      "op": "DUP9",
      "path": "15"
    },
    "5373": {
      "fn": "Registry.handleLend",
      "offset": [
        7424,
        7460
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1523"
    },
    "5376": {
      "branch": 136,
      "fn": "Registry.handleLend",
      "offset": [
        7424,
        7460
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5377": {
      "fn": "Registry.handleLend",
      "offset": [
        7443,
        7445
      ],
      "op": "DUP13",
      "path": "15"
    },
    "5378": {
      "fn": "Registry.handleLend",
      "offset": [
        7443,
        7456
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "5380": {
      "fn": "Registry.handleLend",
      "offset": [
        7443,
        7456
      ],
      "op": "ADD",
      "path": "15"
    },
    "5381": {
      "fn": "Registry.handleLend",
      "offset": [
        7443,
        7456
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5382": {
      "fn": "Registry.handleLend",
      "offset": [
        7457,
        7458
      ],
      "op": "DUP13",
      "path": "15"
    },
    "5383": {
      "fn": "Registry.handleLend",
      "offset": [
        7443,
        7459
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5384": {
      "fn": "Registry.handleLend",
      "offset": [
        7443,
        7459
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5385": {
      "fn": "Registry.handleLend",
      "offset": [
        7443,
        7459
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5386": {
      "fn": "Registry.handleLend",
      "offset": [
        7443,
        7459
      ],
      "op": "LT",
      "path": "15"
    },
    "5387": {
      "fn": "Registry.handleLend",
      "offset": [
        7443,
        7459
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1516"
    },
    "5390": {
      "fn": "Registry.handleLend",
      "offset": [
        7443,
        7459
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5391": {
      "fn": "Registry.handleLend",
      "offset": [
        7443,
        7459
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1516"
    },
    "5394": {
      "fn": "Registry.handleLend",
      "offset": [
        7443,
        7459
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "5397": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7443,
        7459
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5398": {
      "fn": "Registry.handleLend",
      "offset": [
        7443,
        7459
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5399": {
      "fn": "Registry.handleLend",
      "offset": [
        7443,
        7459
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5401": {
      "fn": "Registry.handleLend",
      "offset": [
        7443,
        7459
      ],
      "op": "MUL",
      "path": "15"
    },
    "5402": {
      "fn": "Registry.handleLend",
      "offset": [
        7443,
        7459
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5404": {
      "fn": "Registry.handleLend",
      "offset": [
        7443,
        7459
      ],
      "op": "ADD",
      "path": "15"
    },
    "5405": {
      "fn": "Registry.handleLend",
      "offset": [
        7443,
        7459
      ],
      "op": "ADD",
      "path": "15"
    },
    "5406": {
      "fn": "Registry.handleLend",
      "offset": [
        7443,
        7459
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5407": {
      "fn": "Registry.handleLend",
      "offset": [
        7424,
        7460
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1526"
    },
    "5410": {
      "fn": "Registry.handleLend",
      "offset": [
        7424,
        7460
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5411": {
      "fn": "Registry.handleLend",
      "offset": [
        7424,
        7460
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5412": {
      "fn": "Registry.handleLend",
      "offset": [
        7432,
        7433
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "5414": {
      "fn": "Registry.handleLend",
      "offset": [
        7424,
        7460
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5415": {
      "fn": "Registry.handleLend",
      "offset": [
        7478,
        7480
      ],
      "op": "DUP14",
      "path": "15"
    },
    "5416": {
      "fn": "Registry.handleLend",
      "offset": [
        7478,
        7493
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x180"
    },
    "5419": {
      "fn": "Registry.handleLend",
      "offset": [
        7478,
        7493
      ],
      "op": "ADD",
      "path": "15"
    },
    "5420": {
      "fn": "Registry.handleLend",
      "offset": [
        7478,
        7493
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5421": {
      "fn": "Registry.handleLend",
      "offset": [
        7494,
        7495
      ],
      "op": "DUP14",
      "path": "15"
    },
    "5422": {
      "fn": "Registry.handleLend",
      "offset": [
        7478,
        7496
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5423": {
      "fn": "Registry.handleLend",
      "offset": [
        7478,
        7496
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5424": {
      "fn": "Registry.handleLend",
      "offset": [
        7478,
        7496
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5425": {
      "fn": "Registry.handleLend",
      "offset": [
        7478,
        7496
      ],
      "op": "LT",
      "path": "15"
    },
    "5426": {
      "fn": "Registry.handleLend",
      "offset": [
        7478,
        7496
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x153D"
    },
    "5429": {
      "fn": "Registry.handleLend",
      "offset": [
        7478,
        7496
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5430": {
      "fn": "Registry.handleLend",
      "offset": [
        7478,
        7496
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x153D"
    },
    "5433": {
      "fn": "Registry.handleLend",
      "offset": [
        7478,
        7496
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "5436": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7478,
        7496
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5437": {
      "fn": "Registry.handleLend",
      "offset": [
        7478,
        7496
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5438": {
      "fn": "Registry.handleLend",
      "offset": [
        7478,
        7496
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5440": {
      "fn": "Registry.handleLend",
      "offset": [
        7478,
        7496
      ],
      "op": "MUL",
      "path": "15"
    },
    "5441": {
      "fn": "Registry.handleLend",
      "offset": [
        7478,
        7496
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5443": {
      "fn": "Registry.handleLend",
      "offset": [
        7478,
        7496
      ],
      "op": "ADD",
      "path": "15"
    },
    "5444": {
      "fn": "Registry.handleLend",
      "offset": [
        7478,
        7496
      ],
      "op": "ADD",
      "path": "15"
    },
    "5445": {
      "fn": "Registry.handleLend",
      "offset": [
        7478,
        7496
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5446": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5448": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5449": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1557"
    },
    "5452": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "5453": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "5454": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "5455": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "5456": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5457": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5458": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5459": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x46AE"
    },
    "5462": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7166,
        7510
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5463": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5464": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5466": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5467": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5468": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5469": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "SUB",
      "path": "15"
    },
    "5470": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5471": {
      "fn": "Registry.handleLend",
      "offset": [
        7166,
        7510
      ],
      "op": "LOG4",
      "path": "15"
    },
    "5472": {
      "fn": "Registry.handleLend",
      "offset": [
        7524,
        7533
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 35,
      "value": "0x3"
    },
    "5474": {
      "fn": "Registry.handleLend",
      "offset": [
        7524,
        7535
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5475": {
      "fn": "Registry.handleLend",
      "offset": [
        7524,
        7535
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5476": {
      "fn": "Registry.handleLend",
      "offset": [
        7524,
        7535
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5477": {
      "fn": "Registry.handleLend",
      "offset": [
        7524,
        7533
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5479": {
      "fn": "Registry.handleLend",
      "offset": [
        7524,
        7535
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x156F"
    },
    "5482": {
      "fn": "Registry.handleLend",
      "offset": [
        7524,
        7535
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5483": {
      "fn": "Registry.handleLend",
      "offset": [
        7524,
        7535
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A5C"
    },
    "5486": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7524,
        7535
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5487": {
      "fn": "Registry.handleLend",
      "offset": [
        7524,
        7535
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5488": {
      "fn": "Registry.handleLend",
      "offset": [
        7524,
        7535
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5489": {
      "fn": "Registry.handleLend",
      "offset": [
        7524,
        7535
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5490": {
      "fn": "Registry.handleLend",
      "offset": [
        7524,
        7535
      ],
      "op": "POP",
      "path": "15"
    },
    "5491": {
      "fn": "Registry.handleLend",
      "offset": [
        7524,
        7535
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5492": {
      "fn": "Registry.handleLend",
      "offset": [
        7524,
        7535
      ],
      "op": "POP",
      "path": "15"
    },
    "5493": {
      "fn": "Registry.handleLend",
      "offset": [
        6181,
        7546
      ],
      "op": "POP",
      "path": "15"
    },
    "5494": {
      "fn": "Registry.handleLend",
      "offset": [
        6181,
        7546
      ],
      "op": "POP",
      "path": "15"
    },
    "5495": {
      "fn": "Registry.handleLend",
      "offset": [
        6181,
        7546
      ],
      "op": "POP",
      "path": "15"
    },
    "5496": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 36
    },
    "5497": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5498": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1582"
    },
    "5501": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5502": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A5C"
    },
    "5505": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6176,
        6179
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5506": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5507": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5508": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "POP",
      "path": "15"
    },
    "5509": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "POP",
      "path": "15"
    },
    "5510": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7546
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x102B"
    },
    "5513": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7546
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5514": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7546
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5515": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7546
      ],
      "op": "POP",
      "path": "15"
    },
    "5516": {
      "fn": "Registry.handleLend",
      "offset": [
        7555,
        7759
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 37,
      "value": "0x15C8"
    },
    "5519": {
      "fn": "Registry.handleLend",
      "offset": [
        7581,
        7583
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5520": {
      "fn": "Registry.handleLend",
      "offset": [
        7597,
        7607
      ],
      "op": "CALLER",
      "path": "15"
    },
    "5521": {
      "fn": "Registry.handleLend",
      "offset": [
        7629,
        7633
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "5522": {
      "fn": "Registry.handleLend",
      "offset": [
        7648,
        7690
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15AA"
    },
    "5525": {
      "fn": "Registry.handleLend",
      "offset": [
        7657,
        7659
      ],
      "op": "DUP6",
      "path": "15"
    },
    "5526": {
      "fn": "Registry.handleLend",
      "offset": [
        7657,
        7667
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "5528": {
      "fn": "Registry.handleLend",
      "offset": [
        7657,
        7667
      ],
      "op": "ADD",
      "path": "15"
    },
    "5529": {
      "fn": "Registry.handleLend",
      "offset": [
        7657,
        7667
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5530": {
      "fn": "Registry.handleLend",
      "offset": [
        7669,
        7671
      ],
      "op": "DUP7",
      "path": "15"
    },
    "5531": {
      "fn": "Registry.handleLend",
      "offset": [
        7669,
        7676
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5533": {
      "fn": "Registry.handleLend",
      "offset": [
        7669,
        7676
      ],
      "op": "ADD",
      "path": "15"
    },
    "5534": {
      "fn": "Registry.handleLend",
      "offset": [
        7669,
        7676
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5535": {
      "fn": "Registry.handleLend",
      "offset": [
        7678,
        7680
      ],
      "op": "DUP8",
      "path": "15"
    },
    "5536": {
      "fn": "Registry.handleLend",
      "offset": [
        7678,
        7686
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5538": {
      "fn": "Registry.handleLend",
      "offset": [
        7678,
        7686
      ],
      "op": "ADD",
      "path": "15"
    },
    "5539": {
      "fn": "Registry.handleLend",
      "offset": [
        7678,
        7686
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5540": {
      "fn": "Registry.handleLend",
      "offset": [
        7688,
        7689
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5542": {
      "fn": "Registry.handleLend",
      "offset": [
        7648,
        7656
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E8B"
    },
    "5545": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7648,
        7690
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5546": {
      "fn": "Registry.handleLend",
      "offset": [
        7648,
        7690
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5547": {
      "fn": "Registry.handleLend",
      "offset": [
        7704,
        7749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15C3"
    },
    "5550": {
      "fn": "Registry.handleLend",
      "offset": [
        7713,
        7715
      ],
      "op": "DUP7",
      "path": "15"
    },
    "5551": {
      "fn": "Registry.handleLend",
      "offset": [
        7713,
        7726
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "5553": {
      "fn": "Registry.handleLend",
      "offset": [
        7713,
        7726
      ],
      "op": "ADD",
      "path": "15"
    },
    "5554": {
      "fn": "Registry.handleLend",
      "offset": [
        7713,
        7726
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5555": {
      "fn": "Registry.handleLend",
      "offset": [
        7728,
        7730
      ],
      "op": "DUP8",
      "path": "15"
    },
    "5556": {
      "fn": "Registry.handleLend",
      "offset": [
        7728,
        7735
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5558": {
      "fn": "Registry.handleLend",
      "offset": [
        7728,
        7735
      ],
      "op": "ADD",
      "path": "15"
    },
    "5559": {
      "fn": "Registry.handleLend",
      "offset": [
        7728,
        7735
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5560": {
      "fn": "Registry.handleLend",
      "offset": [
        7737,
        7739
      ],
      "op": "DUP9",
      "path": "15"
    },
    "5561": {
      "fn": "Registry.handleLend",
      "offset": [
        7737,
        7745
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5563": {
      "fn": "Registry.handleLend",
      "offset": [
        7737,
        7745
      ],
      "op": "ADD",
      "path": "15"
    },
    "5564": {
      "fn": "Registry.handleLend",
      "offset": [
        7737,
        7745
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5565": {
      "fn": "Registry.handleLend",
      "offset": [
        7747,
        7748
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5567": {
      "fn": "Registry.handleLend",
      "offset": [
        7704,
        7712
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E8B"
    },
    "5570": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7704,
        7749
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5571": {
      "fn": "Registry.handleLend",
      "offset": [
        7704,
        7749
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5572": {
      "fn": "Registry.handleLend",
      "offset": [
        7555,
        7567
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F4A"
    },
    "5575": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7555,
        7759
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5576": {
      "fn": "Registry.handleLend",
      "offset": [
        7555,
        7759
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5577": {
      "fn": "Registry.handleLend",
      "offset": [
        6068,
        7766
      ],
      "op": "POP",
      "path": "15"
    },
    "5578": {
      "fn": "Registry.handleLend",
      "jump": "o",
      "offset": [
        6068,
        7766
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5579": {
      "fn": "Registry.createLendCallData",
      "offset": [
        19874,
        20765
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5580": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20224,
        20242
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15D3"
    },
    "5583": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20224,
        20242
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3C5F"
    },
    "5586": {
      "fn": "Registry.createLendCallData",
      "jump": "i",
      "offset": [
        20224,
        20242
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5587": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20224,
        20242
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5588": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 38,
      "value": "0x40"
    },
    "5590": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5591": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5592": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A0"
    },
    "5595": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "ADD",
      "path": "15"
    },
    "5596": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5598": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5599": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5600": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20288,
        20289
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5602": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5603": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5604": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5606": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "ADD",
      "path": "15"
    },
    "5607": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20310,
        20311
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "5609": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5610": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5611": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5613": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "ADD",
      "path": "15"
    },
    "5614": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20338,
        20349
      ],
      "op": "DUP10",
      "path": "15"
    },
    "5615": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5616": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5617": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5619": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "ADD",
      "path": "15"
    },
    "5620": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20385
      ],
      "op": "DUP9",
      "path": "15"
    },
    "5621": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5622": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5623": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5625": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "ADD",
      "path": "15"
    },
    "5626": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20408,
        20415
      ],
      "op": "DUP8",
      "path": "15"
    },
    "5627": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5628": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5629": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5631": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "ADD",
      "path": "15"
    },
    "5632": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20441,
        20451
      ],
      "op": "DUP7",
      "path": "15"
    },
    "5633": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5634": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5635": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5637": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "ADD",
      "path": "15"
    },
    "5638": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20648,
        20663
      ],
      "op": "DUP6",
      "path": "15"
    },
    "5639": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5640": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5641": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5643": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "ADD",
      "path": "15"
    },
    "5644": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20693,
        20707
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5645": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5646": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5647": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5649": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "ADD",
      "path": "15"
    },
    "5650": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20490,
        20491
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5658": {
      "op": "SHL"
    },
    "5659": {
      "op": "SUB"
    },
    "5660": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5661": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "GT",
      "path": "15"
    },
    "5662": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5663": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x162A"
    },
    "5666": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5667": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x162A"
    },
    "5670": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AB9"
    },
    "5673": {
      "fn": "Registry.createLendCallData",
      "jump": "i",
      "offset": [
        20476,
        20492
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5674": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5675": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5677": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5678": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5679": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5680": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5681": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5682": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5683": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5685": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "MUL",
      "path": "15"
    },
    "5686": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5688": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "ADD",
      "path": "15"
    },
    "5689": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5690": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "ADD",
      "path": "15"
    },
    "5691": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5693": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5694": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5695": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5696": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1653"
    },
    "5699": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5700": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5701": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5703": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "ADD",
      "path": "15"
    },
    "5704": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5706": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5707": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "MUL",
      "path": "15"
    },
    "5708": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5709": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "5710": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5711": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "5712": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "ADD",
      "path": "15"
    },
    "5713": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5714": {
      "op": "POP"
    },
    "5715": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20476,
        20492
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5716": {
      "op": "POP"
    },
    "5717": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5718": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5719": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5721": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "ADD",
      "path": "15"
    },
    "5722": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20531,
        20532
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5724": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5726": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5727": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5728": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5729": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5730": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5731": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5732": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5734": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "MUL",
      "path": "15"
    },
    "5735": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5737": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "ADD",
      "path": "15"
    },
    "5738": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5739": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "ADD",
      "path": "15"
    },
    "5740": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5742": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5743": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5744": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5745": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1684"
    },
    "5748": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5749": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5750": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5752": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "ADD",
      "path": "15"
    },
    "5753": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5755": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5756": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "MUL",
      "path": "15"
    },
    "5757": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5758": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "5759": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5760": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "5761": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "ADD",
      "path": "15"
    },
    "5762": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5763": {
      "op": "POP"
    },
    "5764": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20517,
        20533
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5765": {
      "op": "POP"
    },
    "5766": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5767": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5768": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5770": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "ADD",
      "path": "15"
    },
    "5771": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20573,
        20574
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5773": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5775": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5776": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5777": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5778": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5779": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5780": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5781": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5783": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "MUL",
      "path": "15"
    },
    "5784": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5786": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "ADD",
      "path": "15"
    },
    "5787": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5788": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "ADD",
      "path": "15"
    },
    "5789": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5791": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5792": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5793": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5794": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16B5"
    },
    "5797": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5798": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5799": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5801": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "ADD",
      "path": "15"
    },
    "5802": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5804": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5805": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "MUL",
      "path": "15"
    },
    "5806": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5807": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "5808": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5809": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "5810": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "ADD",
      "path": "15"
    },
    "5811": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5812": {
      "op": "POP"
    },
    "5813": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20561,
        20575
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5814": {
      "op": "POP"
    },
    "5815": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5816": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5817": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5819": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "ADD",
      "path": "15"
    },
    "5820": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20615,
        20616
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5822": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5824": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5825": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5826": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5827": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5828": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5829": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5830": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5832": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "MUL",
      "path": "15"
    },
    "5833": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5835": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "ADD",
      "path": "15"
    },
    "5836": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5837": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "ADD",
      "path": "15"
    },
    "5838": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5840": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5841": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5842": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5843": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16E6"
    },
    "5846": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5847": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5848": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5850": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "ADD",
      "path": "15"
    },
    "5851": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5853": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5854": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "MUL",
      "path": "15"
    },
    "5855": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5856": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "5857": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5858": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "5859": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "ADD",
      "path": "15"
    },
    "5860": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5861": {
      "op": "POP"
    },
    "5862": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20601,
        20617
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5863": {
      "op": "POP"
    },
    "5864": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5865": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5866": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5868": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "ADD",
      "path": "15"
    },
    "5869": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5870": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5871": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5872": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20259,
        20758
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5873": {
      "op": "POP"
    },
    "5874": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20254,
        20758
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "5875": {
      "fn": "Registry.createLendCallData",
      "offset": [
        19874,
        20765
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "5876": {
      "op": "POP"
    },
    "5877": {
      "op": "POP"
    },
    "5878": {
      "op": "POP"
    },
    "5879": {
      "op": "POP"
    },
    "5880": {
      "op": "POP"
    },
    "5881": {
      "op": "POP"
    },
    "5882": {
      "fn": "Registry.createLendCallData",
      "jump": "o",
      "offset": [
        19874,
        20765
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5883": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13110,
        14277
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5884": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13190,
        13197
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5885": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13190,
        13197
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5886": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13173,
        14271
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5887": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13203,
        13205
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5888": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13203,
        13211
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5890": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13203,
        13211
      ],
      "op": "ADD",
      "path": "15"
    },
    "5891": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13203,
        13211
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5892": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13199,
        13200
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5893": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13199,
        13211
      ],
      "op": "LT",
      "path": "15"
    },
    "5894": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13173,
        14271
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5895": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13173,
        14271
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD69"
    },
    "5898": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13173,
        14271
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5899": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13232,
        13257
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5901": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13325,
        13327
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5902": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13325,
        13338
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "5904": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13325,
        13338
      ],
      "op": "ADD",
      "path": "15"
    },
    "5905": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13325,
        13338
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5906": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13339,
        13341
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5907": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13339,
        13346
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5909": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13339,
        13346
      ],
      "op": "ADD",
      "path": "15"
    },
    "5910": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13339,
        13346
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5911": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13325,
        13347
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5912": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13325,
        13347
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5913": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13325,
        13347
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5914": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13325,
        13347
      ],
      "op": "LT",
      "path": "15"
    },
    "5915": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13325,
        13347
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1726"
    },
    "5918": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13325,
        13347
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5919": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13325,
        13347
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1726"
    },
    "5922": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13325,
        13347
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "5925": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13325,
        13347
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5926": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13325,
        13347
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5927": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13325,
        13347
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5929": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13325,
        13347
      ],
      "op": "MUL",
      "path": "15"
    },
    "5930": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13325,
        13347
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5932": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13325,
        13347
      ],
      "op": "ADD",
      "path": "15"
    },
    "5933": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13325,
        13347
      ],
      "op": "ADD",
      "path": "15"
    },
    "5934": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13325,
        13347
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5935": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13369,
        13371
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5936": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13369,
        13379
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "5938": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13369,
        13379
      ],
      "op": "ADD",
      "path": "15"
    },
    "5939": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13369,
        13379
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5940": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13380,
        13381
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5941": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13369,
        13382
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5942": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13369,
        13382
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5943": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13369,
        13382
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5944": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13369,
        13382
      ],
      "op": "LT",
      "path": "15"
    },
    "5945": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13369,
        13382
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1744"
    },
    "5948": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13369,
        13382
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5949": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13369,
        13382
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1744"
    },
    "5952": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13369,
        13382
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "5955": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13369,
        13382
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5956": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13369,
        13382
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5957": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13369,
        13382
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5959": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13369,
        13382
      ],
      "op": "MUL",
      "path": "15"
    },
    "5960": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13369,
        13382
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5962": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13369,
        13382
      ],
      "op": "ADD",
      "path": "15"
    },
    "5963": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13369,
        13382
      ],
      "op": "ADD",
      "path": "15"
    },
    "5964": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13369,
        13382
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5965": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13404,
        13406
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5966": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13404,
        13416
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "5969": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13404,
        13416
      ],
      "op": "ADD",
      "path": "15"
    },
    "5970": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13404,
        13416
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5971": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13417,
        13418
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5972": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13404,
        13419
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5973": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13404,
        13419
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5974": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13404,
        13419
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5975": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13404,
        13419
      ],
      "op": "LT",
      "path": "15"
    },
    "5976": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13404,
        13419
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1763"
    },
    "5979": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13404,
        13419
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5980": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13404,
        13419
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1763"
    },
    "5983": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13404,
        13419
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "5986": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13404,
        13419
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5987": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13404,
        13419
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5988": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13404,
        13419
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5990": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13404,
        13419
      ],
      "op": "MUL",
      "path": "15"
    },
    "5991": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13404,
        13419
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5993": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13404,
        13419
      ],
      "op": "ADD",
      "path": "15"
    },
    "5994": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13404,
        13419
      ],
      "op": "ADD",
      "path": "15"
    },
    "5995": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13404,
        13419
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5996": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5998": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5999": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6001": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "ADD",
      "path": "15"
    },
    "6002": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x177D"
    },
    "6005": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "6006": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6007": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6008": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6009": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x460D"
    },
    "6012": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13287,
        13437
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6013": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6014": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6016": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6017": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6019": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6020": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6021": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "SUB",
      "path": "15"
    },
    "6022": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "SUB",
      "path": "15"
    },
    "6023": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6024": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6025": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6026": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6028": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13287,
        13437
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6029": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13260,
        13451
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6030": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13260,
        13451
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6031": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13260,
        13451
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6032": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13260,
        13451
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6034": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13260,
        13451
      ],
      "op": "ADD",
      "path": "15"
    },
    "6035": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13260,
        13451
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6036": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13232,
        13451
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6037": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13232,
        13451
      ],
      "op": "POP",
      "path": "15"
    },
    "6038": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13465,
        13490
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6040": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13558,
        13560
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6041": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13558,
        13571
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "6043": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13558,
        13571
      ],
      "op": "ADD",
      "path": "15"
    },
    "6044": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13558,
        13571
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6045": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13572,
        13574
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6046": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13572,
        13579
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6048": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13572,
        13579
      ],
      "op": "ADD",
      "path": "15"
    },
    "6049": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13572,
        13579
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6050": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13558,
        13580
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6051": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13558,
        13580
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6052": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13558,
        13580
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6053": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13558,
        13580
      ],
      "op": "LT",
      "path": "15"
    },
    "6054": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13558,
        13580
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17B1"
    },
    "6057": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13558,
        13580
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6058": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13558,
        13580
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17B1"
    },
    "6061": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13558,
        13580
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "6064": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13558,
        13580
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6065": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13558,
        13580
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6066": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13558,
        13580
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6068": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13558,
        13580
      ],
      "op": "MUL",
      "path": "15"
    },
    "6069": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13558,
        13580
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6071": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13558,
        13580
      ],
      "op": "ADD",
      "path": "15"
    },
    "6072": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13558,
        13580
      ],
      "op": "ADD",
      "path": "15"
    },
    "6073": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13558,
        13580
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6074": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13602,
        13604
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6075": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13602,
        13612
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "6077": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13602,
        13612
      ],
      "op": "ADD",
      "path": "15"
    },
    "6078": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13602,
        13612
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6079": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13613,
        13614
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6080": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13602,
        13615
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6081": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13602,
        13615
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6082": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13602,
        13615
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6083": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13602,
        13615
      ],
      "op": "LT",
      "path": "15"
    },
    "6084": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13602,
        13615
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17CF"
    },
    "6087": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13602,
        13615
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6088": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13602,
        13615
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17CF"
    },
    "6091": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13602,
        13615
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "6094": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13602,
        13615
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6095": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13602,
        13615
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6096": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13602,
        13615
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6098": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13602,
        13615
      ],
      "op": "MUL",
      "path": "15"
    },
    "6099": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13602,
        13615
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6101": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13602,
        13615
      ],
      "op": "ADD",
      "path": "15"
    },
    "6102": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13602,
        13615
      ],
      "op": "ADD",
      "path": "15"
    },
    "6103": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13602,
        13615
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6104": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13637,
        13639
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6105": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13637,
        13649
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x120"
    },
    "6108": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13637,
        13649
      ],
      "op": "ADD",
      "path": "15"
    },
    "6109": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13637,
        13649
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6110": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13650,
        13651
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6111": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13637,
        13652
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6112": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13637,
        13652
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6113": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13637,
        13652
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6114": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13637,
        13652
      ],
      "op": "LT",
      "path": "15"
    },
    "6115": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13637,
        13652
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17EE"
    },
    "6118": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13637,
        13652
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6119": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13637,
        13652
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17EE"
    },
    "6122": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13637,
        13652
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "6125": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13637,
        13652
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6126": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13637,
        13652
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6127": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13637,
        13652
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6129": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13637,
        13652
      ],
      "op": "MUL",
      "path": "15"
    },
    "6130": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13637,
        13652
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6132": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13637,
        13652
      ],
      "op": "ADD",
      "path": "15"
    },
    "6133": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13637,
        13652
      ],
      "op": "ADD",
      "path": "15"
    },
    "6134": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13637,
        13652
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6135": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6137": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6138": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6140": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "ADD",
      "path": "15"
    },
    "6141": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1808"
    },
    "6144": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "6145": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6146": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6147": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6148": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x460D"
    },
    "6151": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13520,
        13670
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6152": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6153": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6155": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6156": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6157": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6159": {
      "op": "NOT"
    },
    "6160": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6161": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6162": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "SUB",
      "path": "15"
    },
    "6163": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "ADD",
      "path": "15"
    },
    "6164": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6165": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6166": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6167": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6168": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6169": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13493,
        13684
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6170": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13493,
        13684
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6171": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6173": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13493,
        13684
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6174": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13493,
        13684
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6175": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13493,
        13684
      ],
      "op": "ADD",
      "path": "15"
    },
    "6176": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13493,
        13684
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6177": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13698,
        13731
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6179": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13734,
        13761
      ],
      "op": "DUP7",
      "path": "15"
    },
    "6180": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13734,
        13761
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6181": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13734,
        13761
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6182": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13734,
        13742
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "6184": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13734,
        13761
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6185": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13734,
        13761
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6186": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13734,
        13761
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6187": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13734,
        13761
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6188": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13734,
        13761
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6189": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13811,
        13838
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6190": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13811,
        13838
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6191": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13811,
        13838
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6192": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13811,
        13819
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "6194": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13811,
        13838
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6195": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13811,
        13838
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "6196": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13811,
        13838
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6197": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13811,
        13838
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6198": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13811,
        13838
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6199": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13811,
        13838
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6200": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 39,
      "value": "0xE0"
    },
    "6202": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6203": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "ADD",
      "path": "15"
    },
    "6204": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6205": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "6206": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6207": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6208": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6209": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13493,
        13684
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6210": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13493,
        13684
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "6211": {
      "op": "POP"
    },
    "6212": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13734,
        13761
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6213": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13734,
        13761
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6214": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1861"
    },
    "6217": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6218": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13734,
        13761
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6219": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13734,
        13761
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6220": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6221": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13520,
        13670
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6222": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6224": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "AND",
      "path": "15"
    },
    "6225": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "6227": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6228": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "GT",
      "path": "15"
    },
    "6229": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6230": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x931"
    },
    "6233": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6234": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x931"
    },
    "6237": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "6240": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13852,
        13876
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6241": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13852,
        13876
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6242": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 40,
      "value": "0x40"
    },
    "6244": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6245": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6246": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "6248": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6249": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "ADD",
      "path": "15"
    },
    "6250": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6251": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6252": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6253": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6260": {
      "op": "SHL"
    },
    "6261": {
      "op": "SUB"
    },
    "6262": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6263": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "AND",
      "path": "15"
    },
    "6264": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6265": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6270": {
      "op": "SHL"
    },
    "6271": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6272": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "DIV",
      "path": "15"
    },
    "6273": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6275": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "AND",
      "path": "15"
    },
    "6276": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6278": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6279": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "ADD",
      "path": "15"
    },
    "6280": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6283": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6285": {
      "op": "SHL"
    },
    "6286": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6287": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "DIV",
      "path": "15"
    },
    "6288": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "6293": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "AND",
      "path": "15"
    },
    "6294": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6295": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6296": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "ADD",
      "path": "15"
    },
    "6297": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6298": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6299": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6300": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6303": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6305": {
      "op": "SHL"
    },
    "6306": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6307": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6308": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "DIV",
      "path": "15"
    },
    "6309": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "6312": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "AND",
      "path": "15"
    },
    "6313": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "6315": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6316": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "ADD",
      "path": "15"
    },
    "6317": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6318": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18B6"
    },
    "6321": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6322": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13905
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27E1"
    },
    "6325": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13890,
        13914
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6326": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13890,
        13914
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6327": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 41,
      "value": "0x40"
    },
    "6329": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6330": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6331": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "6333": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6334": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "ADD",
      "path": "15"
    },
    "6335": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6336": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6337": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6338": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6345": {
      "op": "SHL"
    },
    "6346": {
      "op": "SUB"
    },
    "6347": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6348": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "AND",
      "path": "15"
    },
    "6349": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6350": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6355": {
      "op": "SHL"
    },
    "6356": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6357": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "DIV",
      "path": "15"
    },
    "6358": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6360": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "AND",
      "path": "15"
    },
    "6361": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6363": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6364": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "ADD",
      "path": "15"
    },
    "6365": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6368": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6370": {
      "op": "SHL"
    },
    "6371": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6372": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "DIV",
      "path": "15"
    },
    "6373": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "6378": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "AND",
      "path": "15"
    },
    "6379": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6380": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6381": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "ADD",
      "path": "15"
    },
    "6382": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6383": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6384": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6385": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6388": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6390": {
      "op": "SHL"
    },
    "6391": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6392": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6393": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "DIV",
      "path": "15"
    },
    "6394": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "6397": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "AND",
      "path": "15"
    },
    "6398": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "6400": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6401": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "ADD",
      "path": "15"
    },
    "6402": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6403": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x190C"
    },
    "6406": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6407": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13955,
        13970
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "6408": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13945
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x30CB"
    },
    "6411": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13928,
        13971
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6412": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13928,
        13971
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6413": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 42,
      "value": "0x40"
    },
    "6415": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6416": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6417": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "6419": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6420": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "ADD",
      "path": "15"
    },
    "6421": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6422": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6423": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6424": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6425": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6426": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A2A"
    },
    "6429": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6430": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6431": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14008,
        14015
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6432": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14008,
        14015
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6433": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6434": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6435": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6437": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "AND",
      "path": "15"
    },
    "6438": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "6440": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6441": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "GT",
      "path": "15"
    },
    "6442": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6443": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1936"
    },
    "6446": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6447": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1936"
    },
    "6450": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "6453": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13985,
        14025
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6454": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6455": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "6457": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6458": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "GT",
      "path": "15"
    },
    "6459": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6460": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1947"
    },
    "6463": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6464": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1947"
    },
    "6467": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "6470": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13985,
        14025
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6471": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6472": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6473": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6474": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6475": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6482": {
      "op": "SHL"
    },
    "6483": {
      "op": "SUB"
    },
    "6484": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "6487": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6488": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DIV",
      "path": "15"
    },
    "6489": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "AND",
      "path": "15"
    },
    "6490": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6492": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6493": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "ADD",
      "path": "15"
    },
    "6494": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6495": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6499": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6501": {
      "op": "SHL"
    },
    "6502": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6503": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DIV",
      "path": "15"
    },
    "6504": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6505": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "AND",
      "path": "15"
    },
    "6506": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6508": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6509": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "ADD",
      "path": "15"
    },
    "6510": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6515": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6517": {
      "op": "SHL"
    },
    "6518": {
      "op": "SUB"
    },
    "6519": {
      "op": "NOT"
    },
    "6520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6522": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6524": {
      "op": "SHL"
    },
    "6525": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6526": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DIV",
      "path": "15"
    },
    "6527": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "6529": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SHL",
      "path": "15"
    },
    "6530": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "AND",
      "path": "15"
    },
    "6531": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "6533": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6534": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "ADD",
      "path": "15"
    },
    "6535": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6536": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "6539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6541": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6543": {
      "op": "SHL"
    },
    "6544": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6545": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DIV",
      "path": "15"
    },
    "6546": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6547": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "AND",
      "path": "15"
    },
    "6548": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "6550": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6551": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "ADD",
      "path": "15"
    },
    "6552": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6555": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6557": {
      "op": "SHL"
    },
    "6558": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6559": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DIV",
      "path": "15"
    },
    "6560": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "AND",
      "path": "15"
    },
    "6561": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "6563": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6564": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "ADD",
      "path": "15"
    },
    "6565": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6566": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "6568": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6569": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6570": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "ADD",
      "path": "15"
    },
    "6571": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6574": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6576": {
      "op": "SHL"
    },
    "6577": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6578": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6579": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DIV",
      "path": "15"
    },
    "6580": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "AND",
      "path": "15"
    },
    "6581": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "6583": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6584": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "GT",
      "path": "15"
    },
    "6585": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6586": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19C5"
    },
    "6589": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6590": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19C5"
    },
    "6593": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "6596": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13985,
        14025
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6597": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6598": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "6600": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6601": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "GT",
      "path": "15"
    },
    "6602": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6603": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19D6"
    },
    "6606": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6607": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19D6"
    },
    "6610": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "6613": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13985,
        14025
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6614": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6615": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6616": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6617": {
      "op": "POP"
    },
    "6618": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6620": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6621": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6622": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "6624": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6625": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "ADD",
      "path": "15"
    },
    "6626": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6627": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6628": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6629": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6636": {
      "op": "SHL"
    },
    "6637": {
      "op": "SUB"
    },
    "6638": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6639": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "AND",
      "path": "15"
    },
    "6640": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6641": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6646": {
      "op": "SHL"
    },
    "6647": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6648": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DIV",
      "path": "15"
    },
    "6649": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6651": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "AND",
      "path": "15"
    },
    "6652": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6654": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6655": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "ADD",
      "path": "15"
    },
    "6656": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6659": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6661": {
      "op": "SHL"
    },
    "6662": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6663": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DIV",
      "path": "15"
    },
    "6664": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "6669": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "AND",
      "path": "15"
    },
    "6670": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6671": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6672": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "ADD",
      "path": "15"
    },
    "6673": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6674": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6675": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6676": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6679": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6681": {
      "op": "SHL"
    },
    "6682": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6683": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6684": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DIV",
      "path": "15"
    },
    "6685": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "6688": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "AND",
      "path": "15"
    },
    "6689": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "6691": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6692": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "ADD",
      "path": "15"
    },
    "6693": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6694": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14007
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3121"
    },
    "6697": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13985,
        14025
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6698": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13985,
        14025
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6699": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14066,
        14084
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 43
    },
    "6700": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14066,
        14084
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6701": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6702": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6703": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14066,
        14084
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "6706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6708": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6710": {
      "op": "SHL"
    },
    "6711": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14066,
        14084
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6712": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14066,
        14084
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6713": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14066,
        14084
      ],
      "op": "DIV",
      "path": "15"
    },
    "6714": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14066,
        14084
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6715": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14066,
        14084
      ],
      "op": "AND",
      "path": "15"
    },
    "6716": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14066,
        14084
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6717": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14046
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6718": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14046
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6719": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14062
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1C"
    },
    "6721": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14062
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6722": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A55"
    },
    "6725": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6726": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14066,
        14084
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6727": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14066,
        14084
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6730": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6732": {
      "op": "SHL"
    },
    "6733": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6734": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6735": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "DIV",
      "path": "15"
    },
    "6736": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "AND",
      "path": "15"
    },
    "6737": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x488C"
    },
    "6740": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14039,
        14084
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6741": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6742": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6743": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "POP",
      "path": "15"
    },
    "6744": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "6747": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "EXP",
      "path": "15"
    },
    "6748": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6749": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6750": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6751": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "6754": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "MUL",
      "path": "15"
    },
    "6755": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "NOT",
      "path": "15"
    },
    "6756": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "AND",
      "path": "15"
    },
    "6757": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6758": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6759": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "6762": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "AND",
      "path": "15"
    },
    "6763": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "MUL",
      "path": "15"
    },
    "6764": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "OR",
      "path": "15"
    },
    "6765": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6766": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "6767": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14039,
        14084
      ],
      "op": "POP",
      "path": "15"
    },
    "6768": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14142,
        14144
      ],
      "op": "DUP6",
      "path": "15",
      "statement": 44
    },
    "6769": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14142,
        14154
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x120"
    },
    "6772": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14142,
        14154
      ],
      "op": "ADD",
      "path": "15"
    },
    "6773": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14142,
        14154
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6774": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14155,
        14156
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6775": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14142,
        14157
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6776": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14142,
        14157
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6777": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14142,
        14157
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6778": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14142,
        14157
      ],
      "op": "LT",
      "path": "15"
    },
    "6779": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14142,
        14157
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A86"
    },
    "6782": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14142,
        14157
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6783": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14142,
        14157
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A86"
    },
    "6786": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14142,
        14157
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "6789": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14142,
        14157
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6790": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14142,
        14157
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6791": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14142,
        14157
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6793": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14142,
        14157
      ],
      "op": "MUL",
      "path": "15"
    },
    "6794": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14142,
        14157
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6796": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14142,
        14157
      ],
      "op": "ADD",
      "path": "15"
    },
    "6797": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14142,
        14157
      ],
      "op": "ADD",
      "path": "15"
    },
    "6798": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14142,
        14157
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6799": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14103,
        14212
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x4630B53A4335803B2A4F9C1CE896F4CADBF909907810E496EDA17614483D7B94"
    },
    "6832": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14182,
        14197
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "6833": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14103,
        14212
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6835": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14103,
        14212
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6836": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14103,
        14212
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AC9"
    },
    "6839": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14103,
        14212
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6840": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14103,
        14212
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6841": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6846": {
      "op": "SWAP2"
    },
    "6847": {
      "op": "SWAP1"
    },
    "6848": {
      "op": "SWAP2"
    },
    "6849": {
      "op": "AND"
    },
    "6850": {
      "op": "DUP2"
    },
    "6851": {
      "op": "MSTORE"
    },
    "6852": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6854": {
      "op": "ADD"
    },
    "6855": {
      "op": "SWAP1"
    },
    "6856": {
      "op": "JUMP"
    },
    "6857": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14103,
        14212
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6858": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14103,
        14212
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6860": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14103,
        14212
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6861": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14103,
        14212
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6862": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14103,
        14212
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6863": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14103,
        14212
      ],
      "op": "SUB",
      "path": "15"
    },
    "6864": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14103,
        14212
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6865": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14103,
        14212
      ],
      "op": "LOG2",
      "path": "15"
    },
    "6866": {
      "op": "POP"
    },
    "6867": {
      "op": "POP"
    },
    "6868": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14233,
        14260
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 45,
      "value": "0x0"
    },
    "6870": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14233,
        14260
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6871": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14233,
        14260
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6872": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14233,
        14260
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6873": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14233,
        14241
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "6875": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14233,
        14260
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6877": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14233,
        14260
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6878": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14233,
        14260
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6880": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14233,
        14260
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6881": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14233,
        14260
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6882": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14226,
        14260
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6883": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14226,
        14260
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6888": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "6890": {
      "op": "SHL"
    },
    "6891": {
      "op": "SUB"
    },
    "6892": {
      "op": "NOT"
    },
    "6893": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14226,
        14260
      ],
      "op": "AND",
      "path": "15"
    },
    "6894": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14226,
        14260
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6895": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14226,
        14260
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "6896": {
      "op": "POP"
    },
    "6897": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13213,
        13216
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 46
    },
    "6898": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13213,
        13216
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AFA"
    },
    "6901": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13213,
        13216
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6902": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13213,
        13216
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A5C"
    },
    "6905": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13213,
        13216
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6906": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13213,
        13216
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6907": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13213,
        13216
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6908": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13213,
        13216
      ],
      "op": "POP",
      "path": "15"
    },
    "6909": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13213,
        13216
      ],
      "op": "POP",
      "path": "15"
    },
    "6910": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13173,
        14271
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16FE"
    },
    "6913": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13173,
        14271
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6914": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7772,
        9054
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6915": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7900,
        7907
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6916": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7900,
        7907
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6917": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7889,
        7897
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6919": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7889,
        7897
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6920": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7889,
        7897
      ],
      "op": "ADD",
      "path": "15"
    },
    "6921": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7889,
        7897
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6922": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7844,
        7872
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6924": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7844,
        7872
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6925": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7889,
        7907
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B15"
    },
    "6928": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7889,
        7907
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6929": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7889,
        7907
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A19"
    },
    "6932": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7889,
        7907
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6933": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7889,
        7907
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6940": {
      "op": "SHL"
    },
    "6941": {
      "op": "SUB"
    },
    "6942": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6943": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "GT",
      "path": "15"
    },
    "6944": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6945": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B2C"
    },
    "6948": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6949": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B2C"
    },
    "6952": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AB9"
    },
    "6955": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7875,
        7908
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6956": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6957": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6959": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6960": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6961": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6962": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6963": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6964": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6965": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6967": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "MUL",
      "path": "15"
    },
    "6968": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6970": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "ADD",
      "path": "15"
    },
    "6971": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6972": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "ADD",
      "path": "15"
    },
    "6973": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6975": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6976": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6977": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6978": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B55"
    },
    "6981": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6982": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6983": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6985": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "ADD",
      "path": "15"
    },
    "6986": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6988": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6989": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "MUL",
      "path": "15"
    },
    "6990": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6991": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "6992": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6993": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "6994": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "ADD",
      "path": "15"
    },
    "6995": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6996": {
      "op": "POP"
    },
    "6997": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7875,
        7908
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6998": {
      "op": "POP"
    },
    "6999": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7935,
        7942
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7000": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7935,
        7942
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7001": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7844,
        7908
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7002": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7844,
        7908
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7003": {
      "op": "POP"
    },
    "7004": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7918,
        8830
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7005": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7948,
        7950
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7006": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7948,
        7956
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7008": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7948,
        7956
      ],
      "op": "ADD",
      "path": "15"
    },
    "7009": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7948,
        7956
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7010": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7944,
        7945
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7011": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7944,
        7956
      ],
      "op": "LT",
      "path": "15"
    },
    "7012": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7918,
        8830
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7013": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7918,
        8830
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E88"
    },
    "7016": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7918,
        8830
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7017": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7977,
        8002
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7019": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8070,
        8072
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7020": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8070,
        8083
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "7022": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8070,
        8083
      ],
      "op": "ADD",
      "path": "15"
    },
    "7023": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8070,
        8083
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7024": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8084,
        8086
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7025": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8084,
        8091
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7027": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8084,
        8091
      ],
      "op": "ADD",
      "path": "15"
    },
    "7028": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8084,
        8091
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7029": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8070,
        8092
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7030": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8070,
        8092
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7031": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8070,
        8092
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7032": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8070,
        8092
      ],
      "op": "LT",
      "path": "15"
    },
    "7033": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8070,
        8092
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B84"
    },
    "7036": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8070,
        8092
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7037": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8070,
        8092
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B84"
    },
    "7040": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8070,
        8092
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "7043": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8070,
        8092
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7044": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8070,
        8092
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7045": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8070,
        8092
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7047": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8070,
        8092
      ],
      "op": "MUL",
      "path": "15"
    },
    "7048": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8070,
        8092
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7050": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8070,
        8092
      ],
      "op": "ADD",
      "path": "15"
    },
    "7051": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8070,
        8092
      ],
      "op": "ADD",
      "path": "15"
    },
    "7052": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8070,
        8092
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7053": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8114,
        8116
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7054": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8114,
        8124
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "7056": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8114,
        8124
      ],
      "op": "ADD",
      "path": "15"
    },
    "7057": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8114,
        8124
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7058": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8125,
        8126
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7059": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8114,
        8127
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7060": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8114,
        8127
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7061": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8114,
        8127
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7062": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8114,
        8127
      ],
      "op": "LT",
      "path": "15"
    },
    "7063": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8114,
        8127
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BA2"
    },
    "7066": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8114,
        8127
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7067": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8114,
        8127
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BA2"
    },
    "7070": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8114,
        8127
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "7073": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8114,
        8127
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7074": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8114,
        8127
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7075": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8114,
        8127
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7077": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8114,
        8127
      ],
      "op": "MUL",
      "path": "15"
    },
    "7078": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8114,
        8127
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7080": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8114,
        8127
      ],
      "op": "ADD",
      "path": "15"
    },
    "7081": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8114,
        8127
      ],
      "op": "ADD",
      "path": "15"
    },
    "7082": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8114,
        8127
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7083": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8149,
        8151
      ],
      "op": "DUP6",
      "path": "15"
    },
    "7084": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8149,
        8161
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "7087": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8149,
        8161
      ],
      "op": "ADD",
      "path": "15"
    },
    "7088": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8149,
        8161
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7089": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8162,
        8163
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7090": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8149,
        8164
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7091": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8149,
        8164
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7092": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8149,
        8164
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7093": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8149,
        8164
      ],
      "op": "LT",
      "path": "15"
    },
    "7094": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8149,
        8164
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BC1"
    },
    "7097": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8149,
        8164
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7098": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8149,
        8164
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BC1"
    },
    "7101": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8149,
        8164
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "7104": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8149,
        8164
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7105": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8149,
        8164
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7106": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8149,
        8164
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7108": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8149,
        8164
      ],
      "op": "MUL",
      "path": "15"
    },
    "7109": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8149,
        8164
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7111": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8149,
        8164
      ],
      "op": "ADD",
      "path": "15"
    },
    "7112": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8149,
        8164
      ],
      "op": "ADD",
      "path": "15"
    },
    "7113": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8149,
        8164
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7114": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7116": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7117": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7119": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "ADD",
      "path": "15"
    },
    "7120": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BDB"
    },
    "7123": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "7124": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7125": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7126": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7127": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x460D"
    },
    "7130": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8032,
        8182
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7131": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7132": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7134": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7135": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7136": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7138": {
      "op": "NOT"
    },
    "7139": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7140": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7141": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "SUB",
      "path": "15"
    },
    "7142": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "ADD",
      "path": "15"
    },
    "7143": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7144": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7145": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7146": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7147": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7148": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8005,
        8196
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7149": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8005,
        8196
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7150": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7152": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8005,
        8196
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7153": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8005,
        8196
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7154": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8005,
        8196
      ],
      "op": "ADD",
      "path": "15"
    },
    "7155": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8005,
        8196
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "7156": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8210,
        8233
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7158": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8236,
        8263
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7159": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8236,
        8263
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7160": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8236,
        8263
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7161": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8236,
        8244
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "7163": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8236,
        8263
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7164": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8236,
        8263
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7165": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8236,
        8263
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7166": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8236,
        8263
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7167": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8236,
        8263
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7168": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8236,
        8263
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7169": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8236,
        8263
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "7170": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 47,
      "value": "0xE0"
    },
    "7172": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7173": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "ADD",
      "path": "15"
    },
    "7174": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7175": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7176": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7177": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7178": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7179": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8005,
        8196
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7180": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8005,
        8196
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "7181": {
      "op": "POP"
    },
    "7182": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8236,
        8263
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7183": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8236,
        8263
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7184": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C2B"
    },
    "7187": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7188": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8236,
        8263
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7189": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8236,
        8263
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7190": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7191": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8032,
        8182
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7192": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7194": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "AND",
      "path": "15"
    },
    "7195": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "7197": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7198": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "GT",
      "path": "15"
    },
    "7199": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7200": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x931"
    },
    "7203": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7204": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x931"
    },
    "7207": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "7210": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8277,
        8301
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7211": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8277,
        8301
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7212": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 48,
      "value": "0x40"
    },
    "7214": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7215": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7216": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "7218": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7219": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "ADD",
      "path": "15"
    },
    "7220": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7221": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7222": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7223": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7224": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7225": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CFE"
    },
    "7228": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7229": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7230": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8333,
        8340
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7231": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8333,
        8340
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7232": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7233": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7234": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7236": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "AND",
      "path": "15"
    },
    "7237": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "7239": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7240": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "GT",
      "path": "15"
    },
    "7241": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7242": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C55"
    },
    "7245": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7246": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C55"
    },
    "7249": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "7252": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8315,
        8353
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7253": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7254": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "7256": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7257": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "GT",
      "path": "15"
    },
    "7258": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7259": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C66"
    },
    "7262": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7263": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C66"
    },
    "7266": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "7269": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8315,
        8353
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7270": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7271": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7272": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7273": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7274": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7281": {
      "op": "SHL"
    },
    "7282": {
      "op": "SUB"
    },
    "7283": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "7286": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7287": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DIV",
      "path": "15"
    },
    "7288": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "AND",
      "path": "15"
    },
    "7289": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7291": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7292": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "ADD",
      "path": "15"
    },
    "7293": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7294": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7298": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7300": {
      "op": "SHL"
    },
    "7301": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7302": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DIV",
      "path": "15"
    },
    "7303": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7304": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "AND",
      "path": "15"
    },
    "7305": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7307": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7308": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "ADD",
      "path": "15"
    },
    "7309": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7314": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7316": {
      "op": "SHL"
    },
    "7317": {
      "op": "SUB"
    },
    "7318": {
      "op": "NOT"
    },
    "7319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7321": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "7323": {
      "op": "SHL"
    },
    "7324": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7325": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DIV",
      "path": "15"
    },
    "7326": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "7328": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "SHL",
      "path": "15"
    },
    "7329": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "AND",
      "path": "15"
    },
    "7330": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "7332": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7333": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "ADD",
      "path": "15"
    },
    "7334": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7335": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "7338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7340": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7342": {
      "op": "SHL"
    },
    "7343": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7344": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DIV",
      "path": "15"
    },
    "7345": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7346": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "AND",
      "path": "15"
    },
    "7347": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "7349": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP6",
      "path": "15"
    },
    "7350": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "ADD",
      "path": "15"
    },
    "7351": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7354": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7356": {
      "op": "SHL"
    },
    "7357": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7358": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DIV",
      "path": "15"
    },
    "7359": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "AND",
      "path": "15"
    },
    "7360": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "7362": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7363": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "ADD",
      "path": "15"
    },
    "7364": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7365": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "7367": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7368": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7369": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "ADD",
      "path": "15"
    },
    "7370": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7373": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7375": {
      "op": "SHL"
    },
    "7376": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7377": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7378": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DIV",
      "path": "15"
    },
    "7379": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "AND",
      "path": "15"
    },
    "7380": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "7382": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7383": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "GT",
      "path": "15"
    },
    "7384": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7385": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CE4"
    },
    "7388": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7389": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CE4"
    },
    "7392": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "7395": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8315,
        8353
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7396": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7397": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "7399": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7400": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "GT",
      "path": "15"
    },
    "7401": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7402": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CF5"
    },
    "7405": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7406": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CF5"
    },
    "7409": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "7412": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8315,
        8353
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7413": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7414": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7415": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7416": {
      "op": "POP"
    },
    "7417": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8342,
        8352
      ],
      "op": "CALLER",
      "path": "15"
    },
    "7418": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8332
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32D3"
    },
    "7421": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8315,
        8353
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7422": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8315,
        8353
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7423": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8413,
        8432
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 49
    },
    "7424": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8413,
        8432
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7425": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8413,
        8432
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7427": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8413,
        8432
      ],
      "op": "AND",
      "path": "15"
    },
    "7428": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8413,
        8432
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "7430": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8432
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7431": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8432
      ],
      "op": "GT",
      "path": "15"
    },
    "7432": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8432
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7433": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8432
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D14"
    },
    "7436": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8432
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7437": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8432
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D14"
    },
    "7440": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8432
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "7443": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8392,
        8432
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7444": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8432
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7445": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8394
      ],
      "op": "DUP6",
      "path": "15"
    },
    "7446": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8406
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7448": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8406
      ],
      "op": "ADD",
      "path": "15"
    },
    "7449": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8406
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7450": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8407,
        8408
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7451": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8409
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7452": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8409
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7453": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8409
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7454": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8409
      ],
      "op": "LT",
      "path": "15"
    },
    "7455": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8409
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D2A"
    },
    "7458": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8409
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7459": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8409
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D2A"
    },
    "7462": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8409
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "7465": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8392,
        8409
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7466": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8409
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7467": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8409
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7469": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8409
      ],
      "op": "MUL",
      "path": "15"
    },
    "7470": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8409
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7472": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8409
      ],
      "op": "ADD",
      "path": "15"
    },
    "7473": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8409
      ],
      "op": "ADD",
      "path": "15"
    },
    "7474": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8409
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7475": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8432
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "7477": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8432
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7478": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8432
      ],
      "op": "GT",
      "path": "15"
    },
    "7479": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8432
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7480": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8432
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D43"
    },
    "7483": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8432
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7484": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8432
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D43"
    },
    "7487": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8432
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "7490": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8392,
        8432
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7491": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8432
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7492": {
      "branch": 137,
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8432
      ],
      "op": "EQ",
      "path": "15"
    },
    "7493": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8367,
        8493
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D60"
    },
    "7496": {
      "branch": 137,
      "fn": "Registry.handleStopLend",
      "offset": [
        8367,
        8493
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7497": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8367,
        8493
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7499": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8367,
        8493
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7500": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7504": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7506": {
      "op": "SHL"
    },
    "7507": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8367,
        8493
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7508": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8367,
        8493
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7509": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8367,
        8493
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7511": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8367,
        8493
      ],
      "op": "ADD",
      "path": "15"
    },
    "7512": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8367,
        8493
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "7515": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8367,
        8493
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7516": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8367,
        8493
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4743"
    },
    "7519": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8367,
        8493
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7520": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8367,
        8493
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7521": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8554,
        8577
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 50
    },
    "7522": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8554,
        8577
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7525": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7527": {
      "op": "SHL"
    },
    "7528": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8532,
        8550
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7529": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8532,
        8550
      ],
      "op": "DIV",
      "path": "15"
    },
    "7530": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8554,
        8577
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "7533": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8532,
        8550
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7534": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8532,
        8550
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7535": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8532,
        8550
      ],
      "op": "AND",
      "path": "15"
    },
    "7536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7538": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7540": {
      "op": "SHL"
    },
    "7541": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8554,
        8577
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7542": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8554,
        8577
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7543": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8554,
        8577
      ],
      "op": "DIV",
      "path": "15"
    },
    "7544": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8554,
        8577
      ],
      "op": "AND",
      "path": "15"
    },
    "7545": {
      "branch": 138,
      "fn": "Registry.handleStopLend",
      "offset": [
        8532,
        8577
      ],
      "op": "EQ",
      "path": "15"
    },
    "7546": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8507,
        8633
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DBE"
    },
    "7549": {
      "branch": 138,
      "fn": "Registry.handleStopLend",
      "offset": [
        8507,
        8633
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7550": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8507,
        8633
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7552": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8507,
        8633
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7553": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7557": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7559": {
      "op": "SHL"
    },
    "7560": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8507,
        8633
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7561": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8507,
        8633
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7564": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8507,
        8633
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7566": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8507,
        8633
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7567": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8507,
        8633
      ],
      "op": "ADD",
      "path": "15"
    },
    "7568": {
      "op": "MSTORE"
    },
    "7569": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "7571": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7573": {
      "op": "DUP3"
    },
    "7574": {
      "op": "ADD"
    },
    "7575": {
      "op": "MSTORE"
    },
    "7576": {
      "op": "PUSH22",
      "value": "0x14995391950E8E9858DD1A5D995B1E481C995B9D1959"
    },
    "7599": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "7601": {
      "op": "SHL"
    },
    "7602": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7604": {
      "op": "DUP3"
    },
    "7605": {
      "op": "ADD"
    },
    "7606": {
      "op": "MSTORE"
    },
    "7607": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7609": {
      "op": "ADD"
    },
    "7610": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8507,
        8633
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "7613": {
      "op": "JUMP"
    },
    "7614": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8507,
        8633
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7615": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8674,
        8692
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 51
    },
    "7616": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8674,
        8692
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7617": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8663,
        8670
      ],
      "op": "DUP6",
      "path": "15"
    },
    "7618": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8663,
        8670
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7621": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7623": {
      "op": "SHL"
    },
    "7624": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8674,
        8692
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7625": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8674,
        8692
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7626": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8674,
        8692
      ],
      "op": "DIV",
      "path": "15"
    },
    "7627": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8674,
        8692
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "7630": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8674,
        8692
      ],
      "op": "AND",
      "path": "15"
    },
    "7631": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8674,
        8692
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7632": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8658
      ],
      "op": "DUP6",
      "path": "15"
    },
    "7633": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8658
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7634": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8659,
        8670
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DDB"
    },
    "7637": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8659,
        8670
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7638": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8659,
        8660
      ],
      "op": "DUP7",
      "path": "15"
    },
    "7639": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8659,
        8670
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A19"
    },
    "7642": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8659,
        8670
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7643": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8659,
        8670
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7644": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8671
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7645": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8671
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7646": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8671
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7647": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8671
      ],
      "op": "LT",
      "path": "15"
    },
    "7648": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8671
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DEB"
    },
    "7651": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8671
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7652": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8671
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DEB"
    },
    "7655": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8671
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "7658": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8647,
        8671
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7659": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8671
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7660": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8671
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7662": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8671
      ],
      "op": "MUL",
      "path": "15"
    },
    "7663": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8671
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7665": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8671
      ],
      "op": "ADD",
      "path": "15"
    },
    "7666": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8671
      ],
      "op": "ADD",
      "path": "15"
    },
    "7667": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8692
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7668": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8692
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7669": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8692
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7670": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8692
      ],
      "op": "POP",
      "path": "15"
    },
    "7671": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8647,
        8692
      ],
      "op": "POP",
      "path": "15"
    },
    "7672": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8730,
        8732
      ],
      "op": "DUP5",
      "path": "15",
      "statement": 52
    },
    "7673": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8730,
        8742
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "7676": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8730,
        8742
      ],
      "op": "ADD",
      "path": "15"
    },
    "7677": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8730,
        8742
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7678": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8743,
        8744
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7679": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8730,
        8745
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7680": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8730,
        8745
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7681": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8730,
        8745
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7682": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8730,
        8745
      ],
      "op": "LT",
      "path": "15"
    },
    "7683": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8730,
        8745
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E0E"
    },
    "7686": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8730,
        8745
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7687": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8730,
        8745
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E0E"
    },
    "7690": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8730,
        8745
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "7693": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8730,
        8745
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7694": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8730,
        8745
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7695": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8730,
        8745
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7697": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8730,
        8745
      ],
      "op": "MUL",
      "path": "15"
    },
    "7698": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8730,
        8745
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7700": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8730,
        8745
      ],
      "op": "ADD",
      "path": "15"
    },
    "7701": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8730,
        8745
      ],
      "op": "ADD",
      "path": "15"
    },
    "7702": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8730,
        8745
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7703": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8711,
        8771
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xD0234BC8DD7E933F60CBC1E90FC139A8A9683AF1CB92743607DAFB9DFB70059B"
    },
    "7736": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8754,
        8769
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "7737": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8711,
        8771
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7739": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8711,
        8771
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7740": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8711,
        8771
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E51"
    },
    "7743": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8711,
        8771
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7744": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8711,
        8771
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7745": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "7750": {
      "op": "SWAP2"
    },
    "7751": {
      "op": "SWAP1"
    },
    "7752": {
      "op": "SWAP2"
    },
    "7753": {
      "op": "AND"
    },
    "7754": {
      "op": "DUP2"
    },
    "7755": {
      "op": "MSTORE"
    },
    "7756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7758": {
      "op": "ADD"
    },
    "7759": {
      "op": "SWAP1"
    },
    "7760": {
      "op": "JUMP"
    },
    "7761": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8711,
        8771
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7762": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8711,
        8771
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7764": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8711,
        8771
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7765": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8711,
        8771
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7766": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8711,
        8771
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7767": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8711,
        8771
      ],
      "op": "SUB",
      "path": "15"
    },
    "7768": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8711,
        8771
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7769": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8711,
        8771
      ],
      "op": "LOG2",
      "path": "15"
    },
    "7770": {
      "op": "POP"
    },
    "7771": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8792,
        8819
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 53,
      "value": "0x0"
    },
    "7773": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8792,
        8819
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7774": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8792,
        8819
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7775": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8792,
        8819
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7776": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8792,
        8800
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "7778": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8792,
        8819
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7780": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8792,
        8819
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7781": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8792,
        8819
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7783": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8792,
        8819
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7784": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8792,
        8819
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "7785": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8785,
        8819
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7786": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8785,
        8819
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7791": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "7793": {
      "op": "SHL"
    },
    "7794": {
      "op": "SUB"
    },
    "7795": {
      "op": "NOT"
    },
    "7796": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8785,
        8819
      ],
      "op": "AND",
      "path": "15"
    },
    "7797": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8785,
        8819
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7798": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8785,
        8819
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "7799": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7958,
        7961
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 54
    },
    "7800": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7958,
        7961
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E80"
    },
    "7803": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7958,
        7961
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7804": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7958,
        7961
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A5C"
    },
    "7807": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7958,
        7961
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7808": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7958,
        7961
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7809": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7958,
        7961
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7810": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7958,
        7961
      ],
      "op": "POP",
      "path": "15"
    },
    "7811": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7958,
        7961
      ],
      "op": "POP",
      "path": "15"
    },
    "7812": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7918,
        8830
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B5C"
    },
    "7815": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7918,
        8830
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7816": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7918,
        8830
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7817": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7918,
        8830
      ],
      "op": "POP",
      "path": "15"
    },
    "7818": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8839,
        9047
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 55,
      "value": "0xD69"
    },
    "7821": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8865,
        8867
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7822": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8889,
        8893
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "7823": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8908,
        8918
      ],
      "op": "CALLER",
      "path": "15"
    },
    "7824": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8932,
        8974
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EA8"
    },
    "7827": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8941,
        8943
      ],
      "op": "DUP7",
      "path": "15"
    },
    "7828": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8941,
        8951
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "7830": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8941,
        8951
      ],
      "op": "ADD",
      "path": "15"
    },
    "7831": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8941,
        8951
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7832": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8953,
        8955
      ],
      "op": "DUP8",
      "path": "15"
    },
    "7833": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8953,
        8960
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7835": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8953,
        8960
      ],
      "op": "ADD",
      "path": "15"
    },
    "7836": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8953,
        8960
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7837": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8962,
        8964
      ],
      "op": "DUP9",
      "path": "15"
    },
    "7838": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8962,
        8970
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7840": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8962,
        8970
      ],
      "op": "ADD",
      "path": "15"
    },
    "7841": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8962,
        8970
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7842": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8972,
        8973
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7844": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8932,
        8940
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E8B"
    },
    "7847": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8932,
        8974
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7848": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8932,
        8974
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7849": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9010,
        9017
      ],
      "op": "DUP7",
      "path": "15"
    },
    "7850": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9010,
        9017
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7851": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9019,
        9027
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7853": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9019,
        9027
      ],
      "op": "DUP9",
      "path": "15"
    },
    "7854": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9019,
        9027
      ],
      "op": "ADD",
      "path": "15"
    },
    "7855": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9019,
        9027
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7856": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8988,
        9037
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15C3"
    },
    "7859": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8988,
        9037
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7860": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9008
      ],
      "op": "DUP9",
      "path": "15"
    },
    "7861": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9008
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7862": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9010,
        9017
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7863": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8988,
        8996
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E8B"
    },
    "7866": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8988,
        9037
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7867": {
      "fn": "Registry.handleRent",
      "offset": [
        9060,
        11565
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7868": {
      "fn": "Registry.handleRent",
      "offset": [
        9145,
        9152
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7869": {
      "fn": "Registry.handleRent",
      "offset": [
        9145,
        9152
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7870": {
      "fn": "Registry.handleRent",
      "offset": [
        9128,
        11559
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7871": {
      "fn": "Registry.handleRent",
      "offset": [
        9158,
        9160
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7872": {
      "fn": "Registry.handleRent",
      "offset": [
        9158,
        9166
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7874": {
      "fn": "Registry.handleRent",
      "offset": [
        9158,
        9166
      ],
      "op": "ADD",
      "path": "15"
    },
    "7875": {
      "fn": "Registry.handleRent",
      "offset": [
        9158,
        9166
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7876": {
      "fn": "Registry.handleRent",
      "offset": [
        9154,
        9155
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7877": {
      "fn": "Registry.handleRent",
      "offset": [
        9154,
        9166
      ],
      "op": "LT",
      "path": "15"
    },
    "7878": {
      "fn": "Registry.handleRent",
      "offset": [
        9128,
        11559
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7879": {
      "fn": "Registry.handleRent",
      "offset": [
        9128,
        11559
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD69"
    },
    "7882": {
      "fn": "Registry.handleRent",
      "offset": [
        9128,
        11559
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7883": {
      "fn": "Registry.handleRent",
      "offset": [
        9187,
        9212
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7885": {
      "fn": "Registry.handleRent",
      "offset": [
        9280,
        9282
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7886": {
      "fn": "Registry.handleRent",
      "offset": [
        9280,
        9293
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "7888": {
      "fn": "Registry.handleRent",
      "offset": [
        9280,
        9293
      ],
      "op": "ADD",
      "path": "15"
    },
    "7889": {
      "fn": "Registry.handleRent",
      "offset": [
        9280,
        9293
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7890": {
      "fn": "Registry.handleRent",
      "offset": [
        9294,
        9296
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7891": {
      "fn": "Registry.handleRent",
      "offset": [
        9294,
        9301
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7893": {
      "fn": "Registry.handleRent",
      "offset": [
        9294,
        9301
      ],
      "op": "ADD",
      "path": "15"
    },
    "7894": {
      "fn": "Registry.handleRent",
      "offset": [
        9294,
        9301
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7895": {
      "fn": "Registry.handleRent",
      "offset": [
        9280,
        9302
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7896": {
      "fn": "Registry.handleRent",
      "offset": [
        9280,
        9302
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7897": {
      "fn": "Registry.handleRent",
      "offset": [
        9280,
        9302
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7898": {
      "fn": "Registry.handleRent",
      "offset": [
        9280,
        9302
      ],
      "op": "LT",
      "path": "15"
    },
    "7899": {
      "fn": "Registry.handleRent",
      "offset": [
        9280,
        9302
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EE6"
    },
    "7902": {
      "fn": "Registry.handleRent",
      "offset": [
        9280,
        9302
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7903": {
      "fn": "Registry.handleRent",
      "offset": [
        9280,
        9302
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EE6"
    },
    "7906": {
      "fn": "Registry.handleRent",
      "offset": [
        9280,
        9302
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "7909": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9280,
        9302
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7910": {
      "fn": "Registry.handleRent",
      "offset": [
        9280,
        9302
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7911": {
      "fn": "Registry.handleRent",
      "offset": [
        9280,
        9302
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7913": {
      "fn": "Registry.handleRent",
      "offset": [
        9280,
        9302
      ],
      "op": "MUL",
      "path": "15"
    },
    "7914": {
      "fn": "Registry.handleRent",
      "offset": [
        9280,
        9302
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7916": {
      "fn": "Registry.handleRent",
      "offset": [
        9280,
        9302
      ],
      "op": "ADD",
      "path": "15"
    },
    "7917": {
      "fn": "Registry.handleRent",
      "offset": [
        9280,
        9302
      ],
      "op": "ADD",
      "path": "15"
    },
    "7918": {
      "fn": "Registry.handleRent",
      "offset": [
        9280,
        9302
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7919": {
      "fn": "Registry.handleRent",
      "offset": [
        9324,
        9326
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7920": {
      "fn": "Registry.handleRent",
      "offset": [
        9324,
        9334
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "7922": {
      "fn": "Registry.handleRent",
      "offset": [
        9324,
        9334
      ],
      "op": "ADD",
      "path": "15"
    },
    "7923": {
      "fn": "Registry.handleRent",
      "offset": [
        9324,
        9334
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7924": {
      "fn": "Registry.handleRent",
      "offset": [
        9335,
        9336
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7925": {
      "fn": "Registry.handleRent",
      "offset": [
        9324,
        9337
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7926": {
      "fn": "Registry.handleRent",
      "offset": [
        9324,
        9337
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7927": {
      "fn": "Registry.handleRent",
      "offset": [
        9324,
        9337
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7928": {
      "fn": "Registry.handleRent",
      "offset": [
        9324,
        9337
      ],
      "op": "LT",
      "path": "15"
    },
    "7929": {
      "fn": "Registry.handleRent",
      "offset": [
        9324,
        9337
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F04"
    },
    "7932": {
      "fn": "Registry.handleRent",
      "offset": [
        9324,
        9337
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7933": {
      "fn": "Registry.handleRent",
      "offset": [
        9324,
        9337
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F04"
    },
    "7936": {
      "fn": "Registry.handleRent",
      "offset": [
        9324,
        9337
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "7939": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9324,
        9337
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7940": {
      "fn": "Registry.handleRent",
      "offset": [
        9324,
        9337
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7941": {
      "fn": "Registry.handleRent",
      "offset": [
        9324,
        9337
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7943": {
      "fn": "Registry.handleRent",
      "offset": [
        9324,
        9337
      ],
      "op": "MUL",
      "path": "15"
    },
    "7944": {
      "fn": "Registry.handleRent",
      "offset": [
        9324,
        9337
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7946": {
      "fn": "Registry.handleRent",
      "offset": [
        9324,
        9337
      ],
      "op": "ADD",
      "path": "15"
    },
    "7947": {
      "fn": "Registry.handleRent",
      "offset": [
        9324,
        9337
      ],
      "op": "ADD",
      "path": "15"
    },
    "7948": {
      "fn": "Registry.handleRent",
      "offset": [
        9324,
        9337
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7949": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9361
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7950": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9371
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "7953": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9371
      ],
      "op": "ADD",
      "path": "15"
    },
    "7954": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9371
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7955": {
      "fn": "Registry.handleRent",
      "offset": [
        9372,
        9373
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7956": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9374
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7957": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9374
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7958": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9374
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7959": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9374
      ],
      "op": "LT",
      "path": "15"
    },
    "7960": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9374
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F23"
    },
    "7963": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9374
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7964": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9374
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F23"
    },
    "7967": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9374
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "7970": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9359,
        9374
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7971": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9374
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7972": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9374
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7974": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9374
      ],
      "op": "MUL",
      "path": "15"
    },
    "7975": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9374
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7977": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9374
      ],
      "op": "ADD",
      "path": "15"
    },
    "7978": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9374
      ],
      "op": "ADD",
      "path": "15"
    },
    "7979": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9374
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7980": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7982": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7983": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7985": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "ADD",
      "path": "15"
    },
    "7986": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F3D"
    },
    "7989": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "7990": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7991": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7992": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7993": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x460D"
    },
    "7996": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9242,
        9392
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7997": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7998": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8000": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8001": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8003": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8004": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8005": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "SUB",
      "path": "15"
    },
    "8006": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "SUB",
      "path": "15"
    },
    "8007": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8008": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8009": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8010": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8012": {
      "fn": "Registry.handleRent",
      "offset": [
        9242,
        9392
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8013": {
      "fn": "Registry.handleRent",
      "offset": [
        9215,
        9406
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8014": {
      "fn": "Registry.handleRent",
      "offset": [
        9215,
        9406
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8015": {
      "fn": "Registry.handleRent",
      "offset": [
        9215,
        9406
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8016": {
      "fn": "Registry.handleRent",
      "offset": [
        9215,
        9406
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8018": {
      "fn": "Registry.handleRent",
      "offset": [
        9215,
        9406
      ],
      "op": "ADD",
      "path": "15"
    },
    "8019": {
      "fn": "Registry.handleRent",
      "offset": [
        9215,
        9406
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "8020": {
      "fn": "Registry.handleRent",
      "offset": [
        9187,
        9406
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8021": {
      "fn": "Registry.handleRent",
      "offset": [
        9187,
        9406
      ],
      "op": "POP",
      "path": "15"
    },
    "8022": {
      "fn": "Registry.handleRent",
      "offset": [
        9420,
        9445
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8024": {
      "fn": "Registry.handleRent",
      "offset": [
        9513,
        9515
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8025": {
      "fn": "Registry.handleRent",
      "offset": [
        9513,
        9526
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "8027": {
      "fn": "Registry.handleRent",
      "offset": [
        9513,
        9526
      ],
      "op": "ADD",
      "path": "15"
    },
    "8028": {
      "fn": "Registry.handleRent",
      "offset": [
        9513,
        9526
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8029": {
      "fn": "Registry.handleRent",
      "offset": [
        9527,
        9529
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8030": {
      "fn": "Registry.handleRent",
      "offset": [
        9527,
        9534
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8032": {
      "fn": "Registry.handleRent",
      "offset": [
        9527,
        9534
      ],
      "op": "ADD",
      "path": "15"
    },
    "8033": {
      "fn": "Registry.handleRent",
      "offset": [
        9527,
        9534
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8034": {
      "fn": "Registry.handleRent",
      "offset": [
        9513,
        9535
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8035": {
      "fn": "Registry.handleRent",
      "offset": [
        9513,
        9535
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8036": {
      "fn": "Registry.handleRent",
      "offset": [
        9513,
        9535
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8037": {
      "fn": "Registry.handleRent",
      "offset": [
        9513,
        9535
      ],
      "op": "LT",
      "path": "15"
    },
    "8038": {
      "fn": "Registry.handleRent",
      "offset": [
        9513,
        9535
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F71"
    },
    "8041": {
      "fn": "Registry.handleRent",
      "offset": [
        9513,
        9535
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8042": {
      "fn": "Registry.handleRent",
      "offset": [
        9513,
        9535
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F71"
    },
    "8045": {
      "fn": "Registry.handleRent",
      "offset": [
        9513,
        9535
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "8048": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9513,
        9535
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8049": {
      "fn": "Registry.handleRent",
      "offset": [
        9513,
        9535
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8050": {
      "fn": "Registry.handleRent",
      "offset": [
        9513,
        9535
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8052": {
      "fn": "Registry.handleRent",
      "offset": [
        9513,
        9535
      ],
      "op": "MUL",
      "path": "15"
    },
    "8053": {
      "fn": "Registry.handleRent",
      "offset": [
        9513,
        9535
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8055": {
      "fn": "Registry.handleRent",
      "offset": [
        9513,
        9535
      ],
      "op": "ADD",
      "path": "15"
    },
    "8056": {
      "fn": "Registry.handleRent",
      "offset": [
        9513,
        9535
      ],
      "op": "ADD",
      "path": "15"
    },
    "8057": {
      "fn": "Registry.handleRent",
      "offset": [
        9513,
        9535
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8058": {
      "fn": "Registry.handleRent",
      "offset": [
        9557,
        9559
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8059": {
      "fn": "Registry.handleRent",
      "offset": [
        9557,
        9567
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "8061": {
      "fn": "Registry.handleRent",
      "offset": [
        9557,
        9567
      ],
      "op": "ADD",
      "path": "15"
    },
    "8062": {
      "fn": "Registry.handleRent",
      "offset": [
        9557,
        9567
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8063": {
      "fn": "Registry.handleRent",
      "offset": [
        9568,
        9569
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8064": {
      "fn": "Registry.handleRent",
      "offset": [
        9557,
        9570
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8065": {
      "fn": "Registry.handleRent",
      "offset": [
        9557,
        9570
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8066": {
      "fn": "Registry.handleRent",
      "offset": [
        9557,
        9570
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8067": {
      "fn": "Registry.handleRent",
      "offset": [
        9557,
        9570
      ],
      "op": "LT",
      "path": "15"
    },
    "8068": {
      "fn": "Registry.handleRent",
      "offset": [
        9557,
        9570
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F8F"
    },
    "8071": {
      "fn": "Registry.handleRent",
      "offset": [
        9557,
        9570
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8072": {
      "fn": "Registry.handleRent",
      "offset": [
        9557,
        9570
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F8F"
    },
    "8075": {
      "fn": "Registry.handleRent",
      "offset": [
        9557,
        9570
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "8078": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9557,
        9570
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8079": {
      "fn": "Registry.handleRent",
      "offset": [
        9557,
        9570
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8080": {
      "fn": "Registry.handleRent",
      "offset": [
        9557,
        9570
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8082": {
      "fn": "Registry.handleRent",
      "offset": [
        9557,
        9570
      ],
      "op": "MUL",
      "path": "15"
    },
    "8083": {
      "fn": "Registry.handleRent",
      "offset": [
        9557,
        9570
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8085": {
      "fn": "Registry.handleRent",
      "offset": [
        9557,
        9570
      ],
      "op": "ADD",
      "path": "15"
    },
    "8086": {
      "fn": "Registry.handleRent",
      "offset": [
        9557,
        9570
      ],
      "op": "ADD",
      "path": "15"
    },
    "8087": {
      "fn": "Registry.handleRent",
      "offset": [
        9557,
        9570
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8088": {
      "fn": "Registry.handleRent",
      "offset": [
        9592,
        9601
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8090": {
      "fn": "Registry.handleRent",
      "offset": [
        9592,
        9601
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8091": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8093": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8094": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8096": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "ADD",
      "path": "15"
    },
    "8097": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FAC"
    },
    "8100": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "8101": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8102": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8103": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8104": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x460D"
    },
    "8107": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9475,
        9619
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8108": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8109": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8111": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8112": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8113": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8115": {
      "op": "NOT"
    },
    "8116": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8117": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8118": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "SUB",
      "path": "15"
    },
    "8119": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "ADD",
      "path": "15"
    },
    "8120": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8121": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8122": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8123": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8124": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8125": {
      "fn": "Registry.handleRent",
      "offset": [
        9448,
        9633
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8126": {
      "fn": "Registry.handleRent",
      "offset": [
        9448,
        9633
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8127": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8129": {
      "fn": "Registry.handleRent",
      "offset": [
        9448,
        9633
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8130": {
      "fn": "Registry.handleRent",
      "offset": [
        9448,
        9633
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8131": {
      "fn": "Registry.handleRent",
      "offset": [
        9448,
        9633
      ],
      "op": "ADD",
      "path": "15"
    },
    "8132": {
      "fn": "Registry.handleRent",
      "offset": [
        9448,
        9633
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "8133": {
      "fn": "Registry.handleRent",
      "offset": [
        9647,
        9680
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8135": {
      "fn": "Registry.handleRent",
      "offset": [
        9683,
        9710
      ],
      "op": "DUP7",
      "path": "15"
    },
    "8136": {
      "fn": "Registry.handleRent",
      "offset": [
        9683,
        9710
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8137": {
      "fn": "Registry.handleRent",
      "offset": [
        9683,
        9710
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8138": {
      "fn": "Registry.handleRent",
      "offset": [
        9683,
        9691
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "8140": {
      "fn": "Registry.handleRent",
      "offset": [
        9683,
        9710
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8141": {
      "fn": "Registry.handleRent",
      "offset": [
        9683,
        9710
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8142": {
      "fn": "Registry.handleRent",
      "offset": [
        9683,
        9710
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8143": {
      "fn": "Registry.handleRent",
      "offset": [
        9683,
        9710
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8144": {
      "fn": "Registry.handleRent",
      "offset": [
        9683,
        9710
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "8145": {
      "fn": "Registry.handleRent",
      "offset": [
        9760,
        9787
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8146": {
      "fn": "Registry.handleRent",
      "offset": [
        9760,
        9787
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8147": {
      "fn": "Registry.handleRent",
      "offset": [
        9760,
        9787
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8148": {
      "fn": "Registry.handleRent",
      "offset": [
        9760,
        9768
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "8150": {
      "fn": "Registry.handleRent",
      "offset": [
        9760,
        9787
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8151": {
      "fn": "Registry.handleRent",
      "offset": [
        9760,
        9787
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "8152": {
      "fn": "Registry.handleRent",
      "offset": [
        9760,
        9787
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8153": {
      "fn": "Registry.handleRent",
      "offset": [
        9760,
        9787
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8154": {
      "fn": "Registry.handleRent",
      "offset": [
        9760,
        9787
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8155": {
      "fn": "Registry.handleRent",
      "offset": [
        9760,
        9787
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "8156": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 56,
      "value": "0xE0"
    },
    "8158": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "DUP6",
      "path": "15"
    },
    "8159": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "ADD",
      "path": "15"
    },
    "8160": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8161": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "8162": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8163": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8164": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8165": {
      "fn": "Registry.handleRent",
      "offset": [
        9448,
        9633
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8166": {
      "fn": "Registry.handleRent",
      "offset": [
        9448,
        9633
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "8167": {
      "op": "POP"
    },
    "8168": {
      "fn": "Registry.handleRent",
      "offset": [
        9683,
        9710
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8169": {
      "fn": "Registry.handleRent",
      "offset": [
        9683,
        9710
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8170": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2005"
    },
    "8173": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8174": {
      "fn": "Registry.handleRent",
      "offset": [
        9683,
        9710
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8175": {
      "fn": "Registry.handleRent",
      "offset": [
        9683,
        9710
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8176": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8177": {
      "fn": "Registry.handleRent",
      "offset": [
        9475,
        9619
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8178": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8180": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "AND",
      "path": "15"
    },
    "8181": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8183": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8184": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "GT",
      "path": "15"
    },
    "8185": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8186": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x931"
    },
    "8189": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8190": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x931"
    },
    "8193": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "8196": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9801,
        9825
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8197": {
      "fn": "Registry.handleRent",
      "offset": [
        9801,
        9825
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8198": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 57,
      "value": "0x40"
    },
    "8200": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8201": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8202": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "8204": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8205": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "ADD",
      "path": "15"
    },
    "8206": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8207": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8208": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8209": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8216": {
      "op": "SHL"
    },
    "8217": {
      "op": "SUB"
    },
    "8218": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8219": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "AND",
      "path": "15"
    },
    "8220": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8221": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8226": {
      "op": "SHL"
    },
    "8227": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8228": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "DIV",
      "path": "15"
    },
    "8229": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8231": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "AND",
      "path": "15"
    },
    "8232": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8234": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8235": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "ADD",
      "path": "15"
    },
    "8236": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8239": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8241": {
      "op": "SHL"
    },
    "8242": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8243": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "DIV",
      "path": "15"
    },
    "8244": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "8249": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "AND",
      "path": "15"
    },
    "8250": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8251": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8252": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "ADD",
      "path": "15"
    },
    "8253": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8254": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8255": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8256": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8259": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "8261": {
      "op": "SHL"
    },
    "8262": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8263": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8264": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "DIV",
      "path": "15"
    },
    "8265": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "8268": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "AND",
      "path": "15"
    },
    "8269": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "8271": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8272": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "ADD",
      "path": "15"
    },
    "8273": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8274": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x205A"
    },
    "8277": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8278": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9851
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x332C"
    },
    "8281": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9839,
        9860
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8282": {
      "fn": "Registry.handleRent",
      "offset": [
        9839,
        9860
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8283": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 58,
      "value": "0x40"
    },
    "8285": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8286": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8287": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "8289": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8290": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "ADD",
      "path": "15"
    },
    "8291": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8292": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8293": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8294": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8295": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8296": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x212F"
    },
    "8299": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8300": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8301": {
      "fn": "Registry.handleRent",
      "offset": [
        9891,
        9898
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8302": {
      "fn": "Registry.handleRent",
      "offset": [
        9891,
        9898
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8303": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8304": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8305": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8307": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "AND",
      "path": "15"
    },
    "8308": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8310": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8311": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "GT",
      "path": "15"
    },
    "8312": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8313": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2084"
    },
    "8316": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8317": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2084"
    },
    "8320": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "8323": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9874,
        9918
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8324": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8325": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8327": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8328": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "GT",
      "path": "15"
    },
    "8329": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8330": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2095"
    },
    "8333": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8334": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2095"
    },
    "8337": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "8340": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9874,
        9918
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8341": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8342": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8343": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8344": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8345": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8352": {
      "op": "SHL"
    },
    "8353": {
      "op": "SUB"
    },
    "8354": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "8357": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8358": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DIV",
      "path": "15"
    },
    "8359": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "AND",
      "path": "15"
    },
    "8360": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8362": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8363": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "ADD",
      "path": "15"
    },
    "8364": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8365": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8369": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8371": {
      "op": "SHL"
    },
    "8372": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8373": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DIV",
      "path": "15"
    },
    "8374": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8375": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "AND",
      "path": "15"
    },
    "8376": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8378": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8379": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "ADD",
      "path": "15"
    },
    "8380": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8385": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8387": {
      "op": "SHL"
    },
    "8388": {
      "op": "SUB"
    },
    "8389": {
      "op": "NOT"
    },
    "8390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8392": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "8394": {
      "op": "SHL"
    },
    "8395": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8396": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DIV",
      "path": "15"
    },
    "8397": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "8399": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "SHL",
      "path": "15"
    },
    "8400": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "AND",
      "path": "15"
    },
    "8401": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "8403": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8404": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "ADD",
      "path": "15"
    },
    "8405": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8406": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "8409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8411": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8413": {
      "op": "SHL"
    },
    "8414": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8415": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DIV",
      "path": "15"
    },
    "8416": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8417": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "AND",
      "path": "15"
    },
    "8418": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "8420": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP6",
      "path": "15"
    },
    "8421": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "ADD",
      "path": "15"
    },
    "8422": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8425": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8427": {
      "op": "SHL"
    },
    "8428": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8429": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DIV",
      "path": "15"
    },
    "8430": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "AND",
      "path": "15"
    },
    "8431": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "8433": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8434": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "ADD",
      "path": "15"
    },
    "8435": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8436": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "8438": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8439": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8440": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "ADD",
      "path": "15"
    },
    "8441": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8444": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8446": {
      "op": "SHL"
    },
    "8447": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8448": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8449": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DIV",
      "path": "15"
    },
    "8450": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "AND",
      "path": "15"
    },
    "8451": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "8453": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8454": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "GT",
      "path": "15"
    },
    "8455": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8456": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2113"
    },
    "8459": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8460": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2113"
    },
    "8463": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "8466": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9874,
        9918
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8467": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8468": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "8470": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8471": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "GT",
      "path": "15"
    },
    "8472": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8473": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2124"
    },
    "8476": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8477": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2124"
    },
    "8480": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "8483": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9874,
        9918
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8484": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8485": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8486": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8487": {
      "op": "POP"
    },
    "8488": {
      "fn": "Registry.handleRent",
      "offset": [
        9900,
        9902
      ],
      "op": "DUP8",
      "path": "15"
    },
    "8489": {
      "fn": "Registry.handleRent",
      "offset": [
        9904,
        9905
      ],
      "op": "DUP8",
      "path": "15"
    },
    "8490": {
      "fn": "Registry.handleRent",
      "offset": [
        9907,
        9917
      ],
      "op": "CALLER",
      "path": "15"
    },
    "8491": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9890
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x33DF"
    },
    "8494": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9874,
        9918
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8495": {
      "fn": "Registry.handleRent",
      "offset": [
        9874,
        9918
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8496": {
      "fn": "Registry.handleRent",
      "offset": [
        9978,
        9997
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 59
    },
    "8497": {
      "fn": "Registry.handleRent",
      "offset": [
        9978,
        9997
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8498": {
      "fn": "Registry.handleRent",
      "offset": [
        9978,
        9997
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8500": {
      "fn": "Registry.handleRent",
      "offset": [
        9978,
        9997
      ],
      "op": "AND",
      "path": "15"
    },
    "8501": {
      "fn": "Registry.handleRent",
      "offset": [
        9978,
        9997
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8503": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9997
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8504": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9997
      ],
      "op": "GT",
      "path": "15"
    },
    "8505": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9997
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8506": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9997
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2145"
    },
    "8509": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9997
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8510": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9997
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2145"
    },
    "8513": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9997
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "8516": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9957,
        9997
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8517": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9997
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8518": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9959
      ],
      "op": "DUP7",
      "path": "15"
    },
    "8519": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9971
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8521": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9971
      ],
      "op": "ADD",
      "path": "15"
    },
    "8522": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9971
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8523": {
      "fn": "Registry.handleRent",
      "offset": [
        9972,
        9973
      ],
      "op": "DUP7",
      "path": "15"
    },
    "8524": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9974
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8525": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9974
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8526": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9974
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8527": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9974
      ],
      "op": "LT",
      "path": "15"
    },
    "8528": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9974
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x215B"
    },
    "8531": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9974
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8532": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9974
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x215B"
    },
    "8535": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9974
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "8538": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9957,
        9974
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8539": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9974
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8540": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9974
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8542": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9974
      ],
      "op": "MUL",
      "path": "15"
    },
    "8543": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9974
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8545": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9974
      ],
      "op": "ADD",
      "path": "15"
    },
    "8546": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9974
      ],
      "op": "ADD",
      "path": "15"
    },
    "8547": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9974
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8548": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9997
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8550": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9997
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8551": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9997
      ],
      "op": "GT",
      "path": "15"
    },
    "8552": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9997
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8553": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9997
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2174"
    },
    "8556": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9997
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8557": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9997
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2174"
    },
    "8560": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9997
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "8563": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9957,
        9997
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8564": {
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9997
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8565": {
      "branch": 139,
      "fn": "Registry.handleRent",
      "offset": [
        9957,
        9997
      ],
      "op": "EQ",
      "path": "15"
    },
    "8566": {
      "fn": "Registry.handleRent",
      "offset": [
        9932,
        10058
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2191"
    },
    "8569": {
      "branch": 139,
      "fn": "Registry.handleRent",
      "offset": [
        9932,
        10058
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8570": {
      "fn": "Registry.handleRent",
      "offset": [
        9932,
        10058
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8572": {
      "fn": "Registry.handleRent",
      "offset": [
        9932,
        10058
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8573": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8577": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8579": {
      "op": "SHL"
    },
    "8580": {
      "fn": "Registry.handleRent",
      "offset": [
        9932,
        10058
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8581": {
      "fn": "Registry.handleRent",
      "offset": [
        9932,
        10058
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8582": {
      "fn": "Registry.handleRent",
      "offset": [
        9932,
        10058
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8584": {
      "fn": "Registry.handleRent",
      "offset": [
        9932,
        10058
      ],
      "op": "ADD",
      "path": "15"
    },
    "8585": {
      "fn": "Registry.handleRent",
      "offset": [
        9932,
        10058
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "8588": {
      "fn": "Registry.handleRent",
      "offset": [
        9932,
        10058
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8589": {
      "fn": "Registry.handleRent",
      "offset": [
        9932,
        10058
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4743"
    },
    "8592": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9932,
        10058
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8593": {
      "fn": "Registry.handleRent",
      "offset": [
        9932,
        10058
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8594": {
      "fn": "Registry.handleRent",
      "offset": [
        10117,
        10140
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 60
    },
    "8595": {
      "fn": "Registry.handleRent",
      "offset": [
        10117,
        10140
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8596": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10110
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x160"
    },
    "8599": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10110
      ],
      "op": "DUP8",
      "path": "15"
    },
    "8600": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10110
      ],
      "op": "ADD",
      "path": "15"
    },
    "8601": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10110
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8602": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10113
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8603": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10113
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8606": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8608": {
      "op": "SHL"
    },
    "8609": {
      "fn": "Registry.handleRent",
      "offset": [
        10117,
        10140
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8610": {
      "fn": "Registry.handleRent",
      "offset": [
        10117,
        10140
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8611": {
      "fn": "Registry.handleRent",
      "offset": [
        10117,
        10140
      ],
      "op": "DIV",
      "path": "15"
    },
    "8612": {
      "fn": "Registry.handleRent",
      "offset": [
        10117,
        10140
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "8615": {
      "fn": "Registry.handleRent",
      "offset": [
        10117,
        10140
      ],
      "op": "AND",
      "path": "15"
    },
    "8616": {
      "fn": "Registry.handleRent",
      "offset": [
        10117,
        10140
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8617": {
      "fn": "Registry.handleRent",
      "offset": [
        10111,
        10112
      ],
      "op": "DUP8",
      "path": "15"
    },
    "8618": {
      "fn": "Registry.handleRent",
      "offset": [
        10111,
        10112
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8619": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10113
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8620": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10113
      ],
      "op": "LT",
      "path": "15"
    },
    "8621": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10113
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21B8"
    },
    "8624": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10113
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8625": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10113
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21B8"
    },
    "8628": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10113
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "8631": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10097,
        10113
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8632": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10113
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8633": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10113
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8635": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10113
      ],
      "op": "MUL",
      "path": "15"
    },
    "8636": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10113
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8638": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10113
      ],
      "op": "ADD",
      "path": "15"
    },
    "8639": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10113
      ],
      "op": "ADD",
      "path": "15"
    },
    "8640": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10113
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8641": {
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10140
      ],
      "op": "GT",
      "path": "15"
    },
    "8642": {
      "branch": 140,
      "fn": "Registry.handleRent",
      "offset": [
        10097,
        10140
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8643": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10200
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x220E"
    },
    "8646": {
      "branch": 140,
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10200
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8647": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10200
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8649": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10200
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8650": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8654": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8656": {
      "op": "SHL"
    },
    "8657": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10200
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8658": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10200
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8661": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10200
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8663": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10200
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8664": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10200
      ],
      "op": "ADD",
      "path": "15"
    },
    "8665": {
      "op": "MSTORE"
    },
    "8666": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "8668": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8670": {
      "op": "DUP3"
    },
    "8671": {
      "op": "ADD"
    },
    "8672": {
      "op": "MSTORE"
    },
    "8673": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A696E76616C69642072656E7420616D6F756E74000000000000"
    },
    "8706": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8708": {
      "op": "DUP3"
    },
    "8709": {
      "op": "ADD"
    },
    "8710": {
      "op": "MSTORE"
    },
    "8711": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8713": {
      "op": "ADD"
    },
    "8714": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10200
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "8717": {
      "op": "JUMP"
    },
    "8718": {
      "fn": "Registry.handleRent",
      "offset": [
        10072,
        10200
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8719": {
      "fn": "Registry.handleRent",
      "offset": [
        10243,
        10263
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8720": {
      "fn": "Registry.handleRent",
      "offset": [
        10243,
        10263
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8721": {
      "fn": "Registry.handleRent",
      "offset": [
        10214,
        10234
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8723": {
      "fn": "Registry.handleRent",
      "offset": [
        10214,
        10234
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8726": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8728": {
      "op": "SHL"
    },
    "8729": {
      "fn": "Registry.handleRent",
      "offset": [
        10243,
        10263
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8730": {
      "fn": "Registry.handleRent",
      "offset": [
        10243,
        10263
      ],
      "op": "DIV",
      "path": "15"
    },
    "8731": {
      "fn": "Registry.handleRent",
      "offset": [
        10243,
        10263
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8733": {
      "fn": "Registry.handleRent",
      "offset": [
        10243,
        10263
      ],
      "op": "AND",
      "path": "15"
    },
    "8734": {
      "fn": "Registry.handleRent",
      "offset": [
        10237,
        10264
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "8736": {
      "fn": "Registry.handleRent",
      "offset": [
        10237,
        10264
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8737": {
      "fn": "Registry.handleRent",
      "offset": [
        10237,
        10264
      ],
      "op": "GT",
      "path": "15"
    },
    "8738": {
      "fn": "Registry.handleRent",
      "offset": [
        10237,
        10264
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8739": {
      "fn": "Registry.handleRent",
      "offset": [
        10237,
        10264
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x222E"
    },
    "8742": {
      "fn": "Registry.handleRent",
      "offset": [
        10237,
        10264
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8743": {
      "fn": "Registry.handleRent",
      "offset": [
        10237,
        10264
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x222E"
    },
    "8746": {
      "fn": "Registry.handleRent",
      "offset": [
        10237,
        10264
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "8749": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10237,
        10264
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8750": {
      "fn": "Registry.handleRent",
      "offset": [
        10237,
        10264
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8751": {
      "fn": "Registry.handleRent",
      "offset": [
        10278,
        10298
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8753": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10309
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8754": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10309
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8755": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8757": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8758": {
      "op": "PUSH4",
      "value": "0xC6EE427F"
    },
    "8763": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8765": {
      "op": "SHL"
    },
    "8766": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8767": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8768": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8770": {
      "op": "DUP5"
    },
    "8771": {
      "op": "AND"
    },
    "8772": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8774": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8775": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "ADD",
      "path": "15"
    },
    "8776": {
      "op": "MSTORE"
    },
    "8777": {
      "fn": "Registry.handleRent",
      "offset": [
        10214,
        10264
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8778": {
      "fn": "Registry.handleRent",
      "offset": [
        10214,
        10264
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "8779": {
      "op": "POP"
    },
    "8780": {
      "fn": "Registry.handleRent",
      "offset": [
        10278,
        10298
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8781": {
      "fn": "Registry.handleRent",
      "offset": [
        10278,
        10298
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8788": {
      "op": "SHL"
    },
    "8789": {
      "op": "SUB"
    },
    "8790": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10309
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8791": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10309
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8792": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10309
      ],
      "op": "AND",
      "path": "15"
    },
    "8793": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10309
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8794": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10325
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC6EE427F"
    },
    "8799": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10325
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8800": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8802": {
      "op": "ADD"
    },
    "8803": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8805": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8807": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8808": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8809": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8810": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "SUB",
      "path": "15"
    },
    "8811": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8812": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "DUP7",
      "path": "15"
    },
    "8813": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8814": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "8815": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8816": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8817": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8818": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x227A"
    },
    "8821": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8822": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8824": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8825": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "REVERT",
      "path": "15"
    },
    "8826": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8827": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "POP",
      "path": "15"
    },
    "8828": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "GAS",
      "path": "15"
    },
    "8829": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "8830": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8831": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8832": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8833": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x228E"
    },
    "8836": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8837": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "8838": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8840": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8841": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "8842": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "8843": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8845": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "REVERT",
      "path": "15"
    },
    "8846": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8847": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "POP",
      "path": "15"
    },
    "8848": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "POP",
      "path": "15"
    },
    "8849": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "POP",
      "path": "15"
    },
    "8850": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "POP",
      "path": "15"
    },
    "8851": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8853": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8854": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "8855": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "8857": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "NOT",
      "path": "15"
    },
    "8858": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "8860": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8861": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "ADD",
      "path": "15"
    },
    "8862": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "AND",
      "path": "15"
    },
    "8863": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8864": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "ADD",
      "path": "15"
    },
    "8865": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8866": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8868": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8869": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "POP",
      "path": "15"
    },
    "8870": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8871": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "ADD",
      "path": "15"
    },
    "8872": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8873": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22B2"
    },
    "8876": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8877": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8878": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3FE6"
    },
    "8881": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10301,
        10341
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8882": {
      "fn": "Registry.handleRent",
      "offset": [
        10301,
        10341
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8883": {
      "fn": "Registry.handleRent",
      "offset": [
        10278,
        10341
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8884": {
      "fn": "Registry.handleRent",
      "offset": [
        10278,
        10341
      ],
      "op": "POP",
      "path": "15"
    },
    "8885": {
      "fn": "Registry.handleRent",
      "offset": [
        10355,
        10371
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8887": {
      "fn": "Registry.handleRent",
      "offset": [
        10380,
        10392
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8894": {
      "op": "SHL"
    },
    "8895": {
      "op": "SUB"
    },
    "8896": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10402
      ],
      "op": "AND",
      "path": "15"
    },
    "8897": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10402
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x313CE567"
    },
    "8902": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8904": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8905": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8906": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "8911": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "AND",
      "path": "15"
    },
    "8912": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "8914": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "SHL",
      "path": "15"
    },
    "8915": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8916": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8917": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8919": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "ADD",
      "path": "15"
    },
    "8920": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8922": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8924": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8925": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8926": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8927": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "SUB",
      "path": "15"
    },
    "8928": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8929": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "DUP7",
      "path": "15"
    },
    "8930": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8931": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "8932": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8933": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8934": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8935": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22EF"
    },
    "8938": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8939": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8941": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8942": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "REVERT",
      "path": "15"
    },
    "8943": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8944": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "POP",
      "path": "15"
    },
    "8945": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "GAS",
      "path": "15"
    },
    "8946": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "8947": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8948": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8949": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8950": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2303"
    },
    "8953": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8954": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "8955": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8957": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8958": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "8959": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "8960": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8962": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "REVERT",
      "path": "15"
    },
    "8963": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8964": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "POP",
      "path": "15"
    },
    "8965": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "POP",
      "path": "15"
    },
    "8966": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "POP",
      "path": "15"
    },
    "8967": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "POP",
      "path": "15"
    },
    "8968": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8970": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8971": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "8972": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "8974": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "NOT",
      "path": "15"
    },
    "8975": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "8977": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8978": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "ADD",
      "path": "15"
    },
    "8979": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "AND",
      "path": "15"
    },
    "8980": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8981": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "ADD",
      "path": "15"
    },
    "8982": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8983": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8985": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8986": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "POP",
      "path": "15"
    },
    "8987": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8988": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "ADD",
      "path": "15"
    },
    "8989": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8990": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2327"
    },
    "8993": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8994": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8995": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x45B5"
    },
    "8998": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10374,
        10404
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8999": {
      "fn": "Registry.handleRent",
      "offset": [
        10374,
        10404
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9000": {
      "fn": "Registry.handleRent",
      "offset": [
        10355,
        10404
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9002": {
      "fn": "Registry.handleRent",
      "offset": [
        10355,
        10404
      ],
      "op": "AND",
      "path": "15"
    },
    "9003": {
      "fn": "Registry.handleRent",
      "offset": [
        10355,
        10404
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9004": {
      "op": "POP"
    },
    "9005": {
      "fn": "Registry.handleRent",
      "offset": [
        10436,
        10449
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9007": {
      "fn": "Registry.handleRent",
      "offset": [
        10452,
        10464
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2339"
    },
    "9010": {
      "fn": "Registry.handleRent",
      "offset": [
        10355,
        10404
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9011": {
      "fn": "Registry.handleRent",
      "offset": [
        10452,
        10454
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "9013": {
      "fn": "Registry.handleRent",
      "offset": [
        10452,
        10464
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x492F"
    },
    "9016": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10452,
        10464
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9017": {
      "fn": "Registry.handleRent",
      "offset": [
        10452,
        10464
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9018": {
      "fn": "Registry.handleRent",
      "offset": [
        10594,
        10616
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9019": {
      "fn": "Registry.handleRent",
      "offset": [
        10594,
        10616
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9020": {
      "fn": "Registry.handleRent",
      "offset": [
        10436,
        10464
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9021": {
      "fn": "Registry.handleRent",
      "offset": [
        10436,
        10464
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9022": {
      "op": "POP"
    },
    "9023": {
      "fn": "Registry.handleRent",
      "offset": [
        10482,
        10499
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9025": {
      "fn": "Registry.handleRent",
      "offset": [
        10482,
        10499
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9026": {
      "fn": "Registry.handleRent",
      "offset": [
        10582,
        10624
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2355"
    },
    "9029": {
      "fn": "Registry.handleRent",
      "offset": [
        10582,
        10624
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9032": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "9034": {
      "op": "SHL"
    },
    "9035": {
      "fn": "Registry.handleRent",
      "offset": [
        10594,
        10616
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9036": {
      "fn": "Registry.handleRent",
      "offset": [
        10594,
        10616
      ],
      "op": "DIV",
      "path": "15"
    },
    "9037": {
      "fn": "Registry.handleRent",
      "offset": [
        10594,
        10616
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "9039": {
      "fn": "Registry.handleRent",
      "offset": [
        10594,
        10616
      ],
      "op": "SHL",
      "path": "15"
    },
    "9040": {
      "fn": "Registry.handleRent",
      "offset": [
        10436,
        10464
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9041": {
      "fn": "Registry.handleRent",
      "offset": [
        10582,
        10593
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x364A"
    },
    "9044": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10582,
        10624
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9045": {
      "fn": "Registry.handleRent",
      "offset": [
        10582,
        10624
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9046": {
      "fn": "Registry.handleRent",
      "offset": [
        10541,
        10543
      ],
      "op": "DUP12",
      "path": "15"
    },
    "9047": {
      "fn": "Registry.handleRent",
      "offset": [
        10541,
        10556
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140"
    },
    "9050": {
      "fn": "Registry.handleRent",
      "offset": [
        10541,
        10556
      ],
      "op": "ADD",
      "path": "15"
    },
    "9051": {
      "fn": "Registry.handleRent",
      "offset": [
        10541,
        10556
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9052": {
      "fn": "Registry.handleRent",
      "offset": [
        10557,
        10558
      ],
      "op": "DUP12",
      "path": "15"
    },
    "9053": {
      "fn": "Registry.handleRent",
      "offset": [
        10541,
        10559
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9054": {
      "fn": "Registry.handleRent",
      "offset": [
        10541,
        10559
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9055": {
      "fn": "Registry.handleRent",
      "offset": [
        10541,
        10559
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9056": {
      "fn": "Registry.handleRent",
      "offset": [
        10541,
        10559
      ],
      "op": "LT",
      "path": "15"
    },
    "9057": {
      "fn": "Registry.handleRent",
      "offset": [
        10541,
        10559
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x236C"
    },
    "9060": {
      "fn": "Registry.handleRent",
      "offset": [
        10541,
        10559
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9061": {
      "fn": "Registry.handleRent",
      "offset": [
        10541,
        10559
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x236C"
    },
    "9064": {
      "fn": "Registry.handleRent",
      "offset": [
        10541,
        10559
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "9067": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10541,
        10559
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9068": {
      "fn": "Registry.handleRent",
      "offset": [
        10541,
        10559
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9069": {
      "fn": "Registry.handleRent",
      "offset": [
        10541,
        10559
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9071": {
      "fn": "Registry.handleRent",
      "offset": [
        10541,
        10559
      ],
      "op": "MUL",
      "path": "15"
    },
    "9072": {
      "fn": "Registry.handleRent",
      "offset": [
        10541,
        10559
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9074": {
      "fn": "Registry.handleRent",
      "offset": [
        10541,
        10559
      ],
      "op": "ADD",
      "path": "15"
    },
    "9075": {
      "fn": "Registry.handleRent",
      "offset": [
        10541,
        10559
      ],
      "op": "ADD",
      "path": "15"
    },
    "9076": {
      "fn": "Registry.handleRent",
      "offset": [
        10541,
        10559
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9077": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10559
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9079": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10559
      ],
      "op": "AND",
      "path": "15"
    },
    "9080": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10504
      ],
      "op": "DUP13",
      "path": "15"
    },
    "9081": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10515
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x160"
    },
    "9084": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10515
      ],
      "op": "ADD",
      "path": "15"
    },
    "9085": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10515
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9086": {
      "fn": "Registry.handleRent",
      "offset": [
        10516,
        10517
      ],
      "op": "DUP13",
      "path": "15"
    },
    "9087": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10518
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9088": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10518
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9089": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10518
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9090": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10518
      ],
      "op": "LT",
      "path": "15"
    },
    "9091": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10518
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x238E"
    },
    "9094": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10518
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9095": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10518
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x238E"
    },
    "9098": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10518
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "9101": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10502,
        10518
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9102": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10518
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9103": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10518
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9105": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10518
      ],
      "op": "MUL",
      "path": "15"
    },
    "9106": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10518
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9108": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10518
      ],
      "op": "ADD",
      "path": "15"
    },
    "9109": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10518
      ],
      "op": "ADD",
      "path": "15"
    },
    "9110": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10518
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9111": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10559
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23A0"
    },
    "9114": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10559
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9115": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10559
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9116": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10559
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49D7"
    },
    "9119": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10502,
        10559
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9120": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10559
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9121": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10624
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23AA"
    },
    "9124": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10624
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9125": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10624
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9126": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10624
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49D7"
    },
    "9129": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10502,
        10624
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9130": {
      "fn": "Registry.handleRent",
      "offset": [
        10502,
        10624
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9131": {
      "fn": "Registry.handleRent",
      "offset": [
        10482,
        10624
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9132": {
      "fn": "Registry.handleRent",
      "offset": [
        10482,
        10624
      ],
      "op": "POP",
      "path": "15"
    },
    "9133": {
      "fn": "Registry.handleRent",
      "offset": [
        10662,
        10663
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 61,
      "value": "0x0"
    },
    "9135": {
      "fn": "Registry.handleRent",
      "offset": [
        10650,
        10659
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9136": {
      "branch": 141,
      "fn": "Registry.handleRent",
      "offset": [
        10650,
        10663
      ],
      "op": "GT",
      "path": "15"
    },
    "9137": {
      "fn": "Registry.handleRent",
      "offset": [
        10642,
        10693
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23CC"
    },
    "9140": {
      "branch": 141,
      "fn": "Registry.handleRent",
      "offset": [
        10642,
        10693
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9141": {
      "fn": "Registry.handleRent",
      "offset": [
        10642,
        10693
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9143": {
      "fn": "Registry.handleRent",
      "offset": [
        10642,
        10693
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9144": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9148": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9150": {
      "op": "SHL"
    },
    "9151": {
      "fn": "Registry.handleRent",
      "offset": [
        10642,
        10693
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9152": {
      "fn": "Registry.handleRent",
      "offset": [
        10642,
        10693
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9153": {
      "fn": "Registry.handleRent",
      "offset": [
        10642,
        10693
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "9155": {
      "fn": "Registry.handleRent",
      "offset": [
        10642,
        10693
      ],
      "op": "ADD",
      "path": "15"
    },
    "9156": {
      "fn": "Registry.handleRent",
      "offset": [
        10642,
        10693
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "9159": {
      "fn": "Registry.handleRent",
      "offset": [
        10642,
        10693
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9160": {
      "fn": "Registry.handleRent",
      "offset": [
        10642,
        10693
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x47B1"
    },
    "9163": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10642,
        10693
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9164": {
      "fn": "Registry.handleRent",
      "offset": [
        10642,
        10693
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9165": {
      "fn": "Registry.handleRent",
      "offset": [
        10711,
        10863
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 62,
      "value": "0x23E1"
    },
    "9168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9174": {
      "op": "SHL"
    },
    "9175": {
      "op": "SUB"
    },
    "9176": {
      "fn": "Registry.handleRent",
      "offset": [
        10711,
        10747
      ],
      "op": "DUP6",
      "path": "15"
    },
    "9177": {
      "fn": "Registry.handleRent",
      "offset": [
        10711,
        10747
      ],
      "op": "AND",
      "path": "15"
    },
    "9178": {
      "fn": "Registry.handleRent",
      "offset": [
        10769,
        10779
      ],
      "op": "CALLER",
      "path": "15"
    },
    "9179": {
      "fn": "Registry.handleRent",
      "offset": [
        10809,
        10813
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "9180": {
      "fn": "Registry.handleRent",
      "offset": [
        10836,
        10845
      ],
      "op": "DUP5",
      "path": "15"
    },
    "9181": {
      "fn": "Registry.handleRent",
      "offset": [
        10711,
        10747
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x36D9"
    },
    "9184": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10711,
        10863
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9185": {
      "fn": "Registry.handleRent",
      "offset": [
        10711,
        10863
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9186": {
      "fn": "Registry.handleRent",
      "offset": [
        10418,
        10878
      ],
      "op": "POP",
      "path": "15"
    },
    "9187": {
      "fn": "Registry.handleRent",
      "offset": [
        10418,
        10878
      ],
      "op": "POP",
      "path": "15"
    },
    "9188": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 63,
      "value": "0x40"
    },
    "9190": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9191": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9192": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "9194": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "ADD",
      "path": "15"
    },
    "9195": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9197": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9198": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9199": {
      "fn": "Registry.handleRent",
      "offset": [
        10980,
        10990
      ],
      "op": "CALLER",
      "path": "15"
    },
    "9200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9206": {
      "op": "SHL"
    },
    "9207": {
      "op": "SUB"
    },
    "9208": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "AND",
      "path": "15"
    },
    "9209": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9210": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9211": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9213": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "ADD",
      "path": "15"
    },
    "9214": {
      "fn": "Registry.handleRent",
      "offset": [
        11077,
        11079
      ],
      "op": "DUP11",
      "path": "15"
    },
    "9215": {
      "fn": "Registry.handleRent",
      "offset": [
        11077,
        11092
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140"
    },
    "9218": {
      "fn": "Registry.handleRent",
      "offset": [
        11077,
        11092
      ],
      "op": "ADD",
      "path": "15"
    },
    "9219": {
      "fn": "Registry.handleRent",
      "offset": [
        11077,
        11092
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9220": {
      "fn": "Registry.handleRent",
      "offset": [
        11093,
        11094
      ],
      "op": "DUP11",
      "path": "15"
    },
    "9221": {
      "fn": "Registry.handleRent",
      "offset": [
        11077,
        11095
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9222": {
      "fn": "Registry.handleRent",
      "offset": [
        11077,
        11095
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9223": {
      "fn": "Registry.handleRent",
      "offset": [
        11077,
        11095
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9224": {
      "fn": "Registry.handleRent",
      "offset": [
        11077,
        11095
      ],
      "op": "LT",
      "path": "15"
    },
    "9225": {
      "fn": "Registry.handleRent",
      "offset": [
        11077,
        11095
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2414"
    },
    "9228": {
      "fn": "Registry.handleRent",
      "offset": [
        11077,
        11095
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9229": {
      "fn": "Registry.handleRent",
      "offset": [
        11077,
        11095
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2414"
    },
    "9232": {
      "fn": "Registry.handleRent",
      "offset": [
        11077,
        11095
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "9235": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11077,
        11095
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9236": {
      "fn": "Registry.handleRent",
      "offset": [
        11077,
        11095
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9237": {
      "fn": "Registry.handleRent",
      "offset": [
        11077,
        11095
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9239": {
      "fn": "Registry.handleRent",
      "offset": [
        11077,
        11095
      ],
      "op": "MUL",
      "path": "15"
    },
    "9240": {
      "fn": "Registry.handleRent",
      "offset": [
        11077,
        11095
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9242": {
      "fn": "Registry.handleRent",
      "offset": [
        11077,
        11095
      ],
      "op": "ADD",
      "path": "15"
    },
    "9243": {
      "fn": "Registry.handleRent",
      "offset": [
        11077,
        11095
      ],
      "op": "ADD",
      "path": "15"
    },
    "9244": {
      "fn": "Registry.handleRent",
      "offset": [
        11077,
        11095
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9245": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9247": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "AND",
      "path": "15"
    },
    "9248": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9249": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9250": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9252": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "ADD",
      "path": "15"
    },
    "9253": {
      "fn": "Registry.handleRent",
      "offset": [
        11130,
        11145
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "9254": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "9259": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "AND",
      "path": "15"
    },
    "9260": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9261": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9262": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9264": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "ADD",
      "path": "15"
    },
    "9265": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11030
      ],
      "op": "DUP11",
      "path": "15"
    },
    "9266": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11041
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x160"
    },
    "9269": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11041
      ],
      "op": "ADD",
      "path": "15"
    },
    "9270": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11041
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9271": {
      "fn": "Registry.handleRent",
      "offset": [
        11042,
        11043
      ],
      "op": "DUP11",
      "path": "15"
    },
    "9272": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9273": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9274": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9275": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "LT",
      "path": "15"
    },
    "9276": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2447"
    },
    "9279": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9280": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2447"
    },
    "9283": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "9286": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11028,
        11044
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9287": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9288": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9290": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9291": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9292": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "MUL",
      "path": "15"
    },
    "9293": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9294": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9295": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9296": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "ADD",
      "path": "15"
    },
    "9297": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9298": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "ADD",
      "path": "15"
    },
    "9299": {
      "fn": "Registry.handleRent",
      "offset": [
        11028,
        11044
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9300": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "9303": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9304": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9305": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "AND",
      "path": "15"
    },
    "9306": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9307": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "9308": {
      "fn": "Registry.handleRent",
      "offset": [
        10921,
        11161
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9309": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        10918
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9311": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        10918
      ],
      "op": "DUP10",
      "path": "15"
    },
    "9312": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        10918
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9313": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        10918
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9314": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        10899
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "9316": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        10918
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9317": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        10918
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9318": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        10918
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9320": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        10918
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9321": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        10918
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9322": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        10918
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9323": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        10918
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "9324": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "DUP5",
      "path": "15"
    },
    "9325": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9326": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9327": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9328": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "9329": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9330": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "ADD",
      "path": "15"
    },
    "9331": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9332": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "9333": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9334": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "ADD",
      "path": "15"
    },
    "9335": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9336": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "9338": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9339": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "9340": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "ADD",
      "path": "15"
    },
    "9341": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9342": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9343": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "9344": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "AND",
      "path": "15"
    },
    "9345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9347": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "9349": {
      "op": "SHL"
    },
    "9350": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "MUL",
      "path": "15"
    },
    "9351": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9354": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "9356": {
      "op": "SHL"
    },
    "9357": {
      "op": "NOT"
    },
    "9358": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "9363": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9364": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "9365": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "AND",
      "path": "15"
    },
    "9366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9368": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9370": {
      "op": "SHL"
    },
    "9371": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "MUL",
      "path": "15"
    },
    "9372": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "9373": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9374": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "9375": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "AND",
      "path": "15"
    },
    "9376": {
      "op": "PUSH6",
      "value": "0xFFFFFFFFFFFF"
    },
    "9383": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9385": {
      "op": "SHL"
    },
    "9386": {
      "op": "NOT"
    },
    "9387": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9389": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9390": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "9391": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "AND",
      "path": "15"
    },
    "9392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9396": {
      "op": "SHL"
    },
    "9397": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "MUL",
      "path": "15"
    },
    "9398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9402": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9404": {
      "op": "SHL"
    },
    "9405": {
      "op": "SUB"
    },
    "9406": {
      "op": "NOT"
    },
    "9407": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9408": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "9409": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "AND",
      "path": "15"
    },
    "9410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9416": {
      "op": "SHL"
    },
    "9417": {
      "op": "SUB"
    },
    "9418": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9419": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "9420": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "AND",
      "path": "15"
    },
    "9421": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "9422": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9423": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "9424": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "OR",
      "path": "15"
    },
    "9425": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "9426": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9427": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "9428": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "OR",
      "path": "15"
    },
    "9429": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "AND",
      "path": "15"
    },
    "9430": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9431": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9432": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9433": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "OR",
      "path": "15"
    },
    "9434": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9435": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9436": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9437": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "OR",
      "path": "15"
    },
    "9438": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9439": {
      "fn": "Registry.handleRent",
      "offset": [
        10891,
        11161
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9440": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11259
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 64,
      "value": "0x160"
    },
    "9443": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11259
      ],
      "op": "DUP10",
      "path": "15"
    },
    "9444": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11259
      ],
      "op": "ADD",
      "path": "15"
    },
    "9445": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11259
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9446": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9447": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9448": {
      "fn": "Registry.handleRent",
      "offset": [
        11260,
        11261
      ],
      "op": "DUP10",
      "path": "15"
    },
    "9449": {
      "fn": "Registry.handleRent",
      "offset": [
        11260,
        11261
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9450": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9451": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "LT",
      "path": "15"
    },
    "9452": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24F7"
    },
    "9455": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9456": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24F7"
    },
    "9459": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "9462": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11246,
        11262
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9463": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9464": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9466": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9467": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9468": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "MUL",
      "path": "15"
    },
    "9469": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9470": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9471": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9472": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "ADD",
      "path": "15"
    },
    "9473": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9474": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "ADD",
      "path": "15"
    },
    "9475": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9476": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11202
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9478": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11202
      ],
      "op": "DUP10",
      "path": "15"
    },
    "9479": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11202
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9480": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11202
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9481": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11183
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "9483": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11202
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9484": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11202
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "9485": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11202
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9486": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11202
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9488": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11202
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9489": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11202
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9490": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11202
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "9491": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9492": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9493": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11218
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1C"
    },
    "9495": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11218
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9496": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x252D"
    },
    "9499": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9500": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "DUP5",
      "path": "15"
    },
    "9501": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11262
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9504": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9506": {
      "op": "SHL"
    },
    "9507": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9508": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "DIV",
      "path": "15"
    },
    "9509": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "9512": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "AND",
      "path": "15"
    },
    "9513": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49F6"
    },
    "9516": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11175,
        11276
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9517": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9518": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "9519": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "POP",
      "path": "15"
    },
    "9520": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "9523": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "EXP",
      "path": "15"
    },
    "9524": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9525": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9526": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9527": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "9530": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "MUL",
      "path": "15"
    },
    "9531": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "NOT",
      "path": "15"
    },
    "9532": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "AND",
      "path": "15"
    },
    "9533": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9534": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9535": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "9538": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "AND",
      "path": "15"
    },
    "9539": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "MUL",
      "path": "15"
    },
    "9540": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "OR",
      "path": "15"
    },
    "9541": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9542": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9543": {
      "fn": "Registry.handleRent",
      "offset": [
        11175,
        11276
      ],
      "op": "POP",
      "path": "15"
    },
    "9544": {
      "fn": "Registry.handleRent",
      "offset": [
        11388,
        11397
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 65,
      "value": "0x4"
    },
    "9546": {
      "fn": "Registry.handleRent",
      "offset": [
        11388,
        11397
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9547": {
      "fn": "Registry.handleRent",
      "offset": [
        11355,
        11357
      ],
      "op": "DUP10",
      "path": "15"
    },
    "9548": {
      "fn": "Registry.handleRent",
      "offset": [
        11355,
        11367
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "9551": {
      "fn": "Registry.handleRent",
      "offset": [
        11355,
        11367
      ],
      "op": "ADD",
      "path": "15"
    },
    "9552": {
      "fn": "Registry.handleRent",
      "offset": [
        11355,
        11367
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9553": {
      "fn": "Registry.handleRent",
      "offset": [
        11368,
        11369
      ],
      "op": "DUP10",
      "path": "15"
    },
    "9554": {
      "fn": "Registry.handleRent",
      "offset": [
        11355,
        11370
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9555": {
      "fn": "Registry.handleRent",
      "offset": [
        11355,
        11370
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9556": {
      "fn": "Registry.handleRent",
      "offset": [
        11355,
        11370
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9557": {
      "fn": "Registry.handleRent",
      "offset": [
        11355,
        11370
      ],
      "op": "LT",
      "path": "15"
    },
    "9558": {
      "fn": "Registry.handleRent",
      "offset": [
        11355,
        11370
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2561"
    },
    "9561": {
      "fn": "Registry.handleRent",
      "offset": [
        11355,
        11370
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9562": {
      "fn": "Registry.handleRent",
      "offset": [
        11355,
        11370
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2561"
    },
    "9565": {
      "fn": "Registry.handleRent",
      "offset": [
        11355,
        11370
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "9568": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11355,
        11370
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9569": {
      "fn": "Registry.handleRent",
      "offset": [
        11355,
        11370
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9570": {
      "fn": "Registry.handleRent",
      "offset": [
        11355,
        11370
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9572": {
      "fn": "Registry.handleRent",
      "offset": [
        11355,
        11370
      ],
      "op": "MUL",
      "path": "15"
    },
    "9573": {
      "fn": "Registry.handleRent",
      "offset": [
        11355,
        11370
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9575": {
      "fn": "Registry.handleRent",
      "offset": [
        11355,
        11370
      ],
      "op": "ADD",
      "path": "15"
    },
    "9576": {
      "fn": "Registry.handleRent",
      "offset": [
        11355,
        11370
      ],
      "op": "ADD",
      "path": "15"
    },
    "9577": {
      "fn": "Registry.handleRent",
      "offset": [
        11355,
        11370
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9578": {
      "fn": "Registry.handleRent",
      "offset": [
        11327,
        11337
      ],
      "op": "CALLER",
      "path": "15"
    },
    "9579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9585": {
      "op": "SHL"
    },
    "9586": {
      "op": "SUB"
    },
    "9587": {
      "fn": "Registry.handleRent",
      "offset": [
        11295,
        11523
      ],
      "op": "AND",
      "path": "15"
    },
    "9588": {
      "fn": "Registry.handleRent",
      "offset": [
        11295,
        11523
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x61E1A1E6F89EABA4BA0119B0023BD32B1BB0412AB96CCD8D0588A3E98A097631"
    },
    "9621": {
      "fn": "Registry.handleRent",
      "offset": [
        11422,
        11424
      ],
      "op": "DUP13",
      "path": "15"
    },
    "9622": {
      "fn": "Registry.handleRent",
      "offset": [
        11422,
        11435
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x160"
    },
    "9625": {
      "fn": "Registry.handleRent",
      "offset": [
        11422,
        11435
      ],
      "op": "ADD",
      "path": "15"
    },
    "9626": {
      "fn": "Registry.handleRent",
      "offset": [
        11422,
        11435
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9627": {
      "fn": "Registry.handleRent",
      "offset": [
        11436,
        11437
      ],
      "op": "DUP13",
      "path": "15"
    },
    "9628": {
      "fn": "Registry.handleRent",
      "offset": [
        11422,
        11438
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9629": {
      "fn": "Registry.handleRent",
      "offset": [
        11422,
        11438
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9630": {
      "fn": "Registry.handleRent",
      "offset": [
        11422,
        11438
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9631": {
      "fn": "Registry.handleRent",
      "offset": [
        11422,
        11438
      ],
      "op": "LT",
      "path": "15"
    },
    "9632": {
      "fn": "Registry.handleRent",
      "offset": [
        11422,
        11438
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25AB"
    },
    "9635": {
      "fn": "Registry.handleRent",
      "offset": [
        11422,
        11438
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9636": {
      "fn": "Registry.handleRent",
      "offset": [
        11422,
        11438
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25AB"
    },
    "9639": {
      "fn": "Registry.handleRent",
      "offset": [
        11422,
        11438
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "9642": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11422,
        11438
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9643": {
      "fn": "Registry.handleRent",
      "offset": [
        11422,
        11438
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9644": {
      "fn": "Registry.handleRent",
      "offset": [
        11422,
        11438
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9646": {
      "fn": "Registry.handleRent",
      "offset": [
        11422,
        11438
      ],
      "op": "MUL",
      "path": "15"
    },
    "9647": {
      "fn": "Registry.handleRent",
      "offset": [
        11422,
        11438
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9649": {
      "fn": "Registry.handleRent",
      "offset": [
        11422,
        11438
      ],
      "op": "ADD",
      "path": "15"
    },
    "9650": {
      "fn": "Registry.handleRent",
      "offset": [
        11422,
        11438
      ],
      "op": "ADD",
      "path": "15"
    },
    "9651": {
      "fn": "Registry.handleRent",
      "offset": [
        11422,
        11438
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9652": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11459
      ],
      "op": "DUP14",
      "path": "15"
    },
    "9653": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11472
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140"
    },
    "9656": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11472
      ],
      "op": "ADD",
      "path": "15"
    },
    "9657": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11472
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9658": {
      "fn": "Registry.handleRent",
      "offset": [
        11473,
        11474
      ],
      "op": "DUP14",
      "path": "15"
    },
    "9659": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9660": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9661": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9662": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "LT",
      "path": "15"
    },
    "9663": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25CA"
    },
    "9666": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9667": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25CA"
    },
    "9670": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "9673": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11457,
        11475
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9674": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9675": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9677": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9678": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9679": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "MUL",
      "path": "15"
    },
    "9680": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9681": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9682": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9683": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "ADD",
      "path": "15"
    },
    "9684": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9685": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "ADD",
      "path": "15"
    },
    "9686": {
      "fn": "Registry.handleRent",
      "offset": [
        11457,
        11475
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9687": {
      "fn": "Registry.handleRent",
      "offset": [
        11493,
        11509
      ],
      "op": "DUP11",
      "path": "15"
    },
    "9688": {
      "fn": "Registry.handleRent",
      "offset": [
        11493,
        11509
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9689": {
      "fn": "Registry.handleRent",
      "offset": [
        11295,
        11523
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9691": {
      "fn": "Registry.handleRent",
      "offset": [
        11295,
        11523
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9692": {
      "fn": "Registry.handleRent",
      "offset": [
        11295,
        11523
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9693": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9696": {
      "op": "SWAP1"
    },
    "9697": {
      "op": "SWAP6"
    },
    "9698": {
      "op": "AND"
    },
    "9699": {
      "op": "DUP6"
    },
    "9700": {
      "op": "MSTORE"
    },
    "9701": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9703": {
      "op": "SWAP1"
    },
    "9704": {
      "op": "SWAP3"
    },
    "9705": {
      "op": "AND"
    },
    "9706": {
      "op": "SWAP3"
    },
    "9707": {
      "op": "DUP5"
    },
    "9708": {
      "op": "ADD"
    },
    "9709": {
      "op": "SWAP3"
    },
    "9710": {
      "op": "SWAP1"
    },
    "9711": {
      "op": "SWAP3"
    },
    "9712": {
      "op": "MSTORE"
    },
    "9713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9715": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9717": {
      "op": "SHL"
    },
    "9718": {
      "fn": "Registry.handleRent",
      "offset": [
        11493,
        11509
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9719": {
      "fn": "Registry.handleRent",
      "offset": [
        11493,
        11509
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9720": {
      "fn": "Registry.handleRent",
      "offset": [
        11493,
        11509
      ],
      "op": "DIV",
      "path": "15"
    },
    "9721": {
      "fn": "Registry.handleRent",
      "offset": [
        11493,
        11509
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "9726": {
      "fn": "Registry.handleRent",
      "offset": [
        11493,
        11509
      ],
      "op": "AND",
      "path": "15"
    },
    "9727": {
      "op": "SWAP1"
    },
    "9728": {
      "op": "DUP3"
    },
    "9729": {
      "op": "ADD"
    },
    "9730": {
      "op": "MSTORE"
    },
    "9731": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9733": {
      "op": "ADD"
    },
    "9734": {
      "fn": "Registry.handleRent",
      "offset": [
        11295,
        11523
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9736": {
      "fn": "Registry.handleRent",
      "offset": [
        11295,
        11523
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9737": {
      "fn": "Registry.handleRent",
      "offset": [
        11295,
        11523
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9738": {
      "fn": "Registry.handleRent",
      "offset": [
        11295,
        11523
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9739": {
      "fn": "Registry.handleRent",
      "offset": [
        11295,
        11523
      ],
      "op": "SUB",
      "path": "15"
    },
    "9740": {
      "fn": "Registry.handleRent",
      "offset": [
        11295,
        11523
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9741": {
      "fn": "Registry.handleRent",
      "offset": [
        11295,
        11523
      ],
      "op": "LOG4",
      "path": "15"
    },
    "9742": {
      "fn": "Registry.handleRent",
      "offset": [
        11537,
        11546
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 66,
      "value": "0x4"
    },
    "9744": {
      "fn": "Registry.handleRent",
      "offset": [
        11537,
        11548
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9745": {
      "fn": "Registry.handleRent",
      "offset": [
        11537,
        11548
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9746": {
      "fn": "Registry.handleRent",
      "offset": [
        11537,
        11548
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9747": {
      "fn": "Registry.handleRent",
      "offset": [
        11537,
        11546
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9749": {
      "fn": "Registry.handleRent",
      "offset": [
        11537,
        11548
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x261D"
    },
    "9752": {
      "fn": "Registry.handleRent",
      "offset": [
        11537,
        11548
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9753": {
      "fn": "Registry.handleRent",
      "offset": [
        11537,
        11548
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A5C"
    },
    "9756": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11537,
        11548
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9757": {
      "fn": "Registry.handleRent",
      "offset": [
        11537,
        11548
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9758": {
      "fn": "Registry.handleRent",
      "offset": [
        11537,
        11548
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9759": {
      "fn": "Registry.handleRent",
      "offset": [
        11537,
        11548
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9760": {
      "fn": "Registry.handleRent",
      "offset": [
        11537,
        11548
      ],
      "op": "POP",
      "path": "15"
    },
    "9761": {
      "fn": "Registry.handleRent",
      "offset": [
        11537,
        11548
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9762": {
      "fn": "Registry.handleRent",
      "offset": [
        11537,
        11548
      ],
      "op": "POP",
      "path": "15"
    },
    "9763": {
      "fn": "Registry.handleRent",
      "offset": [
        9173,
        11559
      ],
      "op": "POP",
      "path": "15"
    },
    "9764": {
      "fn": "Registry.handleRent",
      "offset": [
        9173,
        11559
      ],
      "op": "POP",
      "path": "15"
    },
    "9765": {
      "fn": "Registry.handleRent",
      "offset": [
        9173,
        11559
      ],
      "op": "POP",
      "path": "15"
    },
    "9766": {
      "fn": "Registry.handleRent",
      "offset": [
        9173,
        11559
      ],
      "op": "POP",
      "path": "15"
    },
    "9767": {
      "fn": "Registry.handleRent",
      "offset": [
        9173,
        11559
      ],
      "op": "POP",
      "path": "15"
    },
    "9768": {
      "fn": "Registry.handleRent",
      "offset": [
        9173,
        11559
      ],
      "op": "POP",
      "path": "15"
    },
    "9769": {
      "fn": "Registry.handleRent",
      "offset": [
        9173,
        11559
      ],
      "op": "POP",
      "path": "15"
    },
    "9770": {
      "fn": "Registry.handleRent",
      "offset": [
        9168,
        9171
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 67
    },
    "9771": {
      "fn": "Registry.handleRent",
      "offset": [
        9168,
        9171
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9772": {
      "fn": "Registry.handleRent",
      "offset": [
        9168,
        9171
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2634"
    },
    "9775": {
      "fn": "Registry.handleRent",
      "offset": [
        9168,
        9171
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9776": {
      "fn": "Registry.handleRent",
      "offset": [
        9168,
        9171
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A5C"
    },
    "9779": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9168,
        9171
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9780": {
      "fn": "Registry.handleRent",
      "offset": [
        9168,
        9171
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9781": {
      "fn": "Registry.handleRent",
      "offset": [
        9168,
        9171
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9782": {
      "fn": "Registry.handleRent",
      "offset": [
        9168,
        9171
      ],
      "op": "POP",
      "path": "15"
    },
    "9783": {
      "fn": "Registry.handleRent",
      "offset": [
        9168,
        9171
      ],
      "op": "POP",
      "path": "15"
    },
    "9784": {
      "fn": "Registry.handleRent",
      "offset": [
        9128,
        11559
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EBE"
    },
    "9787": {
      "fn": "Registry.handleRent",
      "offset": [
        9128,
        11559
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9788": {
      "fn": "Registry.createRentCallData",
      "offset": [
        20771,
        21613
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9789": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21061,
        21079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2644"
    },
    "9792": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21061,
        21079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3C5F"
    },
    "9795": {
      "fn": "Registry.createRentCallData",
      "jump": "i",
      "offset": [
        21061,
        21079
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9796": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21061,
        21079
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9797": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 68,
      "value": "0x40"
    },
    "9799": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9800": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9801": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A0"
    },
    "9804": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "ADD",
      "path": "15"
    },
    "9805": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9807": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9808": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9809": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21125,
        21126
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9811": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9812": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9813": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9815": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "ADD",
      "path": "15"
    },
    "9816": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21147,
        21148
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "9818": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9819": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9820": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9822": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "ADD",
      "path": "15"
    },
    "9823": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21175,
        21186
      ],
      "op": "DUP9",
      "path": "15"
    },
    "9824": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9825": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9826": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9828": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "ADD",
      "path": "15"
    },
    "9829": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21222
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9830": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9831": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9832": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9834": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "ADD",
      "path": "15"
    },
    "9835": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21245,
        21252
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9836": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9837": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9838": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9840": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "ADD",
      "path": "15"
    },
    "9841": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21292,
        21293
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9847": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9849": {
      "op": "SHL"
    },
    "9850": {
      "op": "SUB"
    },
    "9851": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9852": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "GT",
      "path": "15"
    },
    "9853": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9854": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2689"
    },
    "9857": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9858": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2689"
    },
    "9861": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AB9"
    },
    "9864": {
      "fn": "Registry.createRentCallData",
      "jump": "i",
      "offset": [
        21278,
        21294
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9865": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9866": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9868": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9869": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9870": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9871": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9872": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9873": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9874": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9876": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "MUL",
      "path": "15"
    },
    "9877": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9879": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "ADD",
      "path": "15"
    },
    "9880": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9881": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "ADD",
      "path": "15"
    },
    "9882": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9884": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9885": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9886": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9887": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x26B2"
    },
    "9890": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9891": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9892": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9894": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "ADD",
      "path": "15"
    },
    "9895": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9897": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9898": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "MUL",
      "path": "15"
    },
    "9899": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9900": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "9901": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9902": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "9903": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "ADD",
      "path": "15"
    },
    "9904": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9905": {
      "op": "POP"
    },
    "9906": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21278,
        21294
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9907": {
      "op": "POP"
    },
    "9908": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9909": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9910": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9912": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "ADD",
      "path": "15"
    },
    "9913": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21489,
        21490
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9915": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9917": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9918": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9919": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9920": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9921": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9922": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9923": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9925": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "MUL",
      "path": "15"
    },
    "9926": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9928": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "ADD",
      "path": "15"
    },
    "9929": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9930": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "ADD",
      "path": "15"
    },
    "9931": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9933": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9934": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9935": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9936": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x26E3"
    },
    "9939": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9940": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9941": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9943": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "ADD",
      "path": "15"
    },
    "9944": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9946": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9947": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "MUL",
      "path": "15"
    },
    "9948": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9949": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "9950": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9951": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "9952": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "ADD",
      "path": "15"
    },
    "9953": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9954": {
      "op": "POP"
    },
    "9955": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21477,
        21491
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9956": {
      "op": "POP"
    },
    "9957": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9958": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9959": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9961": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "ADD",
      "path": "15"
    },
    "9962": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21534,
        21535
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9964": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9966": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9967": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9968": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9969": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9970": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9971": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9972": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9974": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "MUL",
      "path": "15"
    },
    "9975": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9977": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "ADD",
      "path": "15"
    },
    "9978": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9979": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "ADD",
      "path": "15"
    },
    "9980": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9982": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9983": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9984": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9985": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2714"
    },
    "9988": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9989": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9990": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9992": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "ADD",
      "path": "15"
    },
    "9993": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9995": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9996": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "MUL",
      "path": "15"
    },
    "9997": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9998": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "9999": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10000": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "10001": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "ADD",
      "path": "15"
    },
    "10002": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10003": {
      "op": "POP"
    },
    "10004": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21521,
        21536
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10005": {
      "op": "POP"
    },
    "10006": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10007": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10008": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10010": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10011": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10012": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "ADD",
      "path": "15"
    },
    "10013": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "10014": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10015": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "10016": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10017": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10019": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21354,
        21370
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10020": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21354,
        21370
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10023": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21354,
        21370
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10024": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21354,
        21370
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10025": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21354,
        21370
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10026": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21354,
        21370
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10027": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21354,
        21370
      ],
      "op": "DUP10",
      "path": "15"
    },
    "10028": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21354,
        21370
      ],
      "op": "ADD",
      "path": "15"
    },
    "10029": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21354,
        21370
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10030": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21354,
        21370
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10031": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10032": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "DUP5",
      "path": "15"
    },
    "10033": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "ADD",
      "path": "15"
    },
    "10034": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10035": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10036": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10037": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10038": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "10040": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10041": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "ADD",
      "path": "15"
    },
    "10042": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "10043": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10044": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "10045": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10046": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "10048": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10049": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "ADD",
      "path": "15"
    },
    "10050": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "10051": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10052": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "10053": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10054": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21564,
        21595
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10055": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21564,
        21595
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10056": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21564,
        21595
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "10057": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21564,
        21595
      ],
      "op": "DUP6",
      "path": "15"
    },
    "10058": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21564,
        21595
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10059": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21564,
        21595
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "10060": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21564,
        21595
      ],
      "op": "DUP5",
      "path": "15"
    },
    "10061": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21564,
        21595
      ],
      "op": "ADD",
      "path": "15"
    },
    "10062": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21564,
        21595
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10063": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21564,
        21595
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "10064": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21564,
        21595
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10065": {
      "op": "POP"
    },
    "10066": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "10068": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10069": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "10070": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "ADD",
      "path": "15"
    },
    "10071": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21096,
        21606
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10072": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21091,
        21606
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "10073": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21091,
        21606
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "10074": {
      "op": "POP"
    },
    "10075": {
      "op": "POP"
    },
    "10076": {
      "op": "POP"
    },
    "10077": {
      "fn": "Registry.createRentCallData",
      "jump": "o",
      "offset": [
        20771,
        21613
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10078": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24068,
        24335
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10079": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24140,
        24182
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 69,
      "value": "0x276B"
    },
    "10082": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24160,
        24167
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10083": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24160,
        24181
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10085": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24160,
        24181
      ],
      "op": "ADD",
      "path": "15"
    },
    "10086": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24160,
        24181
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10087": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24140,
        24159
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3744"
    },
    "10090": {
      "fn": "Registry.ensureIsNotNull",
      "jump": "i",
      "offset": [
        24140,
        24182
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10091": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24140,
        24182
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10092": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24200,
        24223
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 70,
      "value": "0x40"
    },
    "10094": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24200,
        24223
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10095": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24200,
        24223
      ],
      "op": "ADD",
      "path": "15"
    },
    "10096": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24200,
        24223
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10097": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24200,
        24228
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "10099": {
      "branch": 142,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24200,
        24228
      ],
      "op": "AND",
      "path": "15"
    },
    "10100": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24192,
        24253
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27B6"
    },
    "10103": {
      "branch": 142,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24192,
        24253
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10104": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24192,
        24253
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10106": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24192,
        24253
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10107": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10111": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10113": {
      "op": "SHL"
    },
    "10114": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24192,
        24253
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10115": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24192,
        24253
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10118": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24192,
        24253
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10120": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24192,
        24253
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10121": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24192,
        24253
      ],
      "op": "ADD",
      "path": "15"
    },
    "10122": {
      "op": "MSTORE"
    },
    "10123": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "10125": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10127": {
      "op": "DUP3"
    },
    "10128": {
      "op": "ADD"
    },
    "10129": {
      "op": "MSTORE"
    },
    "10130": {
      "op": "PUSH20",
      "value": "0x52654E46543A3A6475726174696F6E207A65726F"
    },
    "10151": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10153": {
      "op": "SHL"
    },
    "10154": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10156": {
      "op": "DUP3"
    },
    "10157": {
      "op": "ADD"
    },
    "10158": {
      "op": "MSTORE"
    },
    "10159": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10161": {
      "op": "ADD"
    },
    "10162": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24192,
        24253
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "10165": {
      "op": "JUMP"
    },
    "10166": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24192,
        24253
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10167": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24271,
        24293
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 71,
      "value": "0x60"
    },
    "10169": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24271,
        24293
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10170": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24271,
        24293
      ],
      "op": "ADD",
      "path": "15"
    },
    "10171": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24271,
        24293
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10176": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10178": {
      "op": "SHL"
    },
    "10179": {
      "op": "SUB"
    },
    "10180": {
      "op": "NOT"
    },
    "10181": {
      "branch": 143,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24271,
        24298
      ],
      "op": "AND",
      "path": "15"
    },
    "10182": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24263,
        24328
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15C8"
    },
    "10185": {
      "branch": 143,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24263,
        24328
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10186": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24263,
        24328
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10188": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24263,
        24328
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10189": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10193": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10195": {
      "op": "SHL"
    },
    "10196": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24263,
        24328
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10197": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24263,
        24328
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10198": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24263,
        24328
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10200": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24263,
        24328
      ],
      "op": "ADD",
      "path": "15"
    },
    "10201": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24263,
        24328
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "10204": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24263,
        24328
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10205": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24263,
        24328
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x47B1"
    },
    "10208": {
      "fn": "Registry.ensureIsNotNull",
      "jump": "i",
      "offset": [
        24263,
        24328
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10209": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24603,
        24863
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10210": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24695,
        24716
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 72
    },
    "10211": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24695,
        24716
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10212": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24675,
        24717
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27EC"
    },
    "10215": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24675,
        24717
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10216": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24675,
        24694
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3744"
    },
    "10219": {
      "fn": "Registry.ensureIsNotNull",
      "jump": "i",
      "offset": [
        24675,
        24717
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10220": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24675,
        24717
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10221": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24735,
        24755
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 73,
      "value": "0x20"
    },
    "10223": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24735,
        24755
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10224": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24735,
        24755
      ],
      "op": "ADD",
      "path": "15"
    },
    "10225": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24735,
        24755
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10226": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24735,
        24760
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "10228": {
      "branch": 144,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24735,
        24760
      ],
      "op": "AND",
      "path": "15"
    },
    "10229": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24727,
        24788
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2810"
    },
    "10232": {
      "branch": 144,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24727,
        24788
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10233": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24727,
        24788
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10235": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24727,
        24788
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10236": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10240": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10242": {
      "op": "SHL"
    },
    "10243": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24727,
        24788
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10244": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24727,
        24788
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10245": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24727,
        24788
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10247": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24727,
        24788
      ],
      "op": "ADD",
      "path": "15"
    },
    "10248": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24727,
        24788
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "10251": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24727,
        24788
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10252": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24727,
        24788
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x477A"
    },
    "10255": {
      "fn": "Registry.ensureIsNotNull",
      "jump": "i",
      "offset": [
        24727,
        24788
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10256": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24727,
        24788
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10257": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24806,
        24822
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 74,
      "value": "0x40"
    },
    "10259": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24806,
        24822
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10260": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24806,
        24822
      ],
      "op": "ADD",
      "path": "15"
    },
    "10261": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24806,
        24822
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10262": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24806,
        24827
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "10267": {
      "branch": 145,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24806,
        24827
      ],
      "op": "AND",
      "path": "15"
    },
    "10268": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24798,
        24856
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15C8"
    },
    "10271": {
      "branch": 145,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24798,
        24856
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10272": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24798,
        24856
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10274": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24798,
        24856
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10275": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10279": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10281": {
      "op": "SHL"
    },
    "10282": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24798,
        24856
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10283": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24798,
        24856
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10286": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24798,
        24856
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10288": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24798,
        24856
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10289": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24798,
        24856
      ],
      "op": "ADD",
      "path": "15"
    },
    "10290": {
      "op": "MSTORE"
    },
    "10291": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "10293": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10295": {
      "op": "DUP3"
    },
    "10296": {
      "op": "ADD"
    },
    "10297": {
      "op": "MSTORE"
    },
    "10298": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E746564206174206973207A65726F0000000000000000"
    },
    "10331": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10333": {
      "op": "DUP3"
    },
    "10334": {
      "op": "ADD"
    },
    "10335": {
      "op": "MSTORE"
    },
    "10336": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10338": {
      "op": "ADD"
    },
    "10339": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24798,
        24856
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "10342": {
      "op": "JUMP"
    },
    "10343": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26002,
        26343
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10344": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26183,
        26192
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 75
    },
    "10345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10351": {
      "op": "SHL"
    },
    "10352": {
      "op": "SUB"
    },
    "10353": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26158,
        26192
      ],
      "op": "AND",
      "path": "15"
    },
    "10354": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26158,
        26165
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10355": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26158,
        26179
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10357": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26158,
        26179
      ],
      "op": "ADD",
      "path": "15"
    },
    "10358": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26158,
        26179
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10365": {
      "op": "SHL"
    },
    "10366": {
      "op": "SUB"
    },
    "10367": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26158,
        26192
      ],
      "op": "AND",
      "path": "15"
    },
    "10368": {
      "branch": 146,
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26158,
        26192
      ],
      "op": "EQ",
      "path": "15"
    },
    "10369": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26150,
        26214
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x28C0"
    },
    "10372": {
      "branch": 146,
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26150,
        26214
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10373": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26150,
        26214
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10375": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26150,
        26214
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10376": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10380": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10382": {
      "op": "SHL"
    },
    "10383": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26150,
        26214
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10384": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26150,
        26214
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10387": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26150,
        26214
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10389": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26150,
        26214
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10390": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26150,
        26214
      ],
      "op": "ADD",
      "path": "15"
    },
    "10391": {
      "op": "MSTORE"
    },
    "10392": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10394": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10396": {
      "op": "DUP3"
    },
    "10397": {
      "op": "ADD"
    },
    "10398": {
      "op": "MSTORE"
    },
    "10399": {
      "op": "PUSH17",
      "value": "0x2932A7232A1D1D3737BA103932B73A32B9"
    },
    "10417": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "10419": {
      "op": "SHL"
    },
    "10420": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10422": {
      "op": "DUP3"
    },
    "10423": {
      "op": "ADD"
    },
    "10424": {
      "op": "MSTORE"
    },
    "10425": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10427": {
      "op": "ADD"
    },
    "10428": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26150,
        26214
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "10431": {
      "op": "JUMP"
    },
    "10432": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26150,
        26214
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10433": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26246,
        26287
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 76,
      "value": "0x28CA"
    },
    "10436": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26263,
        26270
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10437": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26272,
        26286
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10438": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26246,
        26262
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3790"
    },
    "10441": {
      "fn": "Registry.ensureIsReturnable",
      "jump": "i",
      "offset": [
        26246,
        26287
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10442": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26246,
        26287
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10443": {
      "branch": 147,
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26245,
        26287
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10444": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26224,
        26336
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2917"
    },
    "10447": {
      "branch": 147,
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26224,
        26336
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10448": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26224,
        26336
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10450": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26224,
        26336
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10451": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10455": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10457": {
      "op": "SHL"
    },
    "10458": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26224,
        26336
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10459": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26224,
        26336
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10462": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26224,
        26336
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10464": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26224,
        26336
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10465": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26224,
        26336
      ],
      "op": "ADD",
      "path": "15"
    },
    "10466": {
      "op": "MSTORE"
    },
    "10467": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "10469": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10471": {
      "op": "DUP3"
    },
    "10472": {
      "op": "ADD"
    },
    "10473": {
      "op": "MSTORE"
    },
    "10474": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A706173742072657475726E2064617465000000000000000000"
    },
    "10507": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10509": {
      "op": "DUP3"
    },
    "10510": {
      "op": "ADD"
    },
    "10511": {
      "op": "MSTORE"
    },
    "10512": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10514": {
      "op": "ADD"
    },
    "10515": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26224,
        26336
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "10518": {
      "op": "JUMP"
    },
    "10519": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26224,
        26336
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10520": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26002,
        26343
      ],
      "op": "POP",
      "path": "15"
    },
    "10521": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26002,
        26343
      ],
      "op": "POP",
      "path": "15"
    },
    "10522": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26002,
        26343
      ],
      "op": "POP",
      "path": "15"
    },
    "10523": {
      "fn": "Registry.ensureIsReturnable",
      "jump": "o",
      "offset": [
        26002,
        26343
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10524": {
      "fn": "Registry.distributePayments",
      "offset": [
        15444,
        16670
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10525": {
      "fn": "Registry.distributePayments",
      "offset": [
        15619,
        15639
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10527": {
      "fn": "Registry.distributePayments",
      "offset": [
        15648,
        15655
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10528": {
      "fn": "Registry.distributePayments",
      "offset": [
        15648,
        15668
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "10530": {
      "fn": "Registry.distributePayments",
      "offset": [
        15648,
        15668
      ],
      "op": "ADD",
      "path": "15"
    },
    "10531": {
      "fn": "Registry.distributePayments",
      "offset": [
        15648,
        15668
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10532": {
      "fn": "Registry.distributePayments",
      "offset": [
        15642,
        15669
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "10534": {
      "fn": "Registry.distributePayments",
      "offset": [
        15642,
        15669
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10535": {
      "fn": "Registry.distributePayments",
      "offset": [
        15642,
        15669
      ],
      "op": "GT",
      "path": "15"
    },
    "10536": {
      "fn": "Registry.distributePayments",
      "offset": [
        15642,
        15669
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10537": {
      "fn": "Registry.distributePayments",
      "offset": [
        15642,
        15669
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2934"
    },
    "10540": {
      "fn": "Registry.distributePayments",
      "offset": [
        15642,
        15669
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10541": {
      "fn": "Registry.distributePayments",
      "offset": [
        15642,
        15669
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2934"
    },
    "10544": {
      "fn": "Registry.distributePayments",
      "offset": [
        15642,
        15669
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "10547": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        15642,
        15669
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10548": {
      "fn": "Registry.distributePayments",
      "offset": [
        15642,
        15669
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10549": {
      "fn": "Registry.distributePayments",
      "offset": [
        15679,
        15695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10551": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15706
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10552": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15706
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "10553": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10555": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10556": {
      "op": "PUSH4",
      "value": "0xC6EE427F"
    },
    "10561": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10563": {
      "op": "SHL"
    },
    "10564": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10565": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10566": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10568": {
      "op": "DUP5"
    },
    "10569": {
      "op": "AND"
    },
    "10570": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10572": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10573": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "ADD",
      "path": "15"
    },
    "10574": {
      "op": "MSTORE"
    },
    "10575": {
      "fn": "Registry.distributePayments",
      "offset": [
        15619,
        15669
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "10576": {
      "fn": "Registry.distributePayments",
      "offset": [
        15619,
        15669
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "10577": {
      "op": "POP"
    },
    "10578": {
      "fn": "Registry.distributePayments",
      "offset": [
        15679,
        15695
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10579": {
      "fn": "Registry.distributePayments",
      "offset": [
        15679,
        15695
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10586": {
      "op": "SHL"
    },
    "10587": {
      "op": "SUB"
    },
    "10588": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15706
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10589": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15706
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10590": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15706
      ],
      "op": "AND",
      "path": "15"
    },
    "10591": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15706
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10592": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15722
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC6EE427F"
    },
    "10597": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15722
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10598": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10600": {
      "op": "ADD"
    },
    "10601": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10603": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10605": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10606": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10607": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10608": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "SUB",
      "path": "15"
    },
    "10609": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10610": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "DUP7",
      "path": "15"
    },
    "10611": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10612": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "10613": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10614": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10615": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10616": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2980"
    },
    "10619": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10620": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10622": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10623": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "REVERT",
      "path": "15"
    },
    "10624": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10625": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "POP",
      "path": "15"
    },
    "10626": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "GAS",
      "path": "15"
    },
    "10627": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "10628": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10629": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10630": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10631": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2994"
    },
    "10634": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10635": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "10636": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10638": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10639": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "10640": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "10641": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10643": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "REVERT",
      "path": "15"
    },
    "10644": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10645": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "POP",
      "path": "15"
    },
    "10646": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "POP",
      "path": "15"
    },
    "10647": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "POP",
      "path": "15"
    },
    "10648": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "POP",
      "path": "15"
    },
    "10649": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10651": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10652": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "10653": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "10655": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "NOT",
      "path": "15"
    },
    "10656": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "10658": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10659": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "ADD",
      "path": "15"
    },
    "10660": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "AND",
      "path": "15"
    },
    "10661": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10662": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "ADD",
      "path": "15"
    },
    "10663": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10664": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10666": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10667": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "POP",
      "path": "15"
    },
    "10668": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10669": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "ADD",
      "path": "15"
    },
    "10670": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10671": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29B8"
    },
    "10674": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10675": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10676": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3FE6"
    },
    "10679": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        15698,
        15738
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10680": {
      "fn": "Registry.distributePayments",
      "offset": [
        15698,
        15738
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10681": {
      "fn": "Registry.distributePayments",
      "offset": [
        15679,
        15738
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10682": {
      "fn": "Registry.distributePayments",
      "offset": [
        15679,
        15738
      ],
      "op": "POP",
      "path": "15"
    },
    "10683": {
      "fn": "Registry.distributePayments",
      "offset": [
        15748,
        15764
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10685": {
      "fn": "Registry.distributePayments",
      "offset": [
        15773,
        15781
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10692": {
      "op": "SHL"
    },
    "10693": {
      "op": "SUB"
    },
    "10694": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15791
      ],
      "op": "AND",
      "path": "15"
    },
    "10695": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15791
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x313CE567"
    },
    "10700": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10702": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10703": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10704": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "10709": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "AND",
      "path": "15"
    },
    "10710": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "10712": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "SHL",
      "path": "15"
    },
    "10713": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10714": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10715": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10717": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "ADD",
      "path": "15"
    },
    "10718": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10720": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10722": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10723": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10724": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10725": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "SUB",
      "path": "15"
    },
    "10726": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10727": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "DUP7",
      "path": "15"
    },
    "10728": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10729": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "10730": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10731": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10732": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10733": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29F5"
    },
    "10736": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10737": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10739": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10740": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "REVERT",
      "path": "15"
    },
    "10741": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10742": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "POP",
      "path": "15"
    },
    "10743": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "GAS",
      "path": "15"
    },
    "10744": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "10745": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10746": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10747": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10748": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A09"
    },
    "10751": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10752": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "10753": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10755": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10756": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "10757": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "10758": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10760": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "REVERT",
      "path": "15"
    },
    "10761": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10762": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "POP",
      "path": "15"
    },
    "10763": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "POP",
      "path": "15"
    },
    "10764": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "POP",
      "path": "15"
    },
    "10765": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "POP",
      "path": "15"
    },
    "10766": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10768": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10769": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "10770": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "10772": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "NOT",
      "path": "15"
    },
    "10773": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "10775": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10776": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "ADD",
      "path": "15"
    },
    "10777": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "AND",
      "path": "15"
    },
    "10778": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10779": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "ADD",
      "path": "15"
    },
    "10780": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10781": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10783": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10784": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "POP",
      "path": "15"
    },
    "10785": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10786": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "ADD",
      "path": "15"
    },
    "10787": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10788": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A2D"
    },
    "10791": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10792": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10793": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x45B5"
    },
    "10796": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        15767,
        15793
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10797": {
      "fn": "Registry.distributePayments",
      "offset": [
        15767,
        15793
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10798": {
      "fn": "Registry.distributePayments",
      "offset": [
        15748,
        15793
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "10800": {
      "fn": "Registry.distributePayments",
      "offset": [
        15748,
        15793
      ],
      "op": "AND",
      "path": "15"
    },
    "10801": {
      "fn": "Registry.distributePayments",
      "offset": [
        15748,
        15793
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10802": {
      "op": "POP"
    },
    "10803": {
      "fn": "Registry.distributePayments",
      "offset": [
        15803,
        15816
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10805": {
      "fn": "Registry.distributePayments",
      "offset": [
        15819,
        15831
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A3F"
    },
    "10808": {
      "fn": "Registry.distributePayments",
      "offset": [
        15748,
        15793
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10809": {
      "fn": "Registry.distributePayments",
      "offset": [
        15819,
        15821
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "10811": {
      "fn": "Registry.distributePayments",
      "offset": [
        15819,
        15831
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x492F"
    },
    "10814": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        15819,
        15831
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10815": {
      "fn": "Registry.distributePayments",
      "offset": [
        15819,
        15831
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10816": {
      "fn": "Registry.distributePayments",
      "offset": [
        15803,
        15831
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10817": {
      "fn": "Registry.distributePayments",
      "offset": [
        15803,
        15831
      ],
      "op": "POP",
      "path": "15"
    },
    "10818": {
      "fn": "Registry.distributePayments",
      "offset": [
        15841,
        15858
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10820": {
      "fn": "Registry.distributePayments",
      "offset": [
        15894,
        15936
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A51"
    },
    "10823": {
      "fn": "Registry.distributePayments",
      "offset": [
        15906,
        15913
      ],
      "op": "DUP9",
      "path": "15"
    },
    "10824": {
      "fn": "Registry.distributePayments",
      "offset": [
        15906,
        15928
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "10826": {
      "fn": "Registry.distributePayments",
      "offset": [
        15906,
        15928
      ],
      "op": "ADD",
      "path": "15"
    },
    "10827": {
      "fn": "Registry.distributePayments",
      "offset": [
        15906,
        15928
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10828": {
      "fn": "Registry.distributePayments",
      "offset": [
        15930,
        15935
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10829": {
      "fn": "Registry.distributePayments",
      "offset": [
        15894,
        15905
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x364A"
    },
    "10832": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        15894,
        15936
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10833": {
      "fn": "Registry.distributePayments",
      "offset": [
        15894,
        15936
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10834": {
      "fn": "Registry.distributePayments",
      "offset": [
        15861,
        15868
      ],
      "op": "DUP8",
      "path": "15"
    },
    "10835": {
      "fn": "Registry.distributePayments",
      "offset": [
        15861,
        15879
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "10837": {
      "fn": "Registry.distributePayments",
      "offset": [
        15861,
        15879
      ],
      "op": "ADD",
      "path": "15"
    },
    "10838": {
      "fn": "Registry.distributePayments",
      "offset": [
        15861,
        15879
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10839": {
      "fn": "Registry.distributePayments",
      "offset": [
        15861,
        15936
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "10842": {
      "fn": "Registry.distributePayments",
      "offset": [
        15861,
        15936
      ],
      "op": "AND",
      "path": "15"
    },
    "10843": {
      "fn": "Registry.distributePayments",
      "offset": [
        15861,
        15936
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A64"
    },
    "10846": {
      "fn": "Registry.distributePayments",
      "offset": [
        15861,
        15936
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10847": {
      "fn": "Registry.distributePayments",
      "offset": [
        15861,
        15936
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10848": {
      "fn": "Registry.distributePayments",
      "offset": [
        15861,
        15936
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49D7"
    },
    "10851": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        15861,
        15936
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10852": {
      "fn": "Registry.distributePayments",
      "offset": [
        15861,
        15936
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10853": {
      "fn": "Registry.distributePayments",
      "offset": [
        15841,
        15936
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10854": {
      "fn": "Registry.distributePayments",
      "offset": [
        15841,
        15936
      ],
      "op": "POP",
      "path": "15"
    },
    "10855": {
      "fn": "Registry.distributePayments",
      "offset": [
        15946,
        15968
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10857": {
      "fn": "Registry.distributePayments",
      "offset": [
        15983,
        15990
      ],
      "op": "DUP8",
      "path": "15"
    },
    "10858": {
      "fn": "Registry.distributePayments",
      "offset": [
        15983,
        16003
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10860": {
      "fn": "Registry.distributePayments",
      "offset": [
        15983,
        16003
      ],
      "op": "ADD",
      "path": "15"
    },
    "10861": {
      "fn": "Registry.distributePayments",
      "offset": [
        15983,
        16003
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10862": {
      "fn": "Registry.distributePayments",
      "offset": [
        15971,
        16003
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "10864": {
      "fn": "Registry.distributePayments",
      "offset": [
        15971,
        16003
      ],
      "op": "AND",
      "path": "15"
    },
    "10865": {
      "fn": "Registry.distributePayments",
      "offset": [
        15971,
        15980
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10866": {
      "fn": "Registry.distributePayments",
      "offset": [
        15971,
        16003
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A7B"
    },
    "10869": {
      "fn": "Registry.distributePayments",
      "offset": [
        15971,
        16003
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10870": {
      "fn": "Registry.distributePayments",
      "offset": [
        15971,
        16003
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10871": {
      "fn": "Registry.distributePayments",
      "offset": [
        15971,
        16003
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49D7"
    },
    "10874": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        15971,
        16003
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10875": {
      "fn": "Registry.distributePayments",
      "offset": [
        15971,
        16003
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10876": {
      "fn": "Registry.distributePayments",
      "offset": [
        15946,
        16003
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10877": {
      "op": "POP"
    },
    "10878": {
      "fn": "Registry.distributePayments",
      "offset": [
        16013,
        16034
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10880": {
      "offset": [
        2504,
        2509
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x15180"
    },
    "10884": {
      "fn": "Registry.distributePayments",
      "offset": [
        16038,
        16071
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A8D"
    },
    "10887": {
      "fn": "Registry.distributePayments",
      "offset": [
        16062,
        16071
      ],
      "op": "DUP5",
      "path": "15"
    },
    "10888": {
      "fn": "Registry.distributePayments",
      "offset": [
        16038,
        16059
      ],
      "op": "DUP11",
      "path": "15"
    },
    "10889": {
      "fn": "Registry.distributePayments",
      "offset": [
        16038,
        16071
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49D7"
    },
    "10892": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16038,
        16071
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10893": {
      "fn": "Registry.distributePayments",
      "offset": [
        16038,
        16071
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10894": {
      "fn": "Registry.distributePayments",
      "offset": [
        16037,
        16101
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A97"
    },
    "10897": {
      "fn": "Registry.distributePayments",
      "offset": [
        16037,
        16101
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10898": {
      "fn": "Registry.distributePayments",
      "offset": [
        16037,
        16101
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10899": {
      "fn": "Registry.distributePayments",
      "offset": [
        16037,
        16101
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48CA"
    },
    "10902": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16037,
        16101
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10903": {
      "fn": "Registry.distributePayments",
      "offset": [
        16037,
        16101
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10904": {
      "fn": "Registry.distributePayments",
      "offset": [
        16013,
        16101
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10905": {
      "fn": "Registry.distributePayments",
      "offset": [
        16013,
        16101
      ],
      "op": "POP",
      "path": "15"
    },
    "10906": {
      "fn": "Registry.distributePayments",
      "offset": [
        16136,
        16137
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 77,
      "value": "0x0"
    },
    "10908": {
      "fn": "Registry.distributePayments",
      "offset": [
        16119,
        16133
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10909": {
      "branch": 148,
      "fn": "Registry.distributePayments",
      "offset": [
        16119,
        16137
      ],
      "op": "GT",
      "path": "15"
    },
    "10910": {
      "fn": "Registry.distributePayments",
      "offset": [
        16111,
        16177
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AF5"
    },
    "10913": {
      "branch": 148,
      "fn": "Registry.distributePayments",
      "offset": [
        16111,
        16177
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10914": {
      "fn": "Registry.distributePayments",
      "offset": [
        16111,
        16177
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10916": {
      "fn": "Registry.distributePayments",
      "offset": [
        16111,
        16177
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10917": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10921": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10923": {
      "op": "SHL"
    },
    "10924": {
      "fn": "Registry.distributePayments",
      "offset": [
        16111,
        16177
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10925": {
      "fn": "Registry.distributePayments",
      "offset": [
        16111,
        16177
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10926": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10928": {
      "fn": "Registry.distributePayments",
      "offset": [
        16111,
        16177
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10930": {
      "fn": "Registry.distributePayments",
      "offset": [
        16111,
        16177
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10931": {
      "fn": "Registry.distributePayments",
      "offset": [
        16111,
        16177
      ],
      "op": "ADD",
      "path": "15"
    },
    "10932": {
      "op": "MSTORE"
    },
    "10933": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "10935": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10937": {
      "op": "DUP3"
    },
    "10938": {
      "op": "ADD"
    },
    "10939": {
      "op": "MSTORE"
    },
    "10940": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A746F74616C2072656E746572207061796D656E74206973207A"
    },
    "10973": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10975": {
      "op": "DUP3"
    },
    "10976": {
      "op": "ADD"
    },
    "10977": {
      "op": "MSTORE"
    },
    "10978": {
      "op": "PUSH3",
      "value": "0x65726F"
    },
    "10982": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "10984": {
      "op": "SHL"
    },
    "10985": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10987": {
      "op": "DUP3"
    },
    "10988": {
      "op": "ADD"
    },
    "10989": {
      "op": "MSTORE"
    },
    "10990": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10992": {
      "op": "ADD"
    },
    "10993": {
      "fn": "Registry.distributePayments",
      "offset": [
        16111,
        16177
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "10996": {
      "op": "JUMP"
    },
    "10997": {
      "fn": "Registry.distributePayments",
      "offset": [
        16111,
        16177
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10998": {
      "fn": "Registry.distributePayments",
      "offset": [
        16211,
        16212
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 78,
      "value": "0x0"
    },
    "11000": {
      "fn": "Registry.distributePayments",
      "offset": [
        16195,
        16208
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11001": {
      "branch": 149,
      "fn": "Registry.distributePayments",
      "offset": [
        16195,
        16212
      ],
      "op": "GT",
      "path": "15"
    },
    "11002": {
      "fn": "Registry.distributePayments",
      "offset": [
        16187,
        16246
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B45"
    },
    "11005": {
      "branch": 149,
      "fn": "Registry.distributePayments",
      "offset": [
        16187,
        16246
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11006": {
      "fn": "Registry.distributePayments",
      "offset": [
        16187,
        16246
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11008": {
      "fn": "Registry.distributePayments",
      "offset": [
        16187,
        16246
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11009": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11013": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11015": {
      "op": "SHL"
    },
    "11016": {
      "fn": "Registry.distributePayments",
      "offset": [
        16187,
        16246
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11017": {
      "fn": "Registry.distributePayments",
      "offset": [
        16187,
        16246
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11020": {
      "fn": "Registry.distributePayments",
      "offset": [
        16187,
        16246
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11022": {
      "fn": "Registry.distributePayments",
      "offset": [
        16187,
        16246
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11023": {
      "fn": "Registry.distributePayments",
      "offset": [
        16187,
        16246
      ],
      "op": "ADD",
      "path": "15"
    },
    "11024": {
      "op": "MSTORE"
    },
    "11025": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "11027": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11029": {
      "op": "DUP3"
    },
    "11030": {
      "op": "ADD"
    },
    "11031": {
      "op": "MSTORE"
    },
    "11032": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6C656E646572207061796D656E74206973207A65726F000000"
    },
    "11065": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11067": {
      "op": "DUP3"
    },
    "11068": {
      "op": "ADD"
    },
    "11069": {
      "op": "MSTORE"
    },
    "11070": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11072": {
      "op": "ADD"
    },
    "11073": {
      "fn": "Registry.distributePayments",
      "offset": [
        16187,
        16246
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "11076": {
      "op": "JUMP"
    },
    "11077": {
      "fn": "Registry.distributePayments",
      "offset": [
        16187,
        16246
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11078": {
      "fn": "Registry.distributePayments",
      "offset": [
        16256,
        16277
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11080": {
      "fn": "Registry.distributePayments",
      "offset": [
        16280,
        16310
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B51"
    },
    "11083": {
      "fn": "Registry.distributePayments",
      "offset": [
        16297,
        16310
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11084": {
      "fn": "Registry.distributePayments",
      "offset": [
        16280,
        16294
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11085": {
      "fn": "Registry.distributePayments",
      "offset": [
        16280,
        16310
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A19"
    },
    "11088": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16280,
        16310
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11089": {
      "fn": "Registry.distributePayments",
      "offset": [
        16280,
        16310
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11090": {
      "fn": "Registry.distributePayments",
      "offset": [
        16256,
        16310
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11091": {
      "fn": "Registry.distributePayments",
      "offset": [
        16256,
        16310
      ],
      "op": "POP",
      "path": "15"
    },
    "11092": {
      "fn": "Registry.distributePayments",
      "offset": [
        16324,
        16331
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "11094": {
      "fn": "Registry.distributePayments",
      "offset": [
        16324,
        16331
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11095": {
      "fn": "Registry.distributePayments",
      "offset": [
        16335,
        16336
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11097": {
      "branch": 150,
      "fn": "Registry.distributePayments",
      "offset": [
        16324,
        16336
      ],
      "op": "EQ",
      "path": "15"
    },
    "11098": {
      "fn": "Registry.distributePayments",
      "offset": [
        16320,
        16465
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B7D"
    },
    "11101": {
      "branch": 150,
      "fn": "Registry.distributePayments",
      "offset": [
        16320,
        16465
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11102": {
      "fn": "Registry.distributePayments",
      "offset": [
        16352,
        16368
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11104": {
      "fn": "Registry.distributePayments",
      "offset": [
        16371,
        16415
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B6D"
    },
    "11107": {
      "fn": "Registry.distributePayments",
      "offset": [
        16379,
        16392
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11108": {
      "fn": "Registry.distributePayments",
      "offset": [
        16394,
        16401
      ],
      "op": "DUP14",
      "path": "15"
    },
    "11109": {
      "fn": "Registry.distributePayments",
      "offset": [
        16394,
        16414
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "11111": {
      "fn": "Registry.distributePayments",
      "offset": [
        16394,
        16414
      ],
      "op": "ADD",
      "path": "15"
    },
    "11112": {
      "fn": "Registry.distributePayments",
      "offset": [
        16394,
        16414
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11113": {
      "fn": "Registry.distributePayments",
      "offset": [
        16371,
        16378
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x381E"
    },
    "11116": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16371,
        16415
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11117": {
      "fn": "Registry.distributePayments",
      "offset": [
        16371,
        16415
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11118": {
      "fn": "Registry.distributePayments",
      "offset": [
        16352,
        16415
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11119": {
      "op": "POP"
    },
    "11120": {
      "fn": "Registry.distributePayments",
      "offset": [
        16429,
        16454
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 79,
      "value": "0x2B79"
    },
    "11123": {
      "fn": "Registry.distributePayments",
      "offset": [
        16352,
        16415
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11124": {
      "fn": "Registry.distributePayments",
      "offset": [
        16429,
        16454
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11125": {
      "fn": "Registry.distributePayments",
      "offset": [
        16429,
        16454
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A19"
    },
    "11128": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16429,
        16454
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11129": {
      "fn": "Registry.distributePayments",
      "offset": [
        16429,
        16454
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11130": {
      "fn": "Registry.distributePayments",
      "offset": [
        16429,
        16454
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "11131": {
      "fn": "Registry.distributePayments",
      "offset": [
        16429,
        16454
      ],
      "op": "POP",
      "path": "15"
    },
    "11132": {
      "fn": "Registry.distributePayments",
      "offset": [
        16338,
        16465
      ],
      "op": "POP",
      "path": "15"
    },
    "11133": {
      "fn": "Registry.distributePayments",
      "offset": [
        16320,
        16465
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11134": {
      "fn": "Registry.distributePayments",
      "offset": [
        16503,
        16524
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 80,
      "value": "0x20"
    },
    "11136": {
      "fn": "Registry.distributePayments",
      "offset": [
        16503,
        16524
      ],
      "op": "DUP12",
      "path": "15"
    },
    "11137": {
      "fn": "Registry.distributePayments",
      "offset": [
        16503,
        16524
      ],
      "op": "ADD",
      "path": "15"
    },
    "11138": {
      "fn": "Registry.distributePayments",
      "offset": [
        16503,
        16524
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11139": {
      "fn": "Registry.distributePayments",
      "offset": [
        16474,
        16540
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B97"
    },
    "11142": {
      "fn": "Registry.distributePayments",
      "offset": [
        16474,
        16540
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11149": {
      "op": "SHL"
    },
    "11150": {
      "op": "SUB"
    },
    "11151": {
      "fn": "Registry.distributePayments",
      "offset": [
        16474,
        16502
      ],
      "op": "DUP10",
      "path": "15"
    },
    "11152": {
      "fn": "Registry.distributePayments",
      "offset": [
        16474,
        16502
      ],
      "op": "AND",
      "path": "15"
    },
    "11153": {
      "fn": "Registry.distributePayments",
      "offset": [
        16474,
        16502
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11154": {
      "fn": "Registry.distributePayments",
      "offset": [
        16526,
        16539
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11155": {
      "fn": "Registry.distributePayments",
      "offset": [
        16474,
        16502
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x38FB"
    },
    "11158": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16474,
        16540
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11159": {
      "fn": "Registry.distributePayments",
      "offset": [
        16474,
        16540
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11160": {
      "fn": "Registry.distributePayments",
      "offset": [
        16554,
        16571
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11161": {
      "branch": 151,
      "fn": "Registry.distributePayments",
      "offset": [
        16554,
        16571
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11162": {
      "fn": "Registry.distributePayments",
      "offset": [
        16550,
        16664
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BB4"
    },
    "11165": {
      "branch": 151,
      "fn": "Registry.distributePayments",
      "offset": [
        16550,
        16664
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11166": {
      "fn": "Registry.distributePayments",
      "offset": [
        16616,
        16637
      ],
      "op": "DUP10",
      "path": "15",
      "statement": 81
    },
    "11167": {
      "fn": "Registry.distributePayments",
      "offset": [
        16616,
        16637
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11168": {
      "fn": "Registry.distributePayments",
      "offset": [
        16587,
        16653
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BB4"
    },
    "11171": {
      "fn": "Registry.distributePayments",
      "offset": [
        16587,
        16653
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11178": {
      "op": "SHL"
    },
    "11179": {
      "op": "SUB"
    },
    "11180": {
      "fn": "Registry.distributePayments",
      "offset": [
        16587,
        16615
      ],
      "op": "DUP10",
      "path": "15"
    },
    "11181": {
      "fn": "Registry.distributePayments",
      "offset": [
        16587,
        16615
      ],
      "op": "AND",
      "path": "15"
    },
    "11182": {
      "fn": "Registry.distributePayments",
      "offset": [
        16587,
        16615
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11183": {
      "fn": "Registry.distributePayments",
      "offset": [
        16639,
        16652
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11184": {
      "fn": "Registry.distributePayments",
      "offset": [
        16587,
        16615
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x38FB"
    },
    "11187": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16587,
        16653
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11188": {
      "fn": "Registry.distributePayments",
      "offset": [
        16587,
        16653
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11189": {
      "fn": "Registry.distributePayments",
      "offset": [
        15609,
        16670
      ],
      "op": "POP",
      "path": "15"
    },
    "11190": {
      "fn": "Registry.distributePayments",
      "offset": [
        15609,
        16670
      ],
      "op": "POP",
      "path": "15"
    },
    "11191": {
      "fn": "Registry.distributePayments",
      "offset": [
        15609,
        16670
      ],
      "op": "POP",
      "path": "15"
    },
    "11192": {
      "fn": "Registry.distributePayments",
      "offset": [
        15609,
        16670
      ],
      "op": "POP",
      "path": "15"
    },
    "11193": {
      "fn": "Registry.distributePayments",
      "offset": [
        15609,
        16670
      ],
      "op": "POP",
      "path": "15"
    },
    "11194": {
      "fn": "Registry.distributePayments",
      "offset": [
        15609,
        16670
      ],
      "op": "POP",
      "path": "15"
    },
    "11195": {
      "fn": "Registry.distributePayments",
      "offset": [
        15609,
        16670
      ],
      "op": "POP",
      "path": "15"
    },
    "11196": {
      "fn": "Registry.distributePayments",
      "offset": [
        15609,
        16670
      ],
      "op": "POP",
      "path": "15"
    },
    "11197": {
      "fn": "Registry.distributePayments",
      "offset": [
        15444,
        16670
      ],
      "op": "POP",
      "path": "15"
    },
    "11198": {
      "fn": "Registry.distributePayments",
      "offset": [
        15444,
        16670
      ],
      "op": "POP",
      "path": "15"
    },
    "11199": {
      "fn": "Registry.distributePayments",
      "offset": [
        15444,
        16670
      ],
      "op": "POP",
      "path": "15"
    },
    "11200": {
      "fn": "Registry.distributePayments",
      "jump": "o",
      "offset": [
        15444,
        16670
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11201": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24869,
        25321
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11202": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24976,
        24977
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 82,
      "value": "0x0"
    },
    "11204": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24959
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11205": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24970
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "11207": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24970
      ],
      "op": "ADD",
      "path": "15"
    },
    "11208": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24970
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11209": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24971,
        24972
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11210": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24973
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11211": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24973
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11212": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24973
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11213": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24973
      ],
      "op": "LT",
      "path": "15"
    },
    "11214": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24973
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BD9"
    },
    "11217": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24973
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11218": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24973
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BD9"
    },
    "11221": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24973
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "11224": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        24957,
        24973
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11225": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24973
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11226": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24973
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11228": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24973
      ],
      "op": "MUL",
      "path": "15"
    },
    "11229": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24973
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11231": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24973
      ],
      "op": "ADD",
      "path": "15"
    },
    "11232": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24973
      ],
      "op": "ADD",
      "path": "15"
    },
    "11233": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24973
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11234": {
      "branch": 152,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24957,
        24977
      ],
      "op": "GT",
      "path": "15"
    },
    "11235": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24949,
        25008
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C2E"
    },
    "11238": {
      "branch": 152,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24949,
        25008
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11239": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24949,
        25008
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11241": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24949,
        25008
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11242": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11246": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11248": {
      "op": "SHL"
    },
    "11249": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24949,
        25008
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11250": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24949,
        25008
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11253": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24949,
        25008
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11255": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24949,
        25008
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11256": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24949,
        25008
      ],
      "op": "ADD",
      "path": "15"
    },
    "11257": {
      "op": "MSTORE"
    },
    "11258": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "11260": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11262": {
      "op": "DUP3"
    },
    "11263": {
      "op": "ADD"
    },
    "11264": {
      "op": "MSTORE"
    },
    "11265": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6C656E6420616D6F756E74206973207A65726F000000000000"
    },
    "11298": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11300": {
      "op": "DUP3"
    },
    "11301": {
      "op": "ADD"
    },
    "11302": {
      "op": "MSTORE"
    },
    "11303": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11305": {
      "op": "ADD"
    },
    "11306": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24949,
        25008
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "11309": {
      "op": "JUMP"
    },
    "11310": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24949,
        25008
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11311": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25046,
        25062
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 83,
      "value": "0xFFFF"
    },
    "11314": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25062
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11315": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25062
      ],
      "op": "AND",
      "path": "15"
    },
    "11316": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25028
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11317": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25039
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "11319": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25039
      ],
      "op": "ADD",
      "path": "15"
    },
    "11320": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25039
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11321": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25040,
        25041
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11322": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25042
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11323": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25042
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11324": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25042
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11325": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25042
      ],
      "op": "LT",
      "path": "15"
    },
    "11326": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25042
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C49"
    },
    "11329": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25042
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11330": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25042
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C49"
    },
    "11333": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25042
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "11336": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25026,
        25042
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11337": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25042
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11338": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25042
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11340": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25042
      ],
      "op": "MUL",
      "path": "15"
    },
    "11341": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25042
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11343": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25042
      ],
      "op": "ADD",
      "path": "15"
    },
    "11344": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25042
      ],
      "op": "ADD",
      "path": "15"
    },
    "11345": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25042
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11346": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25062
      ],
      "op": "GT",
      "path": "15"
    },
    "11347": {
      "branch": 153,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25026,
        25062
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11348": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25018,
        25084
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C93"
    },
    "11351": {
      "branch": 153,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25018,
        25084
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11352": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25018,
        25084
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11354": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25018,
        25084
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11355": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11359": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11361": {
      "op": "SHL"
    },
    "11362": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25018,
        25084
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11363": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25018,
        25084
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11366": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25018,
        25084
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11368": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25018,
        25084
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11369": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25018,
        25084
      ],
      "op": "ADD",
      "path": "15"
    },
    "11370": {
      "op": "MSTORE"
    },
    "11371": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "11373": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11375": {
      "op": "DUP3"
    },
    "11376": {
      "op": "ADD"
    },
    "11377": {
      "op": "MSTORE"
    },
    "11378": {
      "op": "PUSH17",
      "value": "0x2932A7232A1D1D3737BA103AB4B73A189B"
    },
    "11396": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "11398": {
      "op": "SHL"
    },
    "11399": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11401": {
      "op": "DUP3"
    },
    "11402": {
      "op": "ADD"
    },
    "11403": {
      "op": "MSTORE"
    },
    "11404": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11406": {
      "op": "ADD"
    },
    "11407": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25018,
        25084
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "11410": {
      "op": "JUMP"
    },
    "11411": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25018,
        25084
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11412": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25126,
        25127
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 84,
      "value": "0x0"
    },
    "11414": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25104
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11415": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25120
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "11417": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25120
      ],
      "op": "ADD",
      "path": "15"
    },
    "11418": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25120
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11419": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25121,
        25122
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11420": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25123
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11421": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25123
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11422": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25123
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11423": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25123
      ],
      "op": "LT",
      "path": "15"
    },
    "11424": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25123
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2CAB"
    },
    "11427": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25123
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11428": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25123
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2CAB"
    },
    "11431": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25123
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "11434": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25102,
        25123
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11435": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25123
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11436": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11438": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25123
      ],
      "op": "MUL",
      "path": "15"
    },
    "11439": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11441": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25123
      ],
      "op": "ADD",
      "path": "15"
    },
    "11442": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25123
      ],
      "op": "ADD",
      "path": "15"
    },
    "11443": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25123
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11444": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25127
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "11446": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25127
      ],
      "op": "AND",
      "path": "15"
    },
    "11447": {
      "branch": 154,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25102,
        25127
      ],
      "op": "GT",
      "path": "15"
    },
    "11448": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25094,
        25155
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2CD3"
    },
    "11451": {
      "branch": 154,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25094,
        25155
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11452": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25094,
        25155
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11454": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25094,
        25155
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11455": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11459": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11461": {
      "op": "SHL"
    },
    "11462": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25094,
        25155
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11463": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25094,
        25155
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11464": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25094,
        25155
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11466": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25094,
        25155
      ],
      "op": "ADD",
      "path": "15"
    },
    "11467": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25094,
        25155
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "11470": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25094,
        25155
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11471": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25094,
        25155
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x477A"
    },
    "11474": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25094,
        25155
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11475": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25094,
        25155
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11476": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25198,
        25213
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 85,
      "value": "0xFF"
    },
    "11478": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25213
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11479": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25213
      ],
      "op": "AND",
      "path": "15"
    },
    "11480": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25175
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11481": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25191
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "11483": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25191
      ],
      "op": "ADD",
      "path": "15"
    },
    "11484": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25191
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11485": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25192,
        25193
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11486": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25194
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11487": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25194
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11488": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25194
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11489": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25194
      ],
      "op": "LT",
      "path": "15"
    },
    "11490": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25194
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2CED"
    },
    "11493": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25194
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11494": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25194
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2CED"
    },
    "11497": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25194
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "11500": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25173,
        25194
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11501": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25194
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11502": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25194
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11504": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25194
      ],
      "op": "MUL",
      "path": "15"
    },
    "11505": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25194
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11507": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25194
      ],
      "op": "ADD",
      "path": "15"
    },
    "11508": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25194
      ],
      "op": "ADD",
      "path": "15"
    },
    "11509": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25194
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11510": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25213
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "11512": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25213
      ],
      "op": "AND",
      "path": "15"
    },
    "11513": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25213
      ],
      "op": "GT",
      "path": "15"
    },
    "11514": {
      "branch": 155,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25173,
        25213
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11515": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25165,
        25234
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D39"
    },
    "11518": {
      "branch": 155,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25165,
        25234
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11519": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25165,
        25234
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11521": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25165,
        25234
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11522": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11526": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11528": {
      "op": "SHL"
    },
    "11529": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25165,
        25234
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11530": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25165,
        25234
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11533": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25165,
        25234
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11535": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25165,
        25234
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11536": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25165,
        25234
      ],
      "op": "ADD",
      "path": "15"
    },
    "11537": {
      "op": "MSTORE"
    },
    "11538": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "11540": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11542": {
      "op": "DUP3"
    },
    "11543": {
      "op": "ADD"
    },
    "11544": {
      "op": "MSTORE"
    },
    "11545": {
      "op": "PUSH16",
      "value": "0xA4CA9C8CA87474DCDEE840EAD2DCE87"
    },
    "11562": {
      "op": "PUSH1",
      "value": "0x83"
    },
    "11564": {
      "op": "SHL"
    },
    "11565": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11567": {
      "op": "DUP3"
    },
    "11568": {
      "op": "ADD"
    },
    "11569": {
      "op": "MSTORE"
    },
    "11570": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11572": {
      "op": "ADD"
    },
    "11573": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25165,
        25234
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "11576": {
      "op": "JUMP"
    },
    "11577": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25165,
        25234
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11578": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25283,
        25284
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 86,
      "value": "0x0"
    },
    "11580": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25259,
        25261
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11581": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25259,
        25276
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "11583": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25259,
        25276
      ],
      "op": "ADD",
      "path": "15"
    },
    "11584": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25259,
        25276
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11585": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25277,
        25278
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11586": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25259,
        25279
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11587": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25259,
        25279
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11588": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25259,
        25279
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11589": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25259,
        25279
      ],
      "op": "LT",
      "path": "15"
    },
    "11590": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25259,
        25279
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D51"
    },
    "11593": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25259,
        25279
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11594": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25259,
        25279
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D51"
    },
    "11597": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25259,
        25279
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "11600": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25259,
        25279
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11601": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25259,
        25279
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11602": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25259,
        25279
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11604": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25259,
        25279
      ],
      "op": "MUL",
      "path": "15"
    },
    "11605": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25259,
        25279
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11607": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25259,
        25279
      ],
      "op": "ADD",
      "path": "15"
    },
    "11608": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25259,
        25279
      ],
      "op": "ADD",
      "path": "15"
    },
    "11609": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25259,
        25279
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11610": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25252,
        25280
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "11612": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25252,
        25280
      ],
      "op": "SHR",
      "path": "15"
    },
    "11613": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25252,
        25284
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "11618": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25252,
        25284
      ],
      "op": "AND",
      "path": "15"
    },
    "11619": {
      "branch": 156,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25252,
        25284
      ],
      "op": "GT",
      "path": "15"
    },
    "11620": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25244,
        25314
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD69"
    },
    "11623": {
      "branch": 156,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25244,
        25314
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11624": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25244,
        25314
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11626": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25244,
        25314
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11627": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11631": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11633": {
      "op": "SHL"
    },
    "11634": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25244,
        25314
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11635": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25244,
        25314
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11636": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25244,
        25314
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11638": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25244,
        25314
      ],
      "op": "ADD",
      "path": "15"
    },
    "11639": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25244,
        25314
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "11642": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25244,
        25314
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11643": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25244,
        25314
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x47B1"
    },
    "11646": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25244,
        25314
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11647": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23796,
        24062
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11648": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23865,
        23904
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 87,
      "value": "0x2D8C"
    },
    "11651": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23882,
        23889
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11652": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23882,
        23903
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11654": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23882,
        23903
      ],
      "op": "ADD",
      "path": "15"
    },
    "11655": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23882,
        23903
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11656": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23865,
        23881
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x392B"
    },
    "11659": {
      "fn": "Registry.ensureIsNull",
      "jump": "i",
      "offset": [
        23865,
        23904
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11660": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23865,
        23904
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11661": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23922,
        23945
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 88,
      "value": "0x40"
    },
    "11663": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23922,
        23945
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11664": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23922,
        23945
      ],
      "op": "ADD",
      "path": "15"
    },
    "11665": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23922,
        23945
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11666": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23922,
        23950
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "11668": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23922,
        23950
      ],
      "op": "AND",
      "path": "15"
    },
    "11669": {
      "branch": 157,
      "fn": "Registry.ensureIsNull",
      "offset": [
        23922,
        23950
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11670": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23914,
        23979
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2DDC"
    },
    "11673": {
      "branch": 157,
      "fn": "Registry.ensureIsNull",
      "offset": [
        23914,
        23979
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11674": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23914,
        23979
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11676": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23914,
        23979
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11677": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11681": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11683": {
      "op": "SHL"
    },
    "11684": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23914,
        23979
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11685": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23914,
        23979
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11686": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11688": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23914,
        23979
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11690": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23914,
        23979
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11691": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23914,
        23979
      ],
      "op": "ADD",
      "path": "15"
    },
    "11692": {
      "op": "MSTORE"
    },
    "11693": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "11695": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11697": {
      "op": "DUP3"
    },
    "11698": {
      "op": "ADD"
    },
    "11699": {
      "op": "MSTORE"
    },
    "11700": {
      "op": "PUSH24",
      "value": "0x52654E46543A3A6475726174696F6E206E6F74207A65726F"
    },
    "11725": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11727": {
      "op": "SHL"
    },
    "11728": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11730": {
      "op": "DUP3"
    },
    "11731": {
      "op": "ADD"
    },
    "11732": {
      "op": "MSTORE"
    },
    "11733": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11735": {
      "op": "ADD"
    },
    "11736": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23914,
        23979
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "11739": {
      "op": "JUMP"
    },
    "11740": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23914,
        23979
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11741": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23997,
        24019
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 89,
      "value": "0x60"
    },
    "11743": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23997,
        24019
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11744": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23997,
        24019
      ],
      "op": "ADD",
      "path": "15"
    },
    "11745": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23997,
        24019
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11750": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11752": {
      "op": "SHL"
    },
    "11753": {
      "op": "SUB"
    },
    "11754": {
      "op": "NOT"
    },
    "11755": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23997,
        24024
      ],
      "op": "AND",
      "path": "15"
    },
    "11756": {
      "branch": 158,
      "fn": "Registry.ensureIsNull",
      "offset": [
        23997,
        24024
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11757": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23989,
        24055
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15C8"
    },
    "11760": {
      "branch": 158,
      "fn": "Registry.ensureIsNull",
      "offset": [
        23989,
        24055
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11761": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23989,
        24055
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11763": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23989,
        24055
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11764": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11768": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11770": {
      "op": "SHL"
    },
    "11771": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23989,
        24055
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11772": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23989,
        24055
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11775": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23989,
        24055
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11777": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23989,
        24055
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11778": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23989,
        24055
      ],
      "op": "ADD",
      "path": "15"
    },
    "11779": {
      "op": "MSTORE"
    },
    "11780": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "11782": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11784": {
      "op": "DUP3"
    },
    "11785": {
      "op": "ADD"
    },
    "11786": {
      "op": "MSTORE"
    },
    "11787": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E74207072696365206E6F74207A65726F000000000000"
    },
    "11820": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11822": {
      "op": "DUP3"
    },
    "11823": {
      "op": "ADD"
    },
    "11824": {
      "op": "MSTORE"
    },
    "11825": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11827": {
      "op": "ADD"
    },
    "11828": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23989,
        24055
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "11831": {
      "op": "JUMP"
    },
    "11832": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26744,
        26873
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11833": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26836,
        26837
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 90,
      "value": "0x0"
    },
    "11835": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26824,
        26833
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11836": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26824,
        26837
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "11838": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26824,
        26837
      ],
      "op": "AND",
      "path": "15"
    },
    "11839": {
      "branch": 159,
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26824,
        26837
      ],
      "op": "GT",
      "path": "15"
    },
    "11840": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26816,
        26866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15C8"
    },
    "11843": {
      "branch": 159,
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26816,
        26866
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11844": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26816,
        26866
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11846": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26816,
        26866
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11847": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11851": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11853": {
      "op": "SHL"
    },
    "11854": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26816,
        26866
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11855": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26816,
        26866
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11858": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26816,
        26866
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11860": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26816,
        26866
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11861": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26816,
        26866
      ],
      "op": "ADD",
      "path": "15"
    },
    "11862": {
      "op": "MSTORE"
    },
    "11863": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "11865": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11867": {
      "op": "DUP3"
    },
    "11868": {
      "op": "ADD"
    },
    "11869": {
      "op": "MSTORE"
    },
    "11870": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A746F6B656E2069732073656E74696E656C0000000000000000"
    },
    "11903": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11905": {
      "op": "DUP3"
    },
    "11906": {
      "op": "ADD"
    },
    "11907": {
      "op": "MSTORE"
    },
    "11908": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11910": {
      "op": "ADD"
    },
    "11911": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26816,
        26866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "11914": {
      "op": "JUMP"
    },
    "11915": {
      "fn": "Registry.sliceArr",
      "offset": [
        23021,
        23347
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11916": {
      "fn": "Registry.sliceArr",
      "offset": [
        23170,
        23188
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "11918": {
      "fn": "Registry.sliceArr",
      "offset": [
        23218,
        23231
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 91,
      "value": "0x2E97"
    },
    "11921": {
      "fn": "Registry.sliceArr",
      "offset": [
        23225,
        23231
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11922": {
      "fn": "Registry.sliceArr",
      "offset": [
        23218,
        23222
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11923": {
      "fn": "Registry.sliceArr",
      "offset": [
        23218,
        23231
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A19"
    },
    "11926": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23218,
        23231
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11927": {
      "fn": "Registry.sliceArr",
      "offset": [
        23218,
        23231
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11932": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11934": {
      "op": "SHL"
    },
    "11935": {
      "op": "SUB"
    },
    "11936": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11937": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "GT",
      "path": "15"
    },
    "11938": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11939": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EAE"
    },
    "11942": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11943": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EAE"
    },
    "11946": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AB9"
    },
    "11949": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23204,
        23232
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11950": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11951": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11953": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11954": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11955": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11956": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11957": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11958": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11959": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11961": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "MUL",
      "path": "15"
    },
    "11962": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11964": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "ADD",
      "path": "15"
    },
    "11965": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11966": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "ADD",
      "path": "15"
    },
    "11967": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11969": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11970": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11971": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11972": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2ED7"
    },
    "11975": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11976": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11977": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11979": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "ADD",
      "path": "15"
    },
    "11980": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11982": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11983": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "MUL",
      "path": "15"
    },
    "11984": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11985": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "11986": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11987": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "11988": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "ADD",
      "path": "15"
    },
    "11989": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11990": {
      "op": "POP"
    },
    "11991": {
      "fn": "Registry.sliceArr",
      "offset": [
        23204,
        23232
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11992": {
      "op": "POP"
    },
    "11993": {
      "fn": "Registry.sliceArr",
      "offset": [
        23200,
        23232
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11994": {
      "op": "POP"
    },
    "11995": {
      "fn": "Registry.sliceArr",
      "offset": [
        23259,
        23265
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11996": {
      "fn": "Registry.sliceArr",
      "offset": [
        23242,
        23341
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11997": {
      "fn": "Registry.sliceArr",
      "offset": [
        23271,
        23275
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11998": {
      "fn": "Registry.sliceArr",
      "offset": [
        23267,
        23268
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11999": {
      "fn": "Registry.sliceArr",
      "offset": [
        23267,
        23275
      ],
      "op": "LT",
      "path": "15"
    },
    "12000": {
      "fn": "Registry.sliceArr",
      "offset": [
        23242,
        23341
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12001": {
      "fn": "Registry.sliceArr",
      "offset": [
        23242,
        23341
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F41"
    },
    "12004": {
      "fn": "Registry.sliceArr",
      "offset": [
        23242,
        23341
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12005": {
      "fn": "Registry.sliceArr",
      "offset": [
        23312,
        23315
      ],
      "op": "DUP6",
      "path": "15",
      "statement": 92
    },
    "12006": {
      "fn": "Registry.sliceArr",
      "offset": [
        23316,
        23329
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EEF"
    },
    "12009": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23329
      ],
      "op": "DUP5",
      "path": "15"
    },
    "12010": {
      "fn": "Registry.sliceArr",
      "offset": [
        23316,
        23317
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12011": {
      "fn": "Registry.sliceArr",
      "offset": [
        23316,
        23329
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A19"
    },
    "12014": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23316,
        23329
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12015": {
      "fn": "Registry.sliceArr",
      "offset": [
        23316,
        23329
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12016": {
      "fn": "Registry.sliceArr",
      "offset": [
        23312,
        23330
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12017": {
      "fn": "Registry.sliceArr",
      "offset": [
        23312,
        23330
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12018": {
      "fn": "Registry.sliceArr",
      "offset": [
        23312,
        23330
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12019": {
      "fn": "Registry.sliceArr",
      "offset": [
        23312,
        23330
      ],
      "op": "LT",
      "path": "15"
    },
    "12020": {
      "fn": "Registry.sliceArr",
      "offset": [
        23312,
        23330
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EFF"
    },
    "12023": {
      "fn": "Registry.sliceArr",
      "offset": [
        23312,
        23330
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12024": {
      "fn": "Registry.sliceArr",
      "offset": [
        23312,
        23330
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EFF"
    },
    "12027": {
      "fn": "Registry.sliceArr",
      "offset": [
        23312,
        23330
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "12030": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23312,
        23330
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12031": {
      "fn": "Registry.sliceArr",
      "offset": [
        23312,
        23330
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12032": {
      "fn": "Registry.sliceArr",
      "offset": [
        23312,
        23330
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12034": {
      "fn": "Registry.sliceArr",
      "offset": [
        23312,
        23330
      ],
      "op": "MUL",
      "path": "15"
    },
    "12035": {
      "fn": "Registry.sliceArr",
      "offset": [
        23312,
        23330
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12037": {
      "fn": "Registry.sliceArr",
      "offset": [
        23312,
        23330
      ],
      "op": "ADD",
      "path": "15"
    },
    "12038": {
      "fn": "Registry.sliceArr",
      "offset": [
        23312,
        23330
      ],
      "op": "ADD",
      "path": "15"
    },
    "12039": {
      "fn": "Registry.sliceArr",
      "offset": [
        23312,
        23330
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12040": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23297
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12041": {
      "fn": "Registry.sliceArr",
      "offset": [
        23302,
        23308
      ],
      "op": "DUP7",
      "path": "15"
    },
    "12042": {
      "fn": "Registry.sliceArr",
      "offset": [
        23298,
        23299
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12043": {
      "fn": "Registry.sliceArr",
      "offset": [
        23298,
        23308
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F14"
    },
    "12046": {
      "fn": "Registry.sliceArr",
      "offset": [
        23298,
        23308
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12047": {
      "fn": "Registry.sliceArr",
      "offset": [
        23298,
        23308
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12048": {
      "fn": "Registry.sliceArr",
      "offset": [
        23298,
        23308
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A19"
    },
    "12051": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23298,
        23308
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12052": {
      "fn": "Registry.sliceArr",
      "offset": [
        23298,
        23308
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12053": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23309
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12054": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23309
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12055": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23309
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12056": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23309
      ],
      "op": "LT",
      "path": "15"
    },
    "12057": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23309
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F24"
    },
    "12060": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23309
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12061": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23309
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F24"
    },
    "12064": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23309
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "12067": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23296,
        23309
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12068": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23309
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12069": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23309
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12071": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23309
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12072": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23309
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12073": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23309
      ],
      "op": "MUL",
      "path": "15"
    },
    "12074": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23309
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12075": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23309
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12076": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23309
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12077": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23309
      ],
      "op": "ADD",
      "path": "15"
    },
    "12078": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23309
      ],
      "op": "ADD",
      "path": "15"
    },
    "12079": {
      "fn": "Registry.sliceArr",
      "offset": [
        23296,
        23330
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12080": {
      "fn": "Registry.sliceArr",
      "offset": [
        23277,
        23280
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 93
    },
    "12081": {
      "fn": "Registry.sliceArr",
      "offset": [
        23277,
        23280
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F39"
    },
    "12084": {
      "fn": "Registry.sliceArr",
      "offset": [
        23277,
        23280
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12085": {
      "fn": "Registry.sliceArr",
      "offset": [
        23277,
        23280
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A5C"
    },
    "12088": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23277,
        23280
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12089": {
      "fn": "Registry.sliceArr",
      "offset": [
        23277,
        23280
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12090": {
      "fn": "Registry.sliceArr",
      "offset": [
        23277,
        23280
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12091": {
      "fn": "Registry.sliceArr",
      "offset": [
        23277,
        23280
      ],
      "op": "POP",
      "path": "15"
    },
    "12092": {
      "fn": "Registry.sliceArr",
      "offset": [
        23277,
        23280
      ],
      "op": "POP",
      "path": "15"
    },
    "12093": {
      "fn": "Registry.sliceArr",
      "offset": [
        23242,
        23341
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EDC"
    },
    "12096": {
      "fn": "Registry.sliceArr",
      "offset": [
        23242,
        23341
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12097": {
      "fn": "Registry.sliceArr",
      "offset": [
        23242,
        23341
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12098": {
      "fn": "Registry.sliceArr",
      "offset": [
        23242,
        23341
      ],
      "op": "POP",
      "path": "15"
    },
    "12099": {
      "fn": "Registry.sliceArr",
      "offset": [
        23021,
        23347
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "12100": {
      "fn": "Registry.sliceArr",
      "offset": [
        23021,
        23347
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "12101": {
      "fn": "Registry.sliceArr",
      "offset": [
        23021,
        23347
      ],
      "op": "POP",
      "path": "15"
    },
    "12102": {
      "fn": "Registry.sliceArr",
      "offset": [
        23021,
        23347
      ],
      "op": "POP",
      "path": "15"
    },
    "12103": {
      "fn": "Registry.sliceArr",
      "offset": [
        23021,
        23347
      ],
      "op": "POP",
      "path": "15"
    },
    "12104": {
      "fn": "Registry.sliceArr",
      "offset": [
        23021,
        23347
      ],
      "op": "POP",
      "path": "15"
    },
    "12105": {
      "fn": "Registry.sliceArr",
      "jump": "o",
      "offset": [
        23021,
        23347
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12106": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17495,
        18123
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12107": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17713,
        17739
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12109": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17700
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12111": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17700
      ],
      "op": "DUP7",
      "path": "15"
    },
    "12112": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17700
      ],
      "op": "ADD",
      "path": "15"
    },
    "12113": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17700
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12114": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17701,
        17708
      ],
      "op": "DUP7",
      "path": "15"
    },
    "12115": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17701,
        17708
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12116": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17709
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12117": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17709
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12118": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17709
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12119": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17709
      ],
      "op": "LT",
      "path": "15"
    },
    "12120": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17709
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F63"
    },
    "12123": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17709
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12124": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17709
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F63"
    },
    "12127": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17709
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "12130": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        17686,
        17709
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12131": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17709
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12132": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12134": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17709
      ],
      "op": "MUL",
      "path": "15"
    },
    "12135": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12137": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17709
      ],
      "op": "ADD",
      "path": "15"
    },
    "12138": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17709
      ],
      "op": "ADD",
      "path": "15"
    },
    "12139": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17709
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12140": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17739
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "12142": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17739
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12143": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17739
      ],
      "op": "GT",
      "path": "15"
    },
    "12144": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17739
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12145": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17739
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F7C"
    },
    "12148": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17739
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12149": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17739
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F7C"
    },
    "12152": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17739
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "12155": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        17686,
        17739
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12156": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17739
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12157": {
      "branch": 160,
      "fn": "Registry.safeTransfer",
      "offset": [
        17686,
        17739
      ],
      "op": "EQ",
      "path": "15"
    },
    "12158": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17682,
        18117
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12159": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17682,
        18117
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3042"
    },
    "12162": {
      "branch": 160,
      "fn": "Registry.safeTransfer",
      "offset": [
        17682,
        18117
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12163": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17763,
        17776
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 94,
      "value": "0x60"
    },
    "12165": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17763,
        17776
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12166": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17763,
        17776
      ],
      "op": "ADD",
      "path": "15"
    },
    "12167": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17763,
        17776
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12168": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17777,
        17784
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12169": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17777,
        17784
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12170": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17763,
        17785
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12171": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17763,
        17785
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12172": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17763,
        17785
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12173": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17763,
        17785
      ],
      "op": "LT",
      "path": "15"
    },
    "12174": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17763,
        17785
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F99"
    },
    "12177": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17763,
        17785
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12178": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17763,
        17785
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F99"
    },
    "12181": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17763,
        17785
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "12184": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        17763,
        17785
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12185": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17763,
        17785
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12186": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17763,
        17785
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12188": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17763,
        17785
      ],
      "op": "MUL",
      "path": "15"
    },
    "12189": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17763,
        17785
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12191": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17763,
        17785
      ],
      "op": "ADD",
      "path": "15"
    },
    "12192": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17763,
        17785
      ],
      "op": "ADD",
      "path": "15"
    },
    "12193": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17763,
        17785
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12200": {
      "op": "SHL"
    },
    "12201": {
      "op": "SUB"
    },
    "12202": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17799
      ],
      "op": "AND",
      "path": "15"
    },
    "12203": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17799
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x23B872DD"
    },
    "12208": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17817,
        17821
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12209": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17839,
        17841
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12210": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17861
      ],
      "op": "DUP9",
      "path": "15"
    },
    "12211": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17869
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "12213": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17869
      ],
      "op": "ADD",
      "path": "15"
    },
    "12214": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17869
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12215": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17870,
        17872
      ],
      "op": "DUP10",
      "path": "15"
    },
    "12216": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17870,
        17877
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12218": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17870,
        17877
      ],
      "op": "ADD",
      "path": "15"
    },
    "12219": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17870,
        17877
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12220": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17878
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12221": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17878
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12222": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17878
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12223": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17878
      ],
      "op": "LT",
      "path": "15"
    },
    "12224": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17878
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2FCB"
    },
    "12227": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17878
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12228": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17878
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2FCB"
    },
    "12231": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17878
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "12234": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        17859,
        17878
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12235": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17878
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12236": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17878
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12238": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17878
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12239": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17878
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12240": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17878
      ],
      "op": "MUL",
      "path": "15"
    },
    "12241": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17878
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12242": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17878
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12243": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17878
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12244": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17878
      ],
      "op": "ADD",
      "path": "15"
    },
    "12245": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17878
      ],
      "op": "ADD",
      "path": "15"
    },
    "12246": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17859,
        17878
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12247": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12249": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12254": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12256": {
      "op": "SHL"
    },
    "12257": {
      "op": "SUB"
    },
    "12258": {
      "op": "NOT"
    },
    "12259": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "12261": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "DUP7",
      "path": "15"
    },
    "12262": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12263": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "SHL",
      "path": "15"
    },
    "12264": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "AND",
      "path": "15"
    },
    "12265": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12266": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12273": {
      "op": "SHL"
    },
    "12274": {
      "op": "SUB"
    },
    "12275": {
      "op": "SWAP4"
    },
    "12276": {
      "op": "DUP5"
    },
    "12277": {
      "op": "AND"
    },
    "12278": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "12280": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12281": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "ADD",
      "path": "15"
    },
    "12282": {
      "op": "MSTORE"
    },
    "12283": {
      "op": "SWAP3"
    },
    "12284": {
      "op": "SWAP1"
    },
    "12285": {
      "op": "SWAP2"
    },
    "12286": {
      "op": "AND"
    },
    "12287": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12289": {
      "op": "DUP4"
    },
    "12290": {
      "op": "ADD"
    },
    "12291": {
      "op": "MSTORE"
    },
    "12292": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12294": {
      "op": "DUP3"
    },
    "12295": {
      "op": "ADD"
    },
    "12296": {
      "op": "MSTORE"
    },
    "12297": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12299": {
      "op": "ADD"
    },
    "12300": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12302": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12304": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12305": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12306": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12307": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "SUB",
      "path": "15"
    },
    "12308": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12309": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12311": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "DUP8",
      "path": "15"
    },
    "12312": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12313": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "12314": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12315": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12316": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12317": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3025"
    },
    "12320": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12321": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12323": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12324": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "REVERT",
      "path": "15"
    },
    "12325": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12326": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "POP",
      "path": "15"
    },
    "12327": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "GAS",
      "path": "15"
    },
    "12328": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "CALL",
      "path": "15"
    },
    "12329": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12330": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12331": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12332": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3039"
    },
    "12335": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12336": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12337": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12339": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12340": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "12341": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12342": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12344": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "REVERT",
      "path": "15"
    },
    "12345": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12346": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "POP",
      "path": "15"
    },
    "12347": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "POP",
      "path": "15"
    },
    "12348": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "POP",
      "path": "15"
    },
    "12349": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17755,
        17892
      ],
      "op": "POP",
      "path": "15"
    },
    "12350": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17682,
        18117
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x44A"
    },
    "12353": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17682,
        18117
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12354": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17682,
        18117
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12355": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17932,
        17945
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 95,
      "value": "0x60"
    },
    "12357": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17932,
        17945
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12358": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17932,
        17945
      ],
      "op": "ADD",
      "path": "15"
    },
    "12359": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17932,
        17945
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12360": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17946,
        17953
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12361": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17946,
        17953
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12362": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17932,
        17954
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12363": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17932,
        17954
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12364": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17932,
        17954
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12365": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17932,
        17954
      ],
      "op": "LT",
      "path": "15"
    },
    "12366": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17932,
        17954
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3059"
    },
    "12369": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17932,
        17954
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12370": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17932,
        17954
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3059"
    },
    "12373": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17932,
        17954
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "12376": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        17932,
        17954
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12377": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17932,
        17954
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12378": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17932,
        17954
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12380": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17932,
        17954
      ],
      "op": "MUL",
      "path": "15"
    },
    "12381": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17932,
        17954
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12383": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17932,
        17954
      ],
      "op": "ADD",
      "path": "15"
    },
    "12384": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17932,
        17954
      ],
      "op": "ADD",
      "path": "15"
    },
    "12385": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17932,
        17954
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12392": {
      "op": "SHL"
    },
    "12393": {
      "op": "SUB"
    },
    "12394": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        17977
      ],
      "op": "AND",
      "path": "15"
    },
    "12395": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        17977
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x2EB2C2D6"
    },
    "12400": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17995,
        17999
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12401": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18017,
        18019
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12402": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18037,
        18044
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12403": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18062,
        18072
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12404": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12406": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12407": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12408": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "12413": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "AND",
      "path": "15"
    },
    "12414": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "12416": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "SHL",
      "path": "15"
    },
    "12417": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12418": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12419": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "12421": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "ADD",
      "path": "15"
    },
    "12422": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3092"
    },
    "12425": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "12426": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "12427": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "12428": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12429": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12430": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4653"
    },
    "12433": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        17923,
        18106
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12434": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12435": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12437": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12439": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12440": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12441": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12442": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "SUB",
      "path": "15"
    },
    "12443": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12444": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12446": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "DUP8",
      "path": "15"
    },
    "12447": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12448": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "12449": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12450": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12451": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12452": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x30AC"
    },
    "12455": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12456": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12458": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12459": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "REVERT",
      "path": "15"
    },
    "12460": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12461": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "POP",
      "path": "15"
    },
    "12462": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "GAS",
      "path": "15"
    },
    "12463": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "CALL",
      "path": "15"
    },
    "12464": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12465": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12466": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12467": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x30C0"
    },
    "12470": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12471": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12472": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12474": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12475": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "12476": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12477": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12479": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "REVERT",
      "path": "15"
    },
    "12480": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12481": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "POP",
      "path": "15"
    },
    "12482": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "POP",
      "path": "15"
    },
    "12483": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "POP",
      "path": "15"
    },
    "12484": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17923,
        18106
      ],
      "op": "POP",
      "path": "15"
    },
    "12485": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17495,
        18123
      ],
      "op": "POP",
      "path": "15"
    },
    "12486": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17495,
        18123
      ],
      "op": "POP",
      "path": "15"
    },
    "12487": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17495,
        18123
      ],
      "op": "POP",
      "path": "15"
    },
    "12488": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17495,
        18123
      ],
      "op": "POP",
      "path": "15"
    },
    "12489": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17495,
        18123
      ],
      "op": "POP",
      "path": "15"
    },
    "12490": {
      "fn": "Registry.safeTransfer",
      "jump": "o",
      "offset": [
        17495,
        18123
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12491": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        26879,
        27133
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12492": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27030,
        27071
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 96,
      "value": "0x30D5"
    },
    "12495": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27047,
        27054
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12496": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27056,
        27070
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12497": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27030,
        27046
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3790"
    },
    "12500": {
      "fn": "Registry.ensureIsClaimable",
      "jump": "i",
      "offset": [
        27030,
        27071
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12501": {
      "branch": 161,
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27030,
        27071
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12502": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27009,
        27126
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD69"
    },
    "12505": {
      "branch": 161,
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27009,
        27126
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12506": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27009,
        27126
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12508": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27009,
        27126
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12509": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12513": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12515": {
      "op": "SHL"
    },
    "12516": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27009,
        27126
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12517": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27009,
        27126
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12518": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12520": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27009,
        27126
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "12522": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27009,
        27126
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12523": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27009,
        27126
      ],
      "op": "ADD",
      "path": "15"
    },
    "12524": {
      "op": "MSTORE"
    },
    "12525": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "12527": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12529": {
      "op": "DUP3"
    },
    "12530": {
      "op": "ADD"
    },
    "12531": {
      "op": "MSTORE"
    },
    "12532": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72657475726E2064617465206E6F7420706173736564000000"
    },
    "12565": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12567": {
      "op": "DUP3"
    },
    "12568": {
      "op": "ADD"
    },
    "12569": {
      "op": "MSTORE"
    },
    "12570": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12572": {
      "op": "ADD"
    },
    "12573": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27009,
        27126
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "12576": {
      "op": "JUMP"
    },
    "12577": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16676,
        17489
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12578": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16816,
        16836
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12580": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16845,
        16852
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12581": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16845,
        16865
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "12583": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16845,
        16865
      ],
      "op": "ADD",
      "path": "15"
    },
    "12584": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16845,
        16865
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12585": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16839,
        16866
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "12587": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16839,
        16866
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12588": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16839,
        16866
      ],
      "op": "GT",
      "path": "15"
    },
    "12589": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16839,
        16866
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12590": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16839,
        16866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3139"
    },
    "12593": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16839,
        16866
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12594": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16839,
        16866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3139"
    },
    "12597": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16839,
        16866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "12600": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        16839,
        16866
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12601": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16839,
        16866
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12602": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16876,
        16894
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12604": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16911
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12605": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16911
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "12606": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12608": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12609": {
      "op": "PUSH4",
      "value": "0xC6EE427F"
    },
    "12614": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12616": {
      "op": "SHL"
    },
    "12617": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12618": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12619": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12621": {
      "op": "DUP5"
    },
    "12622": {
      "op": "AND"
    },
    "12623": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "12625": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12626": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "ADD",
      "path": "15"
    },
    "12627": {
      "op": "MSTORE"
    },
    "12628": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16816,
        16866
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "12629": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16816,
        16866
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "12630": {
      "op": "POP"
    },
    "12631": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16876,
        16894
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12632": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16876,
        16894
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12639": {
      "op": "SHL"
    },
    "12640": {
      "op": "SUB"
    },
    "12641": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16911
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12642": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16911
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12643": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16911
      ],
      "op": "AND",
      "path": "15"
    },
    "12644": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16911
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12645": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16927
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC6EE427F"
    },
    "12650": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16927
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12651": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12653": {
      "op": "ADD"
    },
    "12654": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12656": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12658": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12659": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12660": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12661": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "SUB",
      "path": "15"
    },
    "12662": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12663": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "DUP7",
      "path": "15"
    },
    "12664": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12665": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "12666": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12667": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12668": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12669": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3185"
    },
    "12672": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12673": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12675": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12676": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "REVERT",
      "path": "15"
    },
    "12677": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12678": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "POP",
      "path": "15"
    },
    "12679": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "GAS",
      "path": "15"
    },
    "12680": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "12681": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12682": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12683": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12684": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3199"
    },
    "12687": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12688": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12689": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12691": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12692": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "12693": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12694": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12696": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "REVERT",
      "path": "15"
    },
    "12697": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12698": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "POP",
      "path": "15"
    },
    "12699": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "POP",
      "path": "15"
    },
    "12700": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "POP",
      "path": "15"
    },
    "12701": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "POP",
      "path": "15"
    },
    "12702": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12704": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12705": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12706": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "12708": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "NOT",
      "path": "15"
    },
    "12709": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "12711": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12712": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "ADD",
      "path": "15"
    },
    "12713": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "AND",
      "path": "15"
    },
    "12714": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12715": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "ADD",
      "path": "15"
    },
    "12716": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12717": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12719": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12720": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "POP",
      "path": "15"
    },
    "12721": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12722": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "ADD",
      "path": "15"
    },
    "12723": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12724": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31BD"
    },
    "12727": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12728": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12729": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3FE6"
    },
    "12732": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        16903,
        16943
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12733": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16903,
        16943
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12734": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16876,
        16944
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12735": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16876,
        16944
      ],
      "op": "POP",
      "path": "15"
    },
    "12736": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16954,
        16970
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12738": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16979,
        16991
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12745": {
      "op": "SHL"
    },
    "12746": {
      "op": "SUB"
    },
    "12747": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17001
      ],
      "op": "AND",
      "path": "15"
    },
    "12748": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17001
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x313CE567"
    },
    "12753": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12755": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12756": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12757": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "12762": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "AND",
      "path": "15"
    },
    "12763": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "12765": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "SHL",
      "path": "15"
    },
    "12766": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12767": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12768": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "12770": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "ADD",
      "path": "15"
    },
    "12771": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12773": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12775": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12776": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12777": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12778": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "SUB",
      "path": "15"
    },
    "12779": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12780": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "DUP7",
      "path": "15"
    },
    "12781": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12782": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "12783": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12784": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12785": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12786": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31FA"
    },
    "12789": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12790": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12792": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12793": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "REVERT",
      "path": "15"
    },
    "12794": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12795": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "POP",
      "path": "15"
    },
    "12796": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "GAS",
      "path": "15"
    },
    "12797": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "12798": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12799": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12800": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12801": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x320E"
    },
    "12804": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12805": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12806": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12808": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12809": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "12810": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12811": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12813": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "REVERT",
      "path": "15"
    },
    "12814": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12815": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "POP",
      "path": "15"
    },
    "12816": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "POP",
      "path": "15"
    },
    "12817": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "POP",
      "path": "15"
    },
    "12818": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "POP",
      "path": "15"
    },
    "12819": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12821": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12822": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12823": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "12825": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "NOT",
      "path": "15"
    },
    "12826": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "12828": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12829": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "ADD",
      "path": "15"
    },
    "12830": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "AND",
      "path": "15"
    },
    "12831": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12832": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "ADD",
      "path": "15"
    },
    "12833": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12834": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12836": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12837": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "POP",
      "path": "15"
    },
    "12838": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12839": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "ADD",
      "path": "15"
    },
    "12840": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12841": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3232"
    },
    "12844": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12845": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12846": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x45B5"
    },
    "12849": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        16973,
        17003
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12850": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16973,
        17003
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12851": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16954,
        17003
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "12853": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16954,
        17003
      ],
      "op": "AND",
      "path": "15"
    },
    "12854": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16954,
        17003
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12855": {
      "op": "POP"
    },
    "12856": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17013,
        17026
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12858": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17029,
        17041
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3244"
    },
    "12861": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16954,
        17003
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12862": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17029,
        17031
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "12864": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17029,
        17041
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x492F"
    },
    "12867": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17029,
        17041
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12868": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17029,
        17041
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12869": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17013,
        17041
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12870": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17013,
        17041
      ],
      "op": "POP",
      "path": "15"
    },
    "12871": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17051,
        17068
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12873": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17104,
        17146
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3256"
    },
    "12876": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17116,
        17123
      ],
      "op": "DUP8",
      "path": "15"
    },
    "12877": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17116,
        17138
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "12879": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17116,
        17138
      ],
      "op": "ADD",
      "path": "15"
    },
    "12880": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17116,
        17138
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12881": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17140,
        17145
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12882": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17104,
        17115
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x364A"
    },
    "12885": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17104,
        17146
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12886": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17104,
        17146
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12887": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17071,
        17078
      ],
      "op": "DUP7",
      "path": "15"
    },
    "12888": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17071,
        17089
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "12890": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17071,
        17089
      ],
      "op": "ADD",
      "path": "15"
    },
    "12891": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17071,
        17089
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12892": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17071,
        17146
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "12895": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17071,
        17146
      ],
      "op": "AND",
      "path": "15"
    },
    "12896": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17071,
        17146
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3269"
    },
    "12899": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17071,
        17146
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12900": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17071,
        17146
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12901": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17071,
        17146
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49D7"
    },
    "12904": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17071,
        17146
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12905": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17071,
        17146
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12906": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17051,
        17146
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12907": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17051,
        17146
      ],
      "op": "POP",
      "path": "15"
    },
    "12908": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17156,
        17172
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12910": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17187,
        17194
      ],
      "op": "DUP7",
      "path": "15"
    },
    "12911": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17187,
        17207
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12913": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17187,
        17207
      ],
      "op": "ADD",
      "path": "15"
    },
    "12914": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17187,
        17207
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12915": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17175,
        17207
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "12917": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17175,
        17207
      ],
      "op": "AND",
      "path": "15"
    },
    "12918": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17175,
        17184
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12919": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17175,
        17207
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3280"
    },
    "12922": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17175,
        17207
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12923": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17175,
        17207
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12924": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17175,
        17207
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49D7"
    },
    "12927": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17175,
        17207
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12928": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17175,
        17207
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12929": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17156,
        17207
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12930": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17156,
        17207
      ],
      "op": "POP",
      "path": "15"
    },
    "12931": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17217,
        17233
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12933": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17251,
        17258
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "12935": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17251,
        17258
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "12936": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17262,
        17263
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12938": {
      "branch": 162,
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17251,
        17263
      ],
      "op": "EQ",
      "path": "15"
    },
    "12939": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17247,
        17404
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32AF"
    },
    "12942": {
      "branch": 162,
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17247,
        17404
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12943": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17290,
        17393
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 97,
      "value": "0x32AC"
    },
    "12946": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17315,
        17323
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12947": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17364,
        17378
      ],
      "op": "DUP9",
      "path": "15"
    },
    "12948": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17341,
        17379
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "12950": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17341,
        17379
      ],
      "op": "AND",
      "path": "15"
    },
    "12951": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17341,
        17379
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "12953": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17341,
        17379
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12954": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17341,
        17379
      ],
      "op": "GT",
      "path": "15"
    },
    "12955": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17341,
        17379
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12956": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17341,
        17379
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32A7"
    },
    "12959": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17341,
        17379
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12960": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17341,
        17379
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32A7"
    },
    "12963": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17341,
        17379
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "12966": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17341,
        17379
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12967": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17341,
        17379
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12968": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17290,
        17297
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x381E"
    },
    "12971": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17290,
        17393
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12972": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17290,
        17393
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12973": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17279,
        17393
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12974": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17279,
        17393
      ],
      "op": "POP",
      "path": "15"
    },
    "12975": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17247,
        17404
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12976": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17439,
        17460
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 98,
      "value": "0x20"
    },
    "12978": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17439,
        17460
      ],
      "op": "DUP10",
      "path": "15"
    },
    "12979": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17439,
        17460
      ],
      "op": "ADD",
      "path": "15"
    },
    "12980": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17439,
        17460
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12981": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17413,
        17482
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x30C0"
    },
    "12984": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17413,
        17482
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12985": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17462,
        17481
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32C2"
    },
    "12988": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17473,
        17481
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12989": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17462,
        17470
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12990": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17462,
        17481
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A19"
    },
    "12993": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17462,
        17481
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12994": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17462,
        17481
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13001": {
      "op": "SHL"
    },
    "13002": {
      "op": "SUB"
    },
    "13003": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17413,
        17438
      ],
      "op": "DUP10",
      "path": "15"
    },
    "13004": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17413,
        17438
      ],
      "op": "AND",
      "path": "15"
    },
    "13005": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17413,
        17438
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "13006": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17413,
        17482
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13007": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17413,
        17438
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x38FB"
    },
    "13010": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17413,
        17482
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13011": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26349,
        26533
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13012": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26495,
        26504
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 99
    },
    "13013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13019": {
      "op": "SHL"
    },
    "13020": {
      "op": "SUB"
    },
    "13021": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26470,
        26504
      ],
      "op": "AND",
      "path": "15"
    },
    "13022": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26470,
        26477
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13023": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26470,
        26491
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13025": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26470,
        26491
      ],
      "op": "ADD",
      "path": "15"
    },
    "13026": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26470,
        26491
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13033": {
      "op": "SHL"
    },
    "13034": {
      "op": "SUB"
    },
    "13035": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26470,
        26504
      ],
      "op": "AND",
      "path": "15"
    },
    "13036": {
      "branch": 163,
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26470,
        26504
      ],
      "op": "EQ",
      "path": "15"
    },
    "13037": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26462,
        26526
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD69"
    },
    "13040": {
      "branch": 163,
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26462,
        26526
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13041": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26462,
        26526
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13043": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26462,
        26526
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13044": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13048": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13050": {
      "op": "SHL"
    },
    "13051": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26462,
        26526
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13052": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26462,
        26526
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13055": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26462,
        26526
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13057": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26462,
        26526
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13058": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26462,
        26526
      ],
      "op": "ADD",
      "path": "15"
    },
    "13059": {
      "op": "MSTORE"
    },
    "13060": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13062": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13064": {
      "op": "DUP3"
    },
    "13065": {
      "op": "ADD"
    },
    "13066": {
      "op": "MSTORE"
    },
    "13067": {
      "op": "PUSH17",
      "value": "0x2932A7232A1D1D3737BA103632B73232B9"
    },
    "13085": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "13087": {
      "op": "SHL"
    },
    "13088": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13090": {
      "op": "DUP3"
    },
    "13091": {
      "op": "ADD"
    },
    "13092": {
      "op": "MSTORE"
    },
    "13093": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13095": {
      "op": "ADD"
    },
    "13096": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26462,
        26526
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13099": {
      "op": "JUMP"
    },
    "13100": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24341,
        24597
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13101": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24427,
        24448
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 100
    },
    "13102": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24427,
        24448
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13103": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24410,
        24449
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3337"
    },
    "13106": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24410,
        24449
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13107": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24410,
        24426
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x392B"
    },
    "13110": {
      "fn": "Registry.ensureIsNull",
      "jump": "i",
      "offset": [
        24410,
        24449
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13111": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24410,
        24449
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13112": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24467,
        24487
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 101,
      "value": "0x20"
    },
    "13114": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24467,
        24487
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13115": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24467,
        24487
      ],
      "op": "ADD",
      "path": "15"
    },
    "13116": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24467,
        24487
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13117": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24467,
        24492
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "13119": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24467,
        24492
      ],
      "op": "AND",
      "path": "15"
    },
    "13120": {
      "branch": 164,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24467,
        24492
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13121": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24459,
        24521
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3387"
    },
    "13124": {
      "branch": 164,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24459,
        24521
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13125": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24459,
        24521
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13127": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24459,
        24521
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13128": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13132": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13134": {
      "op": "SHL"
    },
    "13135": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24459,
        24521
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13136": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24459,
        24521
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13139": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24459,
        24521
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13141": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24459,
        24521
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13142": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24459,
        24521
      ],
      "op": "ADD",
      "path": "15"
    },
    "13143": {
      "op": "MSTORE"
    },
    "13144": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "13146": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13148": {
      "op": "DUP3"
    },
    "13149": {
      "op": "ADD"
    },
    "13150": {
      "op": "MSTORE"
    },
    "13151": {
      "op": "PUSH24",
      "value": "0x52654E46543A3A6475726174696F6E206E6F74207A65726F"
    },
    "13176": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13178": {
      "op": "SHL"
    },
    "13179": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13181": {
      "op": "DUP3"
    },
    "13182": {
      "op": "ADD"
    },
    "13183": {
      "op": "MSTORE"
    },
    "13184": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13186": {
      "op": "ADD"
    },
    "13187": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24459,
        24521
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13190": {
      "op": "JUMP"
    },
    "13191": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24459,
        24521
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13192": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24539,
        24555
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 102,
      "value": "0x40"
    },
    "13194": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24539,
        24555
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13195": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24539,
        24555
      ],
      "op": "ADD",
      "path": "15"
    },
    "13196": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24539,
        24555
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13197": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24539,
        24560
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "13202": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24539,
        24560
      ],
      "op": "AND",
      "path": "15"
    },
    "13203": {
      "branch": 165,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24539,
        24560
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13204": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24531,
        24590
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15C8"
    },
    "13207": {
      "branch": 165,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24531,
        24590
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13208": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24531,
        24590
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13210": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24531,
        24590
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13211": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13215": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13217": {
      "op": "SHL"
    },
    "13218": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24531,
        24590
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13219": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24531,
        24590
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13222": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24531,
        24590
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13224": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24531,
        24590
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13225": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24531,
        24590
      ],
      "op": "ADD",
      "path": "15"
    },
    "13226": {
      "op": "MSTORE"
    },
    "13227": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "13229": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13231": {
      "op": "DUP3"
    },
    "13232": {
      "op": "ADD"
    },
    "13233": {
      "op": "MSTORE"
    },
    "13234": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E746564206174206E6F74207A65726F00000000000000"
    },
    "13267": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13269": {
      "op": "DUP3"
    },
    "13270": {
      "op": "ADD"
    },
    "13271": {
      "op": "MSTORE"
    },
    "13272": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13274": {
      "op": "ADD"
    },
    "13275": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24531,
        24590
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13278": {
      "op": "JUMP"
    },
    "13279": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25327,
        25996
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13280": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25509,
        25516
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 103
    },
    "13281": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25509,
        25530
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13283": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25509,
        25530
      ],
      "op": "ADD",
      "path": "15"
    },
    "13284": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25509,
        25530
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13291": {
      "op": "SHL"
    },
    "13292": {
      "op": "SUB"
    },
    "13293": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25496,
        25530
      ],
      "op": "AND",
      "path": "15"
    },
    "13294": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25496,
        25505
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13301": {
      "op": "SHL"
    },
    "13302": {
      "op": "SUB"
    },
    "13303": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25496,
        25530
      ],
      "op": "AND",
      "path": "15"
    },
    "13304": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25496,
        25530
      ],
      "op": "EQ",
      "path": "15"
    },
    "13305": {
      "branch": 166,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25496,
        25530
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13306": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25488,
        25559
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3445"
    },
    "13309": {
      "branch": 166,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25488,
        25559
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13310": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25488,
        25559
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13312": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25488,
        25559
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13313": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13317": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13319": {
      "op": "SHL"
    },
    "13320": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25488,
        25559
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13321": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25488,
        25559
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13322": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13324": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25488,
        25559
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13326": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25488,
        25559
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13327": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25488,
        25559
      ],
      "op": "ADD",
      "path": "15"
    },
    "13328": {
      "op": "MSTORE"
    },
    "13329": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "13331": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13333": {
      "op": "DUP3"
    },
    "13334": {
      "op": "ADD"
    },
    "13335": {
      "op": "MSTORE"
    },
    "13336": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A63616E742072656E74206F776E206E66740000000000000000"
    },
    "13369": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13371": {
      "op": "DUP3"
    },
    "13372": {
      "op": "ADD"
    },
    "13373": {
      "op": "MSTORE"
    },
    "13374": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13376": {
      "op": "ADD"
    },
    "13377": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25488,
        25559
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13380": {
      "op": "JUMP"
    },
    "13381": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25488,
        25559
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13382": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25599,
        25614
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 104,
      "value": "0xFF"
    },
    "13384": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25614
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13385": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25614
      ],
      "op": "AND",
      "path": "15"
    },
    "13386": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25579
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13387": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25592
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140"
    },
    "13390": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25592
      ],
      "op": "ADD",
      "path": "15"
    },
    "13391": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25592
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13392": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25593,
        25594
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13393": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25595
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13394": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25595
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13395": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25595
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13396": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25595
      ],
      "op": "LT",
      "path": "15"
    },
    "13397": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25595
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3460"
    },
    "13400": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25595
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13401": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25595
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3460"
    },
    "13404": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25595
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "13407": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        25577,
        25595
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13408": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25595
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13409": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25595
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13411": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25595
      ],
      "op": "MUL",
      "path": "15"
    },
    "13412": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25595
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13414": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25595
      ],
      "op": "ADD",
      "path": "15"
    },
    "13415": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25595
      ],
      "op": "ADD",
      "path": "15"
    },
    "13416": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25595
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13417": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25614
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "13419": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25614
      ],
      "op": "AND",
      "path": "15"
    },
    "13420": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25614
      ],
      "op": "GT",
      "path": "15"
    },
    "13421": {
      "branch": 167,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25577,
        25614
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13422": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25569,
        25635
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34AC"
    },
    "13425": {
      "branch": 167,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25569,
        25635
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13426": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25569,
        25635
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13428": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25569,
        25635
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13429": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13433": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13435": {
      "op": "SHL"
    },
    "13436": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25569,
        25635
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13437": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25569,
        25635
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13438": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13440": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25569,
        25635
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13442": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25569,
        25635
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13443": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25569,
        25635
      ],
      "op": "ADD",
      "path": "15"
    },
    "13444": {
      "op": "MSTORE"
    },
    "13445": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "13447": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13449": {
      "op": "DUP3"
    },
    "13450": {
      "op": "ADD"
    },
    "13451": {
      "op": "MSTORE"
    },
    "13452": {
      "op": "PUSH16",
      "value": "0xA4CA9C8CA87474DCDEE840EAD2DCE87"
    },
    "13469": {
      "op": "PUSH1",
      "value": "0x83"
    },
    "13471": {
      "op": "SHL"
    },
    "13472": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13474": {
      "op": "DUP3"
    },
    "13475": {
      "op": "ADD"
    },
    "13476": {
      "op": "MSTORE"
    },
    "13477": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13479": {
      "op": "ADD"
    },
    "13480": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25569,
        25635
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13483": {
      "op": "JUMP"
    },
    "13484": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25569,
        25635
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13485": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25674,
        25675
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 105,
      "value": "0x0"
    },
    "13487": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25655
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13488": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25668
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140"
    },
    "13491": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25668
      ],
      "op": "ADD",
      "path": "15"
    },
    "13492": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25668
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13493": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25669,
        25670
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13494": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25671
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13495": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25671
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13496": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25671
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13497": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25671
      ],
      "op": "LT",
      "path": "15"
    },
    "13498": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25671
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34C5"
    },
    "13501": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25671
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13502": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25671
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34C5"
    },
    "13505": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25671
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "13508": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        25653,
        25671
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13509": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25671
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13510": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25671
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13512": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25671
      ],
      "op": "MUL",
      "path": "15"
    },
    "13513": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25671
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13515": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25671
      ],
      "op": "ADD",
      "path": "15"
    },
    "13516": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25671
      ],
      "op": "ADD",
      "path": "15"
    },
    "13517": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25671
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13518": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25675
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "13520": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25675
      ],
      "op": "AND",
      "path": "15"
    },
    "13521": {
      "branch": 168,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25653,
        25675
      ],
      "op": "GT",
      "path": "15"
    },
    "13522": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25645,
        25703
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34ED"
    },
    "13525": {
      "branch": 168,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25645,
        25703
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13526": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25645,
        25703
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13528": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25645,
        25703
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13529": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13533": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13535": {
      "op": "SHL"
    },
    "13536": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25645,
        25703
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13537": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25645,
        25703
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13538": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25645,
        25703
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13540": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25645,
        25703
      ],
      "op": "ADD",
      "path": "15"
    },
    "13541": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25645,
        25703
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13544": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25645,
        25703
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13545": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25645,
        25703
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x477A"
    },
    "13548": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        25645,
        25703
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13549": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25645,
        25703
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13550": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25741,
        25757
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 106,
      "value": "0xFFFF"
    },
    "13553": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25757
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13554": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25757
      ],
      "op": "AND",
      "path": "15"
    },
    "13555": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25723
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13556": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25734
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x160"
    },
    "13559": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25734
      ],
      "op": "ADD",
      "path": "15"
    },
    "13560": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25734
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13561": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25735,
        25736
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13562": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25737
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13563": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25737
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13564": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25737
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13565": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25737
      ],
      "op": "LT",
      "path": "15"
    },
    "13566": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25737
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3509"
    },
    "13569": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25737
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13570": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25737
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3509"
    },
    "13573": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25737
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "13576": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        25721,
        25737
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13577": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25737
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13578": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25737
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13580": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25737
      ],
      "op": "MUL",
      "path": "15"
    },
    "13581": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25737
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13583": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25737
      ],
      "op": "ADD",
      "path": "15"
    },
    "13584": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25737
      ],
      "op": "ADD",
      "path": "15"
    },
    "13585": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25737
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13586": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25757
      ],
      "op": "GT",
      "path": "15"
    },
    "13587": {
      "branch": 169,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25721,
        25757
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13588": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25713,
        25779
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3553"
    },
    "13591": {
      "branch": 169,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25713,
        25779
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13592": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25713,
        25779
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13594": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25713,
        25779
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13595": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13599": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13601": {
      "op": "SHL"
    },
    "13602": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25713,
        25779
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13603": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25713,
        25779
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13604": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13606": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25713,
        25779
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13608": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25713,
        25779
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13609": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25713,
        25779
      ],
      "op": "ADD",
      "path": "15"
    },
    "13610": {
      "op": "MSTORE"
    },
    "13611": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13613": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13615": {
      "op": "DUP3"
    },
    "13616": {
      "op": "ADD"
    },
    "13617": {
      "op": "MSTORE"
    },
    "13618": {
      "op": "PUSH17",
      "value": "0x2932A7232A1D1D3737BA103AB4B73A189B"
    },
    "13636": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "13638": {
      "op": "SHL"
    },
    "13639": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13641": {
      "op": "DUP3"
    },
    "13642": {
      "op": "ADD"
    },
    "13643": {
      "op": "MSTORE"
    },
    "13644": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13646": {
      "op": "ADD"
    },
    "13647": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25713,
        25779
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13650": {
      "op": "JUMP"
    },
    "13651": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25713,
        25779
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13652": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25816,
        25817
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 107,
      "value": "0x0"
    },
    "13654": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25799
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13655": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25810
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x160"
    },
    "13658": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25810
      ],
      "op": "ADD",
      "path": "15"
    },
    "13659": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25810
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13660": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25811,
        25812
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13661": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25813
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13662": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25813
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13663": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25813
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13664": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25813
      ],
      "op": "LT",
      "path": "15"
    },
    "13665": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25813
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x356C"
    },
    "13668": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25813
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13669": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25813
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x356C"
    },
    "13672": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25813
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "13675": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        25797,
        25813
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13676": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25813
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13677": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25813
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13679": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25813
      ],
      "op": "MUL",
      "path": "15"
    },
    "13680": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25813
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13682": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25813
      ],
      "op": "ADD",
      "path": "15"
    },
    "13683": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25813
      ],
      "op": "ADD",
      "path": "15"
    },
    "13684": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25813
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13685": {
      "branch": 170,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25797,
        25817
      ],
      "op": "GT",
      "path": "15"
    },
    "13686": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25789,
        25847
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x35C1"
    },
    "13689": {
      "branch": 170,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25789,
        25847
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13690": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25789,
        25847
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13692": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25789,
        25847
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13693": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13697": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13699": {
      "op": "SHL"
    },
    "13700": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25789,
        25847
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13701": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25789,
        25847
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13704": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25789,
        25847
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13706": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25789,
        25847
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13707": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25789,
        25847
      ],
      "op": "ADD",
      "path": "15"
    },
    "13708": {
      "op": "MSTORE"
    },
    "13709": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "13711": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13713": {
      "op": "DUP3"
    },
    "13714": {
      "op": "ADD"
    },
    "13715": {
      "op": "MSTORE"
    },
    "13716": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E74416D6F756E74206973207A65726F00000000000000"
    },
    "13749": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13751": {
      "op": "DUP3"
    },
    "13752": {
      "op": "ADD"
    },
    "13753": {
      "op": "MSTORE"
    },
    "13754": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13756": {
      "op": "ADD"
    },
    "13757": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25789,
        25847
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13760": {
      "op": "JUMP"
    },
    "13761": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25789,
        25847
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13762": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25900,
        25907
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 108
    },
    "13763": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25900,
        25923
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13765": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25900,
        25923
      ],
      "op": "ADD",
      "path": "15"
    },
    "13766": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25900,
        25923
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13767": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25923
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "13769": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25923
      ],
      "op": "AND",
      "path": "15"
    },
    "13770": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25880
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13771": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25893
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140"
    },
    "13774": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25893
      ],
      "op": "ADD",
      "path": "15"
    },
    "13775": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25893
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13776": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25894,
        25895
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13777": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25896
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13778": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25896
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13779": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25896
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13780": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25896
      ],
      "op": "LT",
      "path": "15"
    },
    "13781": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25896
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x35E0"
    },
    "13784": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25896
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13785": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25896
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x35E0"
    },
    "13788": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25896
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4AA3"
    },
    "13791": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        25878,
        25896
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13792": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25896
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13793": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25896
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13795": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25896
      ],
      "op": "MUL",
      "path": "15"
    },
    "13796": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25896
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13798": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25896
      ],
      "op": "ADD",
      "path": "15"
    },
    "13799": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25896
      ],
      "op": "ADD",
      "path": "15"
    },
    "13800": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25896
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13801": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25923
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "13803": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25923
      ],
      "op": "AND",
      "path": "15"
    },
    "13804": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25923
      ],
      "op": "GT",
      "path": "15"
    },
    "13805": {
      "branch": 171,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25878,
        25923
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13806": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25857,
        25989
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x708"
    },
    "13809": {
      "branch": 171,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25857,
        25989
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13810": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25857,
        25989
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13812": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25857,
        25989
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13813": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13817": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13819": {
      "op": "SHL"
    },
    "13820": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25857,
        25989
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13821": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25857,
        25989
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13824": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25857,
        25989
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13826": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25857,
        25989
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13827": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25857,
        25989
      ],
      "op": "ADD",
      "path": "15"
    },
    "13828": {
      "op": "MSTORE"
    },
    "13829": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "13831": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13833": {
      "op": "DUP3"
    },
    "13834": {
      "op": "ADD"
    },
    "13835": {
      "op": "MSTORE"
    },
    "13836": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E74206475726174696F6E206578636565647320616C6C"
    },
    "13869": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13871": {
      "op": "DUP3"
    },
    "13872": {
      "op": "ADD"
    },
    "13873": {
      "op": "MSTORE"
    },
    "13874": {
      "op": "PUSH8",
      "value": "0xDEEECAC840DAC2F"
    },
    "13883": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "13885": {
      "op": "SHL"
    },
    "13886": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13888": {
      "op": "DUP3"
    },
    "13889": {
      "op": "ADD"
    },
    "13890": {
      "op": "MSTORE"
    },
    "13891": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13893": {
      "op": "ADD"
    },
    "13894": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25857,
        25989
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13897": {
      "op": "JUMP"
    },
    "13898": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22434,
        23015
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13899": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22530,
        22537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13901": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22553,
        22590
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 109,
      "value": "0x3656"
    },
    "13904": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22577,
        22582
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13905": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22584,
        22589
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13906": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22553,
        22576
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3982"
    },
    "13909": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        22553,
        22590
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13910": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22553,
        22590
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13911": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22615,
        22636
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xF0"
    },
    "13913": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22615,
        22636
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13914": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22615,
        22636
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13915": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22615,
        22636
      ],
      "op": "SHR",
      "path": "15"
    },
    "13916": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22663,
        22690
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "13919": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22663,
        22690
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "13921": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22663,
        22690
      ],
      "op": "DUP6",
      "path": "15"
    },
    "13922": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22663,
        22690
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13923": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22663,
        22690
      ],
      "op": "SHR",
      "path": "15"
    },
    "13924": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22663,
        22690
      ],
      "op": "AND",
      "path": "15"
    },
    "13925": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22600,
        22612
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13927": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22723,
        22736
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3672"
    },
    "13930": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22731,
        22736
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2710"
    },
    "13933": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22723,
        22728
      ],
      "op": "DUP7",
      "path": "15"
    },
    "13934": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22723,
        22736
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48CA"
    },
    "13937": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        22723,
        22736
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13938": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22723,
        22736
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13939": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22700,
        22736
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13940": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22700,
        22736
      ],
      "op": "POP",
      "path": "15"
    },
    "13941": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22758,
        22762
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x270F"
    },
    "13944": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22750,
        22755
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13945": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22750,
        22762
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "13948": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22750,
        22762
      ],
      "op": "AND",
      "path": "15"
    },
    "13949": {
      "branch": 172,
      "fn": "Registry.unpackPrice",
      "offset": [
        22750,
        22762
      ],
      "op": "GT",
      "path": "15"
    },
    "13950": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22746,
        22801
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13951": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22746,
        22801
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3688"
    },
    "13954": {
      "branch": 172,
      "fn": "Registry.unpackPrice",
      "offset": [
        22746,
        22801
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13955": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22786,
        22790
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 110,
      "value": "0x270F"
    },
    "13958": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22778,
        22790
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "13959": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22778,
        22790
      ],
      "op": "POP",
      "path": "15"
    },
    "13960": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22746,
        22801
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13961": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22824,
        22828
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x270F"
    },
    "13964": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22814,
        22821
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13965": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22814,
        22828
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "13968": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22814,
        22828
      ],
      "op": "AND",
      "path": "15"
    },
    "13969": {
      "branch": 173,
      "fn": "Registry.unpackPrice",
      "offset": [
        22814,
        22828
      ],
      "op": "GT",
      "path": "15"
    },
    "13970": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22810,
        22869
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13971": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22810,
        22869
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x369C"
    },
    "13974": {
      "branch": 173,
      "fn": "Registry.unpackPrice",
      "offset": [
        22810,
        22869
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13975": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22854,
        22858
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 111,
      "value": "0x270F"
    },
    "13978": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22844,
        22858
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "13979": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22844,
        22858
      ],
      "op": "POP",
      "path": "15"
    },
    "13980": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22810,
        22869
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13981": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22878,
        22887
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13983": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22890,
        22903
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x36AC"
    },
    "13986": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22898,
        22903
      ],
      "op": "DUP7",
      "path": "15"
    },
    "13987": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22890,
        22903
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "13990": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22890,
        22903
      ],
      "op": "DUP7",
      "path": "15"
    },
    "13991": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22890,
        22903
      ],
      "op": "AND",
      "path": "15"
    },
    "13992": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22890,
        22903
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49D7"
    },
    "13995": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        22890,
        22903
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13996": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22890,
        22903
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13997": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22878,
        22903
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13998": {
      "op": "POP"
    },
    "13999": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22913,
        22922
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14001": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22925,
        22947
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x36BE"
    },
    "14004": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22935,
        22947
      ],
      "op": "DUP4",
      "path": "15"
    },
    "14005": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22925,
        22947
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "14008": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22925,
        22947
      ],
      "op": "DUP7",
      "path": "15"
    },
    "14009": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22925,
        22947
      ],
      "op": "AND",
      "path": "15"
    },
    "14010": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22925,
        22947
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49D7"
    },
    "14013": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        22925,
        22947
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14014": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22925,
        22947
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14015": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22913,
        22947
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14016": {
      "op": "POP"
    },
    "14017": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22957,
        22974
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14019": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22977,
        22982
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x36CC"
    },
    "14022": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22913,
        22947
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14023": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22977,
        22978
      ],
      "op": "DUP5",
      "path": "15"
    },
    "14024": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22977,
        22982
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48B2"
    },
    "14027": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        22977,
        22982
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14028": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22977,
        22982
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14029": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22957,
        22982
      ],
      "op": "SWAP10",
      "path": "15"
    },
    "14030": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22434,
        23015
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "14031": {
      "op": "POP"
    },
    "14032": {
      "op": "POP"
    },
    "14033": {
      "op": "POP"
    },
    "14034": {
      "op": "POP"
    },
    "14035": {
      "op": "POP"
    },
    "14036": {
      "op": "POP"
    },
    "14037": {
      "op": "POP"
    },
    "14038": {
      "op": "POP"
    },
    "14039": {
      "op": "POP"
    },
    "14040": {
      "fn": "Registry.unpackPrice",
      "jump": "o",
      "offset": [
        22434,
        23015
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14041": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "14042": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 112,
      "value": "0x40"
    },
    "14044": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "14045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14051": {
      "op": "SHL"
    },
    "14052": {
      "op": "SUB"
    },
    "14053": {
      "op": "DUP1"
    },
    "14054": {
      "op": "DUP6"
    },
    "14055": {
      "op": "AND"
    },
    "14056": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "14058": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP4",
      "path": "7"
    },
    "14059": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "7"
    },
    "14060": {
      "op": "MSTORE"
    },
    "14061": {
      "op": "DUP4"
    },
    "14062": {
      "op": "AND"
    },
    "14063": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14065": {
      "op": "DUP3"
    },
    "14066": {
      "op": "ADD"
    },
    "14067": {
      "op": "MSTORE"
    },
    "14068": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14070": {
      "op": "DUP2"
    },
    "14071": {
      "op": "ADD"
    },
    "14072": {
      "op": "DUP3"
    },
    "14073": {
      "op": "SWAP1"
    },
    "14074": {
      "op": "MSTORE"
    },
    "14075": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x708"
    },
    "14078": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14079": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1003,
        1008
      ],
      "op": "DUP6",
      "path": "7"
    },
    "14080": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1003,
        1008
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14081": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "14086": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14088": {
      "op": "SHL"
    },
    "14089": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1033,
        1060
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14090": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14092": {
      "op": "ADD"
    },
    "14093": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "14094": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "14096": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP1",
      "path": "7"
    },
    "14097": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "14098": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14100": {
      "op": "NOT"
    },
    "14101": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14102": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP5",
      "path": "7"
    },
    "14103": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SUB",
      "path": "7"
    },
    "14104": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "7"
    },
    "14105": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14106": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14107": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "14108": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14109": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14110": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "14112": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14113": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "7"
    },
    "14114": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP1",
      "path": "7"
    },
    "14115": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "14116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14120": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14122": {
      "op": "SHL"
    },
    "14123": {
      "op": "SUB"
    },
    "14124": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "AND",
      "path": "7"
    },
    "14125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14129": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14131": {
      "op": "SHL"
    },
    "14132": {
      "op": "SUB"
    },
    "14133": {
      "op": "NOT"
    },
    "14134": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14135": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "14136": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "AND",
      "path": "7"
    },
    "14137": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "14138": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14139": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "14140": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "OR",
      "path": "7"
    },
    "14141": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14142": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "14143": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14144": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1002
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3A13"
    },
    "14147": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        983,
        1079
      ],
      "op": "JUMP",
      "path": "7"
    },
    "14148": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23535,
        23658
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14153": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14155": {
      "op": "SHL"
    },
    "14156": {
      "op": "SUB"
    },
    "14157": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23609,
        23627
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 113
    },
    "14158": {
      "branch": 174,
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23609,
        23627
      ],
      "op": "AND",
      "path": "15"
    },
    "14159": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23601,
        23651
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15C8"
    },
    "14162": {
      "branch": 174,
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23601,
        23651
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14163": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23601,
        23651
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14165": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23601,
        23651
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14166": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14170": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14172": {
      "op": "SHL"
    },
    "14173": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23601,
        23651
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14174": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23601,
        23651
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "14175": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14177": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23601,
        23651
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "14179": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23601,
        23651
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14180": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23601,
        23651
      ],
      "op": "ADD",
      "path": "15"
    },
    "14181": {
      "op": "MSTORE"
    },
    "14182": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "14184": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14186": {
      "op": "DUP3"
    },
    "14187": {
      "op": "ADD"
    },
    "14188": {
      "op": "MSTORE"
    },
    "14189": {
      "op": "PUSH19",
      "value": "0x52654E46543A3A7A65726F2061646472657373"
    },
    "14209": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "14211": {
      "op": "SHL"
    },
    "14212": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14214": {
      "op": "DUP3"
    },
    "14215": {
      "op": "ADD"
    },
    "14216": {
      "op": "MSTORE"
    },
    "14217": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14219": {
      "op": "ADD"
    },
    "14220": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23601,
        23651
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "14223": {
      "op": "JUMP"
    },
    "14224": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27139,
        27437
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14225": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27252,
        27256
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14227": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27290,
        27297
      ],
      "op": "DUP3",
      "path": "15",
      "statement": 114
    },
    "14228": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27290,
        27306
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14230": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27290,
        27306
      ],
      "op": "ADD",
      "path": "15"
    },
    "14231": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27290,
        27306
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14232": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27280,
        27306
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "14237": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27280,
        27306
      ],
      "op": "AND",
      "path": "15"
    },
    "14238": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27280,
        27287
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14239": {
      "branch": 175,
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27280,
        27306
      ],
      "op": "GT",
      "path": "15"
    },
    "14240": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27272,
        27335
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x37EB"
    },
    "14243": {
      "branch": 175,
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27272,
        27335
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14244": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27272,
        27335
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14246": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27272,
        27335
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14247": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14251": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14253": {
      "op": "SHL"
    },
    "14254": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27272,
        27335
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14255": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27272,
        27335
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "14256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14258": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27272,
        27335
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "14260": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27272,
        27335
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14261": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27272,
        27335
      ],
      "op": "ADD",
      "path": "15"
    },
    "14262": {
      "op": "MSTORE"
    },
    "14263": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "14265": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14267": {
      "op": "DUP3"
    },
    "14268": {
      "op": "ADD"
    },
    "14269": {
      "op": "MSTORE"
    },
    "14270": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6E6F77206265666F72652072656E7465640000000000000000"
    },
    "14303": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14305": {
      "op": "DUP3"
    },
    "14306": {
      "op": "ADD"
    },
    "14307": {
      "op": "MSTORE"
    },
    "14308": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14310": {
      "op": "ADD"
    },
    "14311": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27272,
        27335
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "14314": {
      "op": "JUMP"
    },
    "14315": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27272,
        27335
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14316": {
      "offset": [
        2504,
        2509
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x15180"
    },
    "14320": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27393,
        27400
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 115
    },
    "14321": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27393,
        27413
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "14323": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27393,
        27413
      ],
      "op": "ADD",
      "path": "15"
    },
    "14324": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27393,
        27413
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14325": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27393,
        27430
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "14327": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27393,
        27430
      ],
      "op": "AND",
      "path": "15"
    },
    "14328": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27393,
        27430
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3801"
    },
    "14331": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27393,
        27430
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "14332": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27393,
        27430
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14333": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27393,
        27430
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49D7"
    },
    "14336": {
      "fn": "Registry.isPastReturnDate",
      "jump": "i",
      "offset": [
        27393,
        27430
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14337": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27393,
        27430
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14338": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27374,
        27390
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14340": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27374,
        27390
      ],
      "op": "DUP5",
      "path": "15"
    },
    "14341": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27374,
        27390
      ],
      "op": "ADD",
      "path": "15"
    },
    "14342": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27374,
        27390
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14343": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27364,
        27390
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3816"
    },
    "14346": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27364,
        27390
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14347": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27364,
        27390
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "14352": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27364,
        27390
      ],
      "op": "AND",
      "path": "15"
    },
    "14353": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27364,
        27371
      ],
      "op": "DUP5",
      "path": "15"
    },
    "14354": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27364,
        27390
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A19"
    },
    "14357": {
      "fn": "Registry.isPastReturnDate",
      "jump": "i",
      "offset": [
        27364,
        27390
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14358": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27364,
        27390
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14359": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27364,
        27430
      ],
      "op": "GT",
      "path": "15"
    },
    "14360": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27364,
        27430
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "14361": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27139,
        27437
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "14362": {
      "op": "POP"
    },
    "14363": {
      "op": "POP"
    },
    "14364": {
      "op": "POP"
    },
    "14365": {
      "fn": "Registry.isPastReturnDate",
      "jump": "o",
      "offset": [
        27139,
        27437
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14366": {
      "fn": "Registry.takeFee",
      "offset": [
        15080,
        15438
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14367": {
      "fn": "Registry.takeFee",
      "offset": [
        15184,
        15195
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14369": {
      "fn": "Registry.takeFee",
      "offset": [
        15227,
        15234
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 116,
      "value": "0x6"
    },
    "14371": {
      "fn": "Registry.takeFee",
      "offset": [
        15227,
        15234
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "14372": {
      "fn": "Registry.takeFee",
      "offset": [
        15217,
        15224
      ],
      "op": "DUP4",
      "path": "15"
    },
    "14373": {
      "fn": "Registry.takeFee",
      "offset": [
        15217,
        15234
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x382E"
    },
    "14376": {
      "fn": "Registry.takeFee",
      "offset": [
        15217,
        15234
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "14377": {
      "fn": "Registry.takeFee",
      "offset": [
        15217,
        15234
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14378": {
      "fn": "Registry.takeFee",
      "offset": [
        15217,
        15234
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x49D7"
    },
    "14381": {
      "fn": "Registry.takeFee",
      "jump": "i",
      "offset": [
        15217,
        15234
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14382": {
      "fn": "Registry.takeFee",
      "offset": [
        15217,
        15234
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14383": {
      "fn": "Registry.takeFee",
      "offset": [
        15211,
        15234
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14384": {
      "op": "POP"
    },
    "14385": {
      "fn": "Registry.takeFee",
      "offset": [
        15244,
        15256
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 117,
      "value": "0x383C"
    },
    "14388": {
      "fn": "Registry.takeFee",
      "offset": [
        15251,
        15256
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2710"
    },
    "14391": {
      "fn": "Registry.takeFee",
      "offset": [
        15211,
        15234
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14392": {
      "fn": "Registry.takeFee",
      "offset": [
        15244,
        15256
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48CA"
    },
    "14395": {
      "fn": "Registry.takeFee",
      "jump": "i",
      "offset": [
        15244,
        15256
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14396": {
      "fn": "Registry.takeFee",
      "offset": [
        15244,
        15256
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14397": {
      "fn": "Registry.takeFee",
      "offset": [
        15244,
        15256
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14398": {
      "fn": "Registry.takeFee",
      "offset": [
        15244,
        15256
      ],
      "op": "POP",
      "path": "15"
    },
    "14399": {
      "fn": "Registry.takeFee",
      "offset": [
        15266,
        15286
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14401": {
      "fn": "Registry.takeFee",
      "offset": [
        15295,
        15307
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14402": {
      "fn": "Registry.takeFee",
      "offset": [
        15289,
        15308
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "14404": {
      "fn": "Registry.takeFee",
      "offset": [
        15289,
        15308
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14405": {
      "fn": "Registry.takeFee",
      "offset": [
        15289,
        15308
      ],
      "op": "GT",
      "path": "15"
    },
    "14406": {
      "fn": "Registry.takeFee",
      "offset": [
        15289,
        15308
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "14407": {
      "fn": "Registry.takeFee",
      "offset": [
        15289,
        15308
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3852"
    },
    "14410": {
      "fn": "Registry.takeFee",
      "offset": [
        15289,
        15308
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14411": {
      "fn": "Registry.takeFee",
      "offset": [
        15289,
        15308
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3852"
    },
    "14414": {
      "fn": "Registry.takeFee",
      "offset": [
        15289,
        15308
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8D"
    },
    "14417": {
      "fn": "Registry.takeFee",
      "jump": "i",
      "offset": [
        15289,
        15308
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14418": {
      "fn": "Registry.takeFee",
      "offset": [
        15289,
        15308
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14419": {
      "fn": "Registry.takeFee",
      "offset": [
        15318,
        15332
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14421": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15349
      ],
      "op": "DUP1",
      "path": "15"
    },
    "14422": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15349
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "14423": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14425": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14426": {
      "op": "PUSH4",
      "value": "0xC6EE427F"
    },
    "14431": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14433": {
      "op": "SHL"
    },
    "14434": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14435": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "14436": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14438": {
      "op": "DUP5"
    },
    "14439": {
      "op": "AND"
    },
    "14440": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "14442": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14443": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "ADD",
      "path": "15"
    },
    "14444": {
      "op": "MSTORE"
    },
    "14445": {
      "fn": "Registry.takeFee",
      "offset": [
        15266,
        15308
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "14446": {
      "fn": "Registry.takeFee",
      "offset": [
        15266,
        15308
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "14447": {
      "op": "POP"
    },
    "14448": {
      "fn": "Registry.takeFee",
      "offset": [
        15318,
        15332
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14449": {
      "fn": "Registry.takeFee",
      "offset": [
        15318,
        15332
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "14450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14456": {
      "op": "SHL"
    },
    "14457": {
      "op": "SUB"
    },
    "14458": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15349
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14459": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15349
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "14460": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15349
      ],
      "op": "AND",
      "path": "15"
    },
    "14461": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15349
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14462": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15365
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC6EE427F"
    },
    "14467": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15365
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14468": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14470": {
      "op": "ADD"
    },
    "14471": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "14473": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14475": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14476": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "DUP1",
      "path": "15"
    },
    "14477": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "DUP4",
      "path": "15"
    },
    "14478": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "SUB",
      "path": "15"
    },
    "14479": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14480": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "DUP7",
      "path": "15"
    },
    "14481": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "DUP1",
      "path": "15"
    },
    "14482": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "14483": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "14484": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "DUP1",
      "path": "15"
    },
    "14485": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "14486": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x389E"
    },
    "14489": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14490": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14492": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "DUP1",
      "path": "15"
    },
    "14493": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "REVERT",
      "path": "15"
    },
    "14494": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14495": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "POP",
      "path": "15"
    },
    "14496": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "GAS",
      "path": "15"
    },
    "14497": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "14498": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "14499": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "DUP1",
      "path": "15"
    },
    "14500": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "14501": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x38B2"
    },
    "14504": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14505": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "14506": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14508": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "DUP1",
      "path": "15"
    },
    "14509": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "14510": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "14511": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14513": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "REVERT",
      "path": "15"
    },
    "14514": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14515": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "POP",
      "path": "15"
    },
    "14516": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "POP",
      "path": "15"
    },
    "14517": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "POP",
      "path": "15"
    },
    "14518": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "POP",
      "path": "15"
    },
    "14519": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14521": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14522": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "14523": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "14525": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "NOT",
      "path": "15"
    },
    "14526": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "14528": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14529": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "ADD",
      "path": "15"
    },
    "14530": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "AND",
      "path": "15"
    },
    "14531": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14532": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "ADD",
      "path": "15"
    },
    "14533": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "DUP1",
      "path": "15"
    },
    "14534": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14536": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "14537": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "POP",
      "path": "15"
    },
    "14538": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14539": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "ADD",
      "path": "15"
    },
    "14540": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14541": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x38D6"
    },
    "14544": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "14545": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14546": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3FE6"
    },
    "14549": {
      "fn": "Registry.takeFee",
      "jump": "i",
      "offset": [
        15341,
        15381
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14550": {
      "fn": "Registry.takeFee",
      "offset": [
        15341,
        15381
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14551": {
      "fn": "Registry.takeFee",
      "offset": [
        15414,
        15425
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 118,
      "value": "0x2"
    },
    "14553": {
      "fn": "Registry.takeFee",
      "offset": [
        15414,
        15425
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "14554": {
      "fn": "Registry.takeFee",
      "offset": [
        15318,
        15382
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14555": {
      "fn": "Registry.takeFee",
      "offset": [
        15318,
        15382
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "14556": {
      "op": "POP"
    },
    "14557": {
      "fn": "Registry.takeFee",
      "offset": [
        15392,
        15431
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x38F3"
    },
    "14560": {
      "fn": "Registry.takeFee",
      "offset": [
        15392,
        15431
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14567": {
      "op": "SHL"
    },
    "14568": {
      "op": "SUB"
    },
    "14569": {
      "fn": "Registry.takeFee",
      "offset": [
        15392,
        15413
      ],
      "op": "DUP1",
      "path": "15"
    },
    "14570": {
      "fn": "Registry.takeFee",
      "offset": [
        15392,
        15413
      ],
      "op": "DUP5",
      "path": "15"
    },
    "14571": {
      "fn": "Registry.takeFee",
      "offset": [
        15392,
        15413
      ],
      "op": "AND",
      "path": "15"
    },
    "14572": {
      "fn": "Registry.takeFee",
      "offset": [
        15392,
        15413
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "14573": {
      "fn": "Registry.takeFee",
      "offset": [
        15414,
        15425
      ],
      "op": "AND",
      "path": "15"
    },
    "14574": {
      "fn": "Registry.takeFee",
      "offset": [
        15427,
        15430
      ],
      "op": "DUP6",
      "path": "15"
    },
    "14575": {
      "fn": "Registry.takeFee",
      "offset": [
        15392,
        15413
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x38FB"
    },
    "14578": {
      "fn": "Registry.takeFee",
      "jump": "i",
      "offset": [
        15392,
        15431
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14579": {
      "fn": "Registry.takeFee",
      "offset": [
        15392,
        15431
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14580": {
      "fn": "Registry.takeFee",
      "offset": [
        15201,
        15438
      ],
      "op": "POP",
      "path": "15"
    },
    "14581": {
      "fn": "Registry.takeFee",
      "offset": [
        15201,
        15438
      ],
      "op": "POP",
      "path": "15"
    },
    "14582": {
      "fn": "Registry.takeFee",
      "offset": [
        15080,
        15438
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "14583": {
      "fn": "Registry.takeFee",
      "offset": [
        15080,
        15438
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "14584": {
      "fn": "Registry.takeFee",
      "offset": [
        15080,
        15438
      ],
      "op": "POP",
      "path": "15"
    },
    "14585": {
      "fn": "Registry.takeFee",
      "offset": [
        15080,
        15438
      ],
      "op": "POP",
      "path": "15"
    },
    "14586": {
      "fn": "Registry.takeFee",
      "jump": "o",
      "offset": [
        15080,
        15438
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14587": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "14588": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 119,
      "value": "0x40"
    },
    "14590": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "14591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14597": {
      "op": "SHL"
    },
    "14598": {
      "op": "SUB"
    },
    "14599": {
      "op": "DUP4"
    },
    "14600": {
      "op": "AND"
    },
    "14601": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "14603": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "7"
    },
    "14604": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "7"
    },
    "14605": {
      "op": "MSTORE"
    },
    "14606": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14608": {
      "op": "DUP2"
    },
    "14609": {
      "op": "ADD"
    },
    "14610": {
      "op": "DUP3"
    },
    "14611": {
      "op": "SWAP1"
    },
    "14612": {
      "op": "MSTORE"
    },
    "14613": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2917"
    },
    "14616": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14617": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "DUP5",
      "path": "7"
    },
    "14618": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14619": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "14624": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14626": {
      "op": "SHL"
    },
    "14627": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        796,
        819
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14628": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14630": {
      "op": "ADD"
    },
    "14631": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x370D"
    },
    "14634": {
      "op": "JUMP"
    },
    "14635": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23664,
        23790
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14642": {
      "op": "SHL"
    },
    "14643": {
      "op": "SUB"
    },
    "14644": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23735,
        23753
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 120
    },
    "14645": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23735,
        23753
      ],
      "op": "AND",
      "path": "15"
    },
    "14646": {
      "branch": 176,
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23735,
        23753
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "14647": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23727,
        23783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15C8"
    },
    "14650": {
      "branch": 176,
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23727,
        23783
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14651": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23727,
        23783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14653": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23727,
        23783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14654": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14658": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14660": {
      "op": "SHL"
    },
    "14661": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23727,
        23783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14662": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23727,
        23783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "14663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14665": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23727,
        23783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "14667": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23727,
        23783
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14668": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23727,
        23783
      ],
      "op": "ADD",
      "path": "15"
    },
    "14669": {
      "op": "MSTORE"
    },
    "14670": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "14672": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14674": {
      "op": "DUP3"
    },
    "14675": {
      "op": "ADD"
    },
    "14676": {
      "op": "MSTORE"
    },
    "14677": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6E6F742061207A65726F206164647265737300000000000000"
    },
    "14710": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14712": {
      "op": "DUP3"
    },
    "14713": {
      "op": "ADD"
    },
    "14714": {
      "op": "MSTORE"
    },
    "14715": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14717": {
      "op": "ADD"
    },
    "14718": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23727,
        23783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "14721": {
      "op": "JUMP"
    },
    "14722": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26539,
        26738
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14723": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26632,
        26645
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 121,
      "value": "0xE0"
    },
    "14725": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26632,
        26645
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14726": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26632,
        26645
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14727": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26632,
        26645
      ],
      "op": "SHR",
      "path": "15"
    },
    "14728": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26624,
        26674
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x39CA"
    },
    "14731": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26624,
        26674
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14732": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26624,
        26674
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14734": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26624,
        26674
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14735": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14739": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14741": {
      "op": "SHL"
    },
    "14742": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26624,
        26674
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14743": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26624,
        26674
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "14744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14746": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26624,
        26674
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "14748": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26624,
        26674
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14749": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26624,
        26674
      ],
      "op": "ADD",
      "path": "15"
    },
    "14750": {
      "op": "MSTORE"
    },
    "14751": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "14753": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14755": {
      "op": "DUP3"
    },
    "14756": {
      "op": "ADD"
    },
    "14757": {
      "op": "MSTORE"
    },
    "14758": {
      "op": "PUSH20",
      "value": "0x52654E46543A3A696E76616C6964207072696365"
    },
    "14779": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14781": {
      "op": "SHL"
    },
    "14782": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14784": {
      "op": "DUP3"
    },
    "14785": {
      "op": "ADD"
    },
    "14786": {
      "op": "MSTORE"
    },
    "14787": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14789": {
      "op": "ADD"
    },
    "14790": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26624,
        26674
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "14793": {
      "op": "JUMP"
    },
    "14794": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26624,
        26674
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14795": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26701,
        26706
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 122,
      "value": "0x2710"
    },
    "14798": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26692,
        26697
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14799": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26692,
        26706
      ],
      "op": "LT",
      "path": "15"
    },
    "14800": {
      "branch": 177,
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26692,
        26706
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "14801": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26684,
        26731
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD69"
    },
    "14804": {
      "branch": 177,
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26684,
        26731
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14805": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26684,
        26731
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14807": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26684,
        26731
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14808": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14812": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14814": {
      "op": "SHL"
    },
    "14815": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26684,
        26731
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14816": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26684,
        26731
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "14817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14819": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26684,
        26731
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "14821": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26684,
        26731
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14822": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26684,
        26731
      ],
      "op": "ADD",
      "path": "15"
    },
    "14823": {
      "op": "MSTORE"
    },
    "14824": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "14826": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14828": {
      "op": "DUP3"
    },
    "14829": {
      "op": "ADD"
    },
    "14830": {
      "op": "MSTORE"
    },
    "14831": {
      "op": "PUSH20",
      "value": "0x52654E46543A3A696E76616C6964207363616C65"
    },
    "14852": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14854": {
      "op": "SHL"
    },
    "14855": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14857": {
      "op": "DUP3"
    },
    "14858": {
      "op": "ADD"
    },
    "14859": {
      "op": "MSTORE"
    },
    "14860": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14862": {
      "op": "ADD"
    },
    "14863": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26684,
        26731
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "14866": {
      "op": "JUMP"
    },
    "14867": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3140,
        3846
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "14868": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14870": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3A68"
    },
    "14873": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3613,
        3617
      ],
      "op": "DUP3",
      "path": "7"
    },
    "14874": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "14876": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "14877": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "7"
    },
    "14878": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "14880": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "7"
    },
    "14881": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "14883": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14884": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "7"
    },
    "14885": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "14887": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14888": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14889": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "14891": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "7"
    },
    "14892": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "14925": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14926": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14927": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "POP",
      "path": "7"
    },
    "14928": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3593,
        3598
      ],
      "op": "DUP6",
      "path": "7"
    },
    "14929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14935": {
      "op": "SHL"
    },
    "14936": {
      "op": "SUB"
    },
    "14937": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "AND",
      "path": "7"
    },
    "14938": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3AE5"
    },
    "14941": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14942": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "14943": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "14944": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14945": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "14950": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "AND",
      "path": "7"
    },
    "14951": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMP",
      "path": "7"
    },
    "14952": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "14953": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "DUP1",
      "path": "7"
    },
    "14954": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "14955": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14956": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "14957": {
      "op": "POP"
    },
    "14958": {
      "branch": 181,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3689
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "14959": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2917"
    },
    "14962": {
      "branch": 181,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "14963": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3763,
        3773
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 123
    },
    "14964": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP1",
      "path": "7"
    },
    "14965": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "14967": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "7"
    },
    "14968": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14969": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "14970": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14971": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "7"
    },
    "14972": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14973": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3A86"
    },
    "14976": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "14977": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14978": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4564"
    },
    "14981": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMP",
      "path": "7"
    },
    "14982": {
      "branch": 182,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "14983": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2917"
    },
    "14986": {
      "branch": 182,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "14987": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "14989": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "14990": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14994": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14996": {
      "op": "SHL"
    },
    "14997": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14998": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14999": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15001": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "15003": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP3",
      "path": "7"
    },
    "15004": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "ADD",
      "path": "7"
    },
    "15005": {
      "op": "MSTORE"
    },
    "15006": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "15008": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15010": {
      "op": "DUP3"
    },
    "15011": {
      "op": "ADD"
    },
    "15012": {
      "op": "MSTORE"
    },
    "15013": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "15046": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15048": {
      "op": "DUP3"
    },
    "15049": {
      "op": "ADD"
    },
    "15050": {
      "op": "MSTORE"
    },
    "15051": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "15062": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "15064": {
      "op": "SHL"
    },
    "15065": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15067": {
      "op": "DUP3"
    },
    "15068": {
      "op": "ADD"
    },
    "15069": {
      "op": "MSTORE"
    },
    "15070": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "15072": {
      "op": "ADD"
    },
    "15073": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x429"
    },
    "15076": {
      "op": "JUMP"
    },
    "15077": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15078": {
      "fn": "Address.functionCall",
      "offset": [
        3594,
        3606
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "15080": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 124,
      "value": "0x3AF4"
    },
    "15083": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3653
      ],
      "op": "DUP5",
      "path": "11"
    },
    "15084": {
      "fn": "Address.functionCall",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP5",
      "path": "11"
    },
    "15085": {
      "fn": "Address.functionCall",
      "offset": [
        3661,
        3662
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "15087": {
      "fn": "Address.functionCall",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP6",
      "path": "11"
    },
    "15088": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3646
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3AFE"
    },
    "15091": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMP",
      "path": "11"
    },
    "15092": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15093": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "15094": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "POP",
      "path": "11"
    },
    "15095": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15096": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "15097": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "15098": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "11"
    },
    "15099": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "11"
    },
    "15100": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "11"
    },
    "15101": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMP",
      "path": "11"
    },
    "15102": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15103": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4713,
        4725
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "15105": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4770,
        4775
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 125
    },
    "15106": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4766
      ],
      "op": "SELFBALANCE",
      "path": "11"
    },
    "15107": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "LT",
      "path": "11"
    },
    "15108": {
      "branch": 178,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "15109": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3B5F"
    },
    "15112": {
      "branch": 178,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "15113": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "15115": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "15116": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15120": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15122": {
      "op": "SHL"
    },
    "15123": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP2",
      "path": "11"
    },
    "15124": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "15125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15127": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "15129": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP3",
      "path": "11"
    },
    "15130": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "ADD",
      "path": "11"
    },
    "15131": {
      "op": "MSTORE"
    },
    "15132": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "15134": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15136": {
      "op": "DUP3"
    },
    "15137": {
      "op": "ADD"
    },
    "15138": {
      "op": "MSTORE"
    },
    "15139": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "15172": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15174": {
      "op": "DUP3"
    },
    "15175": {
      "op": "ADD"
    },
    "15176": {
      "op": "MSTORE"
    },
    "15177": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "15184": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "15186": {
      "op": "SHL"
    },
    "15187": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15189": {
      "op": "DUP3"
    },
    "15190": {
      "op": "ADD"
    },
    "15191": {
      "op": "MSTORE"
    },
    "15192": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "15194": {
      "op": "ADD"
    },
    "15195": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x429"
    },
    "15198": {
      "op": "JUMP"
    },
    "15199": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15200": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "DUP5",
      "path": "11"
    },
    "15201": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "15202": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 126,
      "value": "0x3BAD"
    },
    "15205": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "15206": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "15208": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "15209": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15213": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15215": {
      "op": "SHL"
    },
    "15216": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP2",
      "path": "11"
    },
    "15217": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "15218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15220": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "15222": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP3",
      "path": "11"
    },
    "15223": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "ADD",
      "path": "11"
    },
    "15224": {
      "op": "MSTORE"
    },
    "15225": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "15227": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15229": {
      "op": "DUP3"
    },
    "15230": {
      "op": "ADD"
    },
    "15231": {
      "op": "MSTORE"
    },
    "15232": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "15265": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15267": {
      "op": "DUP3"
    },
    "15268": {
      "op": "ADD"
    },
    "15269": {
      "op": "MSTORE"
    },
    "15270": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15272": {
      "op": "ADD"
    },
    "15273": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x429"
    },
    "15276": {
      "op": "JUMP"
    },
    "15277": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15278": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4900,
        4912
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "15280": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4914,
        4937
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15281": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4947
      ],
      "op": "DUP7",
      "path": "11"
    },
    "15282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15288": {
      "op": "SHL"
    },
    "15289": {
      "op": "SUB"
    },
    "15290": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4952
      ],
      "op": "AND",
      "path": "11"
    },
    "15291": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        4965
      ],
      "op": "DUP6",
      "path": "11"
    },
    "15292": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4971
      ],
      "op": "DUP8",
      "path": "11"
    },
    "15293": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "15295": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "15296": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3BC9"
    },
    "15299": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "15300": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "15301": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4637"
    },
    "15304": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "11"
    },
    "15305": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15306": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "15308": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "15310": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "15311": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15312": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP4",
      "path": "11"
    },
    "15313": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SUB",
      "path": "11"
    },
    "15314": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "11"
    },
    "15315": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP6",
      "path": "11"
    },
    "15316": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP8",
      "path": "11"
    },
    "15317": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "GAS",
      "path": "11"
    },
    "15318": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "CALL",
      "path": "11"
    },
    "15319": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "15320": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "15321": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "15322": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "15323": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "15324": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15325": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "15327": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "11"
    },
    "15328": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "EQ",
      "path": "11"
    },
    "15329": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3C06"
    },
    "15332": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "15333": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "15335": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "15336": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "15337": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "15338": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "15340": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "NOT",
      "path": "11"
    },
    "15341": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3F"
    },
    "15343": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "15344": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "11"
    },
    "15345": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "AND",
      "path": "11"
    },
    "15346": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "11"
    },
    "15347": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "11"
    },
    "15348": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "15350": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "15351": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "15352": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "11"
    },
    "15353": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "15354": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "15355": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "15357": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "15359": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP5",
      "path": "11"
    },
    "15360": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "11"
    },
    "15361": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "15362": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3C0B"
    },
    "15365": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "11"
    },
    "15366": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15367": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "15369": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "15370": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "15371": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15372": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "15373": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "15374": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "15375": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "15376": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "15377": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 127,
      "value": "0x3C1B"
    },
    "15380": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5006,
        5013
      ],
      "op": "DUP3",
      "path": "11"
    },
    "15381": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5015,
        5025
      ],
      "op": "DUP3",
      "path": "11"
    },
    "15382": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5027,
        5039
      ],
      "op": "DUP7",
      "path": "11"
    },
    "15383": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5005
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3C26"
    },
    "15386": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMP",
      "path": "11"
    },
    "15387": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15388": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5040
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "15389": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "15390": {
      "op": "POP"
    },
    "15391": {
      "op": "POP"
    },
    "15392": {
      "op": "POP"
    },
    "15393": {
      "op": "POP"
    },
    "15394": {
      "op": "POP"
    },
    "15395": {
      "op": "POP"
    },
    "15396": {
      "op": "POP"
    },
    "15397": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMP",
      "path": "11"
    },
    "15398": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7161,
        7853
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15399": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7307,
        7319
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "15401": {
      "branch": 179,
      "fn": "Address.verifyCallResult",
      "offset": [
        7335,
        7342
      ],
      "op": "DUP4",
      "path": "11"
    },
    "15402": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "15403": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3C35"
    },
    "15406": {
      "branch": 179,
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "15407": {
      "op": "POP"
    },
    "15408": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7365,
        7375
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 128
    },
    "15409": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3AF7"
    },
    "15412": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "JUMP",
      "path": "11"
    },
    "15413": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15414": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "DUP3",
      "path": "11"
    },
    "15415": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "15416": {
      "branch": 180,
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7497
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "15417": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3C45"
    },
    "15420": {
      "branch": 180,
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "15421": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7670,
        7680
      ],
      "op": "DUP3",
      "path": "11"
    },
    "15422": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7664,
        7681
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "15423": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7730,
        7745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15424": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7717,
        7727
      ],
      "op": "DUP5",
      "path": "11"
    },
    "15425": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7713,
        7715
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "15427": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7709,
        7728
      ],
      "op": "ADD",
      "path": "11"
    },
    "15428": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7702,
        7746
      ],
      "op": "REVERT",
      "path": "11"
    },
    "15429": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "15430": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7809,
        7821
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 129
    },
    "15431": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "15433": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "15434": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15438": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15440": {
      "op": "SHL"
    },
    "15441": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "DUP2",
      "path": "11"
    },
    "15442": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "15443": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "15445": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "ADD",
      "path": "11"
    },
    "15446": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x429"
    },
    "15449": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "15450": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "15451": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4710"
    },
    "15454": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        7802,
        7822
      ],
      "op": "JUMP",
      "path": "11"
    },
    "15455": {
      "op": "JUMPDEST"
    },
    "15456": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15458": {
      "op": "MLOAD"
    },
    "15459": {
      "op": "DUP1"
    },
    "15460": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "15463": {
      "op": "ADD"
    },
    "15464": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15466": {
      "op": "MSTORE"
    },
    "15467": {
      "op": "DUP1"
    },
    "15468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15470": {
      "op": "DUP2"
    },
    "15471": {
      "op": "MSTORE"
    },
    "15472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15474": {
      "op": "ADD"
    },
    "15475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15477": {
      "op": "DUP2"
    },
    "15478": {
      "op": "MSTORE"
    },
    "15479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15481": {
      "op": "ADD"
    },
    "15482": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15484": {
      "op": "DUP2"
    },
    "15485": {
      "op": "MSTORE"
    },
    "15486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15488": {
      "op": "ADD"
    },
    "15489": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15491": {
      "op": "DUP2"
    },
    "15492": {
      "op": "MSTORE"
    },
    "15493": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15495": {
      "op": "ADD"
    },
    "15496": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15498": {
      "op": "DUP2"
    },
    "15499": {
      "op": "MSTORE"
    },
    "15500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15502": {
      "op": "ADD"
    },
    "15503": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15505": {
      "op": "DUP2"
    },
    "15506": {
      "op": "MSTORE"
    },
    "15507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15509": {
      "op": "ADD"
    },
    "15510": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15512": {
      "op": "DUP2"
    },
    "15513": {
      "op": "MSTORE"
    },
    "15514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15516": {
      "op": "ADD"
    },
    "15517": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15519": {
      "op": "DUP2"
    },
    "15520": {
      "op": "MSTORE"
    },
    "15521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15523": {
      "op": "ADD"
    },
    "15524": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15526": {
      "op": "DUP2"
    },
    "15527": {
      "op": "MSTORE"
    },
    "15528": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15530": {
      "op": "ADD"
    },
    "15531": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15533": {
      "op": "DUP2"
    },
    "15534": {
      "op": "MSTORE"
    },
    "15535": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15537": {
      "op": "ADD"
    },
    "15538": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15540": {
      "op": "DUP2"
    },
    "15541": {
      "op": "MSTORE"
    },
    "15542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15544": {
      "op": "ADD"
    },
    "15545": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15547": {
      "op": "DUP2"
    },
    "15548": {
      "op": "MSTORE"
    },
    "15549": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15551": {
      "op": "ADD"
    },
    "15552": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15554": {
      "op": "DUP2"
    },
    "15555": {
      "op": "MSTORE"
    },
    "15556": {
      "op": "POP"
    },
    "15557": {
      "op": "SWAP1"
    },
    "15558": {
      "jump": "o",
      "op": "JUMP"
    },
    "15559": {
      "op": "JUMPDEST"
    },
    "15560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15562": {
      "op": "DUP3"
    },
    "15563": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15565": {
      "op": "DUP4"
    },
    "15566": {
      "op": "ADD"
    },
    "15567": {
      "op": "SLT"
    },
    "15568": {
      "op": "PUSH2",
      "value": "0x3CD8"
    },
    "15571": {
      "op": "JUMPI"
    },
    "15572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15574": {
      "op": "DUP1"
    },
    "15575": {
      "op": "REVERT"
    },
    "15576": {
      "op": "JUMPDEST"
    },
    "15577": {
      "op": "DUP2"
    },
    "15578": {
      "op": "CALLDATALOAD"
    },
    "15579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15581": {
      "op": "PUSH2",
      "value": "0x3CED"
    },
    "15584": {
      "op": "PUSH2",
      "value": "0x3CE8"
    },
    "15587": {
      "op": "DUP4"
    },
    "15588": {
      "op": "PUSH2",
      "value": "0x4869"
    },
    "15591": {
      "jump": "i",
      "op": "JUMP"
    },
    "15592": {
      "op": "JUMPDEST"
    },
    "15593": {
      "op": "PUSH2",
      "value": "0x4839"
    },
    "15596": {
      "jump": "i",
      "op": "JUMP"
    },
    "15597": {
      "op": "JUMPDEST"
    },
    "15598": {
      "op": "DUP1"
    },
    "15599": {
      "op": "DUP4"
    },
    "15600": {
      "op": "DUP3"
    },
    "15601": {
      "op": "MSTORE"
    },
    "15602": {
      "op": "DUP3"
    },
    "15603": {
      "op": "DUP3"
    },
    "15604": {
      "op": "ADD"
    },
    "15605": {
      "op": "SWAP2"
    },
    "15606": {
      "op": "POP"
    },
    "15607": {
      "op": "DUP3"
    },
    "15608": {
      "op": "DUP7"
    },
    "15609": {
      "op": "ADD"
    },
    "15610": {
      "op": "DUP8"
    },
    "15611": {
      "op": "DUP5"
    },
    "15612": {
      "op": "DUP7"
    },
    "15613": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15615": {
      "op": "SHL"
    },
    "15616": {
      "op": "DUP10"
    },
    "15617": {
      "op": "ADD"
    },
    "15618": {
      "op": "ADD"
    },
    "15619": {
      "op": "GT"
    },
    "15620": {
      "op": "ISZERO"
    },
    "15621": {
      "op": "PUSH2",
      "value": "0x3D0D"
    },
    "15624": {
      "op": "JUMPI"
    },
    "15625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15627": {
      "op": "DUP1"
    },
    "15628": {
      "op": "REVERT"
    },
    "15629": {
      "op": "JUMPDEST"
    },
    "15630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15632": {
      "op": "JUMPDEST"
    },
    "15633": {
      "op": "DUP6"
    },
    "15634": {
      "op": "DUP2"
    },
    "15635": {
      "op": "LT"
    },
    "15636": {
      "op": "ISZERO"
    },
    "15637": {
      "op": "PUSH2",
      "value": "0x3D35"
    },
    "15640": {
      "op": "JUMPI"
    },
    "15641": {
      "op": "DUP2"
    },
    "15642": {
      "op": "CALLDATALOAD"
    },
    "15643": {
      "op": "PUSH2",
      "value": "0x3D23"
    },
    "15646": {
      "op": "DUP2"
    },
    "15647": {
      "op": "PUSH2",
      "value": "0x4ACF"
    },
    "15650": {
      "jump": "i",
      "op": "JUMP"
    },
    "15651": {
      "op": "JUMPDEST"
    },
    "15652": {
      "op": "DUP5"
    },
    "15653": {
      "op": "MSTORE"
    },
    "15654": {
      "op": "SWAP3"
    },
    "15655": {
      "op": "DUP5"
    },
    "15656": {
      "op": "ADD"
    },
    "15657": {
      "op": "SWAP3"
    },
    "15658": {
      "op": "SWAP1"
    },
    "15659": {
      "op": "DUP5"
    },
    "15660": {
      "op": "ADD"
    },
    "15661": {
      "op": "SWAP1"
    },
    "15662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15664": {
      "op": "ADD"
    },
    "15665": {
      "op": "PUSH2",
      "value": "0x3D10"
    },
    "15668": {
      "op": "JUMP"
    },
    "15669": {
      "op": "JUMPDEST"
    },
    "15670": {
      "op": "POP"
    },
    "15671": {
      "op": "SWAP1"
    },
    "15672": {
      "op": "SWAP8"
    },
    "15673": {
      "op": "SWAP7"
    },
    "15674": {
      "op": "POP"
    },
    "15675": {
      "op": "POP"
    },
    "15676": {
      "op": "POP"
    },
    "15677": {
      "op": "POP"
    },
    "15678": {
      "op": "POP"
    },
    "15679": {
      "op": "POP"
    },
    "15680": {
      "op": "POP"
    },
    "15681": {
      "jump": "o",
      "op": "JUMP"
    },
    "15682": {
      "op": "JUMPDEST"
    },
    "15683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15685": {
      "op": "DUP3"
    },
    "15686": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15688": {
      "op": "DUP4"
    },
    "15689": {
      "op": "ADD"
    },
    "15690": {
      "op": "SLT"
    },
    "15691": {
      "op": "PUSH2",
      "value": "0x3D53"
    },
    "15694": {
      "op": "JUMPI"
    },
    "15695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15697": {
      "op": "DUP1"
    },
    "15698": {
      "op": "REVERT"
    },
    "15699": {
      "op": "JUMPDEST"
    },
    "15700": {
      "op": "DUP2"
    },
    "15701": {
      "op": "CALLDATALOAD"
    },
    "15702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15704": {
      "op": "PUSH2",
      "value": "0x3D63"
    },
    "15707": {
      "op": "PUSH2",
      "value": "0x3CE8"
    },
    "15710": {
      "op": "DUP4"
    },
    "15711": {
      "op": "PUSH2",
      "value": "0x4869"
    },
    "15714": {
      "jump": "i",
      "op": "JUMP"
    },
    "15715": {
      "op": "JUMPDEST"
    },
    "15716": {
      "op": "DUP1"
    },
    "15717": {
      "op": "DUP4"
    },
    "15718": {
      "op": "DUP3"
    },
    "15719": {
      "op": "MSTORE"
    },
    "15720": {
      "op": "DUP3"
    },
    "15721": {
      "op": "DUP3"
    },
    "15722": {
      "op": "ADD"
    },
    "15723": {
      "op": "SWAP2"
    },
    "15724": {
      "op": "POP"
    },
    "15725": {
      "op": "DUP3"
    },
    "15726": {
      "op": "DUP7"
    },
    "15727": {
      "op": "ADD"
    },
    "15728": {
      "op": "DUP8"
    },
    "15729": {
      "op": "DUP5"
    },
    "15730": {
      "op": "DUP7"
    },
    "15731": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15733": {
      "op": "SHL"
    },
    "15734": {
      "op": "DUP10"
    },
    "15735": {
      "op": "ADD"
    },
    "15736": {
      "op": "ADD"
    },
    "15737": {
      "op": "GT"
    },
    "15738": {
      "op": "ISZERO"
    },
    "15739": {
      "op": "PUSH2",
      "value": "0x3D83"
    },
    "15742": {
      "op": "JUMPI"
    },
    "15743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15745": {
      "op": "DUP1"
    },
    "15746": {
      "op": "REVERT"
    },
    "15747": {
      "op": "JUMPDEST"
    },
    "15748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15750": {
      "op": "JUMPDEST"
    },
    "15751": {
      "op": "DUP6"
    },
    "15752": {
      "op": "DUP2"
    },
    "15753": {
      "op": "LT"
    },
    "15754": {
      "op": "ISZERO"
    },
    "15755": {
      "op": "PUSH2",
      "value": "0x3D35"
    },
    "15758": {
      "op": "JUMPI"
    },
    "15759": {
      "op": "PUSH2",
      "value": "0x3D97"
    },
    "15762": {
      "op": "DUP3"
    },
    "15763": {
      "op": "PUSH2",
      "value": "0x3F5A"
    },
    "15766": {
      "jump": "i",
      "op": "JUMP"
    },
    "15767": {
      "op": "JUMPDEST"
    },
    "15768": {
      "op": "DUP5"
    },
    "15769": {
      "op": "MSTORE"
    },
    "15770": {
      "op": "SWAP3"
    },
    "15771": {
      "op": "DUP5"
    },
    "15772": {
      "op": "ADD"
    },
    "15773": {
      "op": "SWAP3"
    },
    "15774": {
      "op": "SWAP1"
    },
    "15775": {
      "op": "DUP5"
    },
    "15776": {
      "op": "ADD"
    },
    "15777": {
      "op": "SWAP1"
    },
    "15778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15780": {
      "op": "ADD"
    },
    "15781": {
      "op": "PUSH2",
      "value": "0x3D86"
    },
    "15784": {
      "op": "JUMP"
    },
    "15785": {
      "op": "JUMPDEST"
    },
    "15786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15788": {
      "op": "DUP3"
    },
    "15789": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15791": {
      "op": "DUP4"
    },
    "15792": {
      "op": "ADD"
    },
    "15793": {
      "op": "SLT"
    },
    "15794": {
      "op": "PUSH2",
      "value": "0x3DBA"
    },
    "15797": {
      "op": "JUMPI"
    },
    "15798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15800": {
      "op": "DUP1"
    },
    "15801": {
      "op": "REVERT"
    },
    "15802": {
      "op": "JUMPDEST"
    },
    "15803": {
      "op": "DUP2"
    },
    "15804": {
      "op": "CALLDATALOAD"
    },
    "15805": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15807": {
      "op": "PUSH2",
      "value": "0x3DCA"
    },
    "15810": {
      "op": "PUSH2",
      "value": "0x3CE8"
    },
    "15813": {
      "op": "DUP4"
    },
    "15814": {
      "op": "PUSH2",
      "value": "0x4869"
    },
    "15817": {
      "jump": "i",
      "op": "JUMP"
    },
    "15818": {
      "op": "JUMPDEST"
    },
    "15819": {
      "op": "DUP1"
    },
    "15820": {
      "op": "DUP4"
    },
    "15821": {
      "op": "DUP3"
    },
    "15822": {
      "op": "MSTORE"
    },
    "15823": {
      "op": "DUP3"
    },
    "15824": {
      "op": "DUP3"
    },
    "15825": {
      "op": "ADD"
    },
    "15826": {
      "op": "SWAP2"
    },
    "15827": {
      "op": "POP"
    },
    "15828": {
      "op": "DUP3"
    },
    "15829": {
      "op": "DUP7"
    },
    "15830": {
      "op": "ADD"
    },
    "15831": {
      "op": "DUP8"
    },
    "15832": {
      "op": "DUP5"
    },
    "15833": {
      "op": "DUP7"
    },
    "15834": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15836": {
      "op": "SHL"
    },
    "15837": {
      "op": "DUP10"
    },
    "15838": {
      "op": "ADD"
    },
    "15839": {
      "op": "ADD"
    },
    "15840": {
      "op": "GT"
    },
    "15841": {
      "op": "ISZERO"
    },
    "15842": {
      "op": "PUSH2",
      "value": "0x3DEA"
    },
    "15845": {
      "op": "JUMPI"
    },
    "15846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15848": {
      "op": "DUP1"
    },
    "15849": {
      "op": "REVERT"
    },
    "15850": {
      "op": "JUMPDEST"
    },
    "15851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15853": {
      "op": "DUP1"
    },
    "15854": {
      "op": "JUMPDEST"
    },
    "15855": {
      "op": "DUP7"
    },
    "15856": {
      "op": "DUP2"
    },
    "15857": {
      "op": "LT"
    },
    "15858": {
      "op": "ISZERO"
    },
    "15859": {
      "op": "PUSH2",
      "value": "0x3E16"
    },
    "15862": {
      "op": "JUMPI"
    },
    "15863": {
      "op": "DUP3"
    },
    "15864": {
      "op": "CALLDATALOAD"
    },
    "15865": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "15867": {
      "op": "DUP2"
    },
    "15868": {
      "op": "LT"
    },
    "15869": {
      "op": "PUSH2",
      "value": "0x3E04"
    },
    "15872": {
      "op": "JUMPI"
    },
    "15873": {
      "op": "DUP3"
    },
    "15874": {
      "op": "DUP4"
    },
    "15875": {
      "op": "REVERT"
    },
    "15876": {
      "op": "JUMPDEST"
    },
    "15877": {
      "op": "DUP6"
    },
    "15878": {
      "op": "MSTORE"
    },
    "15879": {
      "op": "SWAP4"
    },
    "15880": {
      "op": "DUP6"
    },
    "15881": {
      "op": "ADD"
    },
    "15882": {
      "op": "SWAP4"
    },
    "15883": {
      "op": "SWAP2"
    },
    "15884": {
      "op": "DUP6"
    },
    "15885": {
      "op": "ADD"
    },
    "15886": {
      "op": "SWAP2"
    },
    "15887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15889": {
      "op": "ADD"
    },
    "15890": {
      "op": "PUSH2",
      "value": "0x3DEE"
    },
    "15893": {
      "op": "JUMP"
    },
    "15894": {
      "op": "JUMPDEST"
    },
    "15895": {
      "op": "POP"
    },
    "15896": {
      "op": "SWAP2"
    },
    "15897": {
      "op": "SWAP9"
    },
    "15898": {
      "op": "SWAP8"
    },
    "15899": {
      "op": "POP"
    },
    "15900": {
      "op": "POP"
    },
    "15901": {
      "op": "POP"
    },
    "15902": {
      "op": "POP"
    },
    "15903": {
      "op": "POP"
    },
    "15904": {
      "op": "POP"
    },
    "15905": {
      "op": "POP"
    },
    "15906": {
      "op": "POP"
    },
    "15907": {
      "jump": "o",
      "op": "JUMP"
    },
    "15908": {
      "op": "JUMPDEST"
    },
    "15909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15911": {
      "op": "DUP3"
    },
    "15912": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15914": {
      "op": "DUP4"
    },
    "15915": {
      "op": "ADD"
    },
    "15916": {
      "op": "SLT"
    },
    "15917": {
      "op": "PUSH2",
      "value": "0x3E35"
    },
    "15920": {
      "op": "JUMPI"
    },
    "15921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15923": {
      "op": "DUP1"
    },
    "15924": {
      "op": "REVERT"
    },
    "15925": {
      "op": "JUMPDEST"
    },
    "15926": {
      "op": "DUP2"
    },
    "15927": {
      "op": "CALLDATALOAD"
    },
    "15928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15930": {
      "op": "PUSH2",
      "value": "0x3E45"
    },
    "15933": {
      "op": "PUSH2",
      "value": "0x3CE8"
    },
    "15936": {
      "op": "DUP4"
    },
    "15937": {
      "op": "PUSH2",
      "value": "0x4869"
    },
    "15940": {
      "jump": "i",
      "op": "JUMP"
    },
    "15941": {
      "op": "JUMPDEST"
    },
    "15942": {
      "op": "DUP1"
    },
    "15943": {
      "op": "DUP4"
    },
    "15944": {
      "op": "DUP3"
    },
    "15945": {
      "op": "MSTORE"
    },
    "15946": {
      "op": "DUP3"
    },
    "15947": {
      "op": "DUP3"
    },
    "15948": {
      "op": "ADD"
    },
    "15949": {
      "op": "SWAP2"
    },
    "15950": {
      "op": "POP"
    },
    "15951": {
      "op": "DUP3"
    },
    "15952": {
      "op": "DUP7"
    },
    "15953": {
      "op": "ADD"
    },
    "15954": {
      "op": "DUP8"
    },
    "15955": {
      "op": "DUP5"
    },
    "15956": {
      "op": "DUP7"
    },
    "15957": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15959": {
      "op": "SHL"
    },
    "15960": {
      "op": "DUP10"
    },
    "15961": {
      "op": "ADD"
    },
    "15962": {
      "op": "ADD"
    },
    "15963": {
      "op": "GT"
    },
    "15964": {
      "op": "ISZERO"
    },
    "15965": {
      "op": "PUSH2",
      "value": "0x3E65"
    },
    "15968": {
      "op": "JUMPI"
    },
    "15969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15971": {
      "op": "DUP1"
    },
    "15972": {
      "op": "REVERT"
    },
    "15973": {
      "op": "JUMPDEST"
    },
    "15974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15976": {
      "op": "DUP1"
    },
    "15977": {
      "op": "JUMPDEST"
    },
    "15978": {
      "op": "DUP7"
    },
    "15979": {
      "op": "DUP2"
    },
    "15980": {
      "op": "LT"
    },
    "15981": {
      "op": "ISZERO"
    },
    "15982": {
      "op": "PUSH2",
      "value": "0x3E16"
    },
    "15985": {
      "op": "JUMPI"
    },
    "15986": {
      "op": "DUP3"
    },
    "15987": {
      "op": "CALLDATALOAD"
    },
    "15988": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15990": {
      "op": "DUP2"
    },
    "15991": {
      "op": "LT"
    },
    "15992": {
      "op": "PUSH2",
      "value": "0x3E7F"
    },
    "15995": {
      "op": "JUMPI"
    },
    "15996": {
      "op": "DUP3"
    },
    "15997": {
      "op": "DUP4"
    },
    "15998": {
      "op": "REVERT"
    },
    "15999": {
      "op": "JUMPDEST"
    },
    "16000": {
      "op": "DUP6"
    },
    "16001": {
      "op": "MSTORE"
    },
    "16002": {
      "op": "SWAP4"
    },
    "16003": {
      "op": "DUP6"
    },
    "16004": {
      "op": "ADD"
    },
    "16005": {
      "op": "SWAP4"
    },
    "16006": {
      "op": "SWAP2"
    },
    "16007": {
      "op": "DUP6"
    },
    "16008": {
      "op": "ADD"
    },
    "16009": {
      "op": "SWAP2"
    },
    "16010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16012": {
      "op": "ADD"
    },
    "16013": {
      "op": "PUSH2",
      "value": "0x3E69"
    },
    "16016": {
      "op": "JUMP"
    },
    "16017": {
      "op": "JUMPDEST"
    },
    "16018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16020": {
      "op": "DUP3"
    },
    "16021": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16023": {
      "op": "DUP4"
    },
    "16024": {
      "op": "ADD"
    },
    "16025": {
      "op": "SLT"
    },
    "16026": {
      "op": "PUSH2",
      "value": "0x3EA2"
    },
    "16029": {
      "op": "JUMPI"
    },
    "16030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16032": {
      "op": "DUP1"
    },
    "16033": {
      "op": "REVERT"
    },
    "16034": {
      "op": "JUMPDEST"
    },
    "16035": {
      "op": "DUP2"
    },
    "16036": {
      "op": "CALLDATALOAD"
    },
    "16037": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16039": {
      "op": "PUSH2",
      "value": "0x3EB2"
    },
    "16042": {
      "op": "PUSH2",
      "value": "0x3CE8"
    },
    "16045": {
      "op": "DUP4"
    },
    "16046": {
      "op": "PUSH2",
      "value": "0x4869"
    },
    "16049": {
      "jump": "i",
      "op": "JUMP"
    },
    "16050": {
      "op": "JUMPDEST"
    },
    "16051": {
      "op": "DUP1"
    },
    "16052": {
      "op": "DUP4"
    },
    "16053": {
      "op": "DUP3"
    },
    "16054": {
      "op": "MSTORE"
    },
    "16055": {
      "op": "DUP3"
    },
    "16056": {
      "op": "DUP3"
    },
    "16057": {
      "op": "ADD"
    },
    "16058": {
      "op": "SWAP2"
    },
    "16059": {
      "op": "POP"
    },
    "16060": {
      "op": "DUP3"
    },
    "16061": {
      "op": "DUP7"
    },
    "16062": {
      "op": "ADD"
    },
    "16063": {
      "op": "DUP8"
    },
    "16064": {
      "op": "DUP5"
    },
    "16065": {
      "op": "DUP7"
    },
    "16066": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "16068": {
      "op": "SHL"
    },
    "16069": {
      "op": "DUP10"
    },
    "16070": {
      "op": "ADD"
    },
    "16071": {
      "op": "ADD"
    },
    "16072": {
      "op": "GT"
    },
    "16073": {
      "op": "ISZERO"
    },
    "16074": {
      "op": "PUSH2",
      "value": "0x3ED2"
    },
    "16077": {
      "op": "JUMPI"
    },
    "16078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16080": {
      "op": "DUP1"
    },
    "16081": {
      "op": "REVERT"
    },
    "16082": {
      "op": "JUMPDEST"
    },
    "16083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16085": {
      "op": "JUMPDEST"
    },
    "16086": {
      "op": "DUP6"
    },
    "16087": {
      "op": "DUP2"
    },
    "16088": {
      "op": "LT"
    },
    "16089": {
      "op": "ISZERO"
    },
    "16090": {
      "op": "PUSH2",
      "value": "0x3D35"
    },
    "16093": {
      "op": "JUMPI"
    },
    "16094": {
      "op": "DUP2"
    },
    "16095": {
      "op": "CALLDATALOAD"
    },
    "16096": {
      "op": "DUP5"
    },
    "16097": {
      "op": "MSTORE"
    },
    "16098": {
      "op": "SWAP3"
    },
    "16099": {
      "op": "DUP5"
    },
    "16100": {
      "op": "ADD"
    },
    "16101": {
      "op": "SWAP3"
    },
    "16102": {
      "op": "SWAP1"
    },
    "16103": {
      "op": "DUP5"
    },
    "16104": {
      "op": "ADD"
    },
    "16105": {
      "op": "SWAP1"
    },
    "16106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16108": {
      "op": "ADD"
    },
    "16109": {
      "op": "PUSH2",
      "value": "0x3ED5"
    },
    "16112": {
      "op": "JUMP"
    },
    "16113": {
      "op": "JUMPDEST"
    },
    "16114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16116": {
      "op": "DUP3"
    },
    "16117": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16119": {
      "op": "DUP4"
    },
    "16120": {
      "op": "ADD"
    },
    "16121": {
      "op": "SLT"
    },
    "16122": {
      "op": "PUSH2",
      "value": "0x3F02"
    },
    "16125": {
      "op": "JUMPI"
    },
    "16126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16128": {
      "op": "DUP1"
    },
    "16129": {
      "op": "REVERT"
    },
    "16130": {
      "op": "JUMPDEST"
    },
    "16131": {
      "op": "DUP2"
    },
    "16132": {
      "op": "CALLDATALOAD"
    },
    "16133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16135": {
      "op": "PUSH2",
      "value": "0x3F12"
    },
    "16138": {
      "op": "PUSH2",
      "value": "0x3CE8"
    },
    "16141": {
      "op": "DUP4"
    },
    "16142": {
      "op": "PUSH2",
      "value": "0x4869"
    },
    "16145": {
      "jump": "i",
      "op": "JUMP"
    },
    "16146": {
      "op": "JUMPDEST"
    },
    "16147": {
      "op": "DUP1"
    },
    "16148": {
      "op": "DUP4"
    },
    "16149": {
      "op": "DUP3"
    },
    "16150": {
      "op": "MSTORE"
    },
    "16151": {
      "op": "DUP3"
    },
    "16152": {
      "op": "DUP3"
    },
    "16153": {
      "op": "ADD"
    },
    "16154": {
      "op": "SWAP2"
    },
    "16155": {
      "op": "POP"
    },
    "16156": {
      "op": "DUP3"
    },
    "16157": {
      "op": "DUP7"
    },
    "16158": {
      "op": "ADD"
    },
    "16159": {
      "op": "DUP8"
    },
    "16160": {
      "op": "DUP5"
    },
    "16161": {
      "op": "DUP7"
    },
    "16162": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "16164": {
      "op": "SHL"
    },
    "16165": {
      "op": "DUP10"
    },
    "16166": {
      "op": "ADD"
    },
    "16167": {
      "op": "ADD"
    },
    "16168": {
      "op": "GT"
    },
    "16169": {
      "op": "ISZERO"
    },
    "16170": {
      "op": "PUSH2",
      "value": "0x3F32"
    },
    "16173": {
      "op": "JUMPI"
    },
    "16174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16176": {
      "op": "DUP1"
    },
    "16177": {
      "op": "REVERT"
    },
    "16178": {
      "op": "JUMPDEST"
    },
    "16179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16181": {
      "op": "JUMPDEST"
    },
    "16182": {
      "op": "DUP6"
    },
    "16183": {
      "op": "DUP2"
    },
    "16184": {
      "op": "LT"
    },
    "16185": {
      "op": "ISZERO"
    },
    "16186": {
      "op": "PUSH2",
      "value": "0x3D35"
    },
    "16189": {
      "op": "JUMPI"
    },
    "16190": {
      "op": "DUP2"
    },
    "16191": {
      "op": "CALLDATALOAD"
    },
    "16192": {
      "op": "PUSH2",
      "value": "0x3F48"
    },
    "16195": {
      "op": "DUP2"
    },
    "16196": {
      "op": "PUSH2",
      "value": "0x4AF2"
    },
    "16199": {
      "jump": "i",
      "op": "JUMP"
    },
    "16200": {
      "op": "JUMPDEST"
    },
    "16201": {
      "op": "DUP5"
    },
    "16202": {
      "op": "MSTORE"
    },
    "16203": {
      "op": "SWAP3"
    },
    "16204": {
      "op": "DUP5"
    },
    "16205": {
      "op": "ADD"
    },
    "16206": {
      "op": "SWAP3"
    },
    "16207": {
      "op": "SWAP1"
    },
    "16208": {
      "op": "DUP5"
    },
    "16209": {
      "op": "ADD"
    },
    "16210": {
      "op": "SWAP1"
    },
    "16211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16213": {
      "op": "ADD"
    },
    "16214": {
      "op": "PUSH2",
      "value": "0x3F35"
    },
    "16217": {
      "op": "JUMP"
    },
    "16218": {
      "op": "JUMPDEST"
    },
    "16219": {
      "op": "DUP1"
    },
    "16220": {
      "op": "CALLDATALOAD"
    },
    "16221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16225": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16227": {
      "op": "SHL"
    },
    "16228": {
      "op": "SUB"
    },
    "16229": {
      "op": "NOT"
    },
    "16230": {
      "op": "DUP2"
    },
    "16231": {
      "op": "AND"
    },
    "16232": {
      "op": "DUP2"
    },
    "16233": {
      "op": "EQ"
    },
    "16234": {
      "op": "PUSH2",
      "value": "0x3F72"
    },
    "16237": {
      "op": "JUMPI"
    },
    "16238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16240": {
      "op": "DUP1"
    },
    "16241": {
      "op": "REVERT"
    },
    "16242": {
      "op": "JUMPDEST"
    },
    "16243": {
      "op": "SWAP2"
    },
    "16244": {
      "op": "SWAP1"
    },
    "16245": {
      "op": "POP"
    },
    "16246": {
      "jump": "o",
      "op": "JUMP"
    },
    "16247": {
      "op": "JUMPDEST"
    },
    "16248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16250": {
      "op": "DUP3"
    },
    "16251": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16253": {
      "op": "DUP4"
    },
    "16254": {
      "op": "ADD"
    },
    "16255": {
      "op": "SLT"
    },
    "16256": {
      "op": "PUSH2",
      "value": "0x3F88"
    },
    "16259": {
      "op": "JUMPI"
    },
    "16260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16262": {
      "op": "DUP1"
    },
    "16263": {
      "op": "REVERT"
    },
    "16264": {
      "op": "JUMPDEST"
    },
    "16265": {
      "op": "DUP2"
    },
    "16266": {
      "op": "CALLDATALOAD"
    },
    "16267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16271": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16273": {
      "op": "SHL"
    },
    "16274": {
      "op": "SUB"
    },
    "16275": {
      "op": "DUP2"
    },
    "16276": {
      "op": "GT"
    },
    "16277": {
      "op": "ISZERO"
    },
    "16278": {
      "op": "PUSH2",
      "value": "0x3FA1"
    },
    "16281": {
      "op": "JUMPI"
    },
    "16282": {
      "op": "PUSH2",
      "value": "0x3FA1"
    },
    "16285": {
      "op": "PUSH2",
      "value": "0x4AB9"
    },
    "16288": {
      "jump": "i",
      "op": "JUMP"
    },
    "16289": {
      "op": "JUMPDEST"
    },
    "16290": {
      "op": "PUSH2",
      "value": "0x3FB4"
    },
    "16293": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16295": {
      "op": "DUP3"
    },
    "16296": {
      "op": "ADD"
    },
    "16297": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16299": {
      "op": "NOT"
    },
    "16300": {
      "op": "AND"
    },
    "16301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16303": {
      "op": "ADD"
    },
    "16304": {
      "op": "PUSH2",
      "value": "0x4839"
    },
    "16307": {
      "jump": "i",
      "op": "JUMP"
    },
    "16308": {
      "op": "JUMPDEST"
    },
    "16309": {
      "op": "DUP2"
    },
    "16310": {
      "op": "DUP2"
    },
    "16311": {
      "op": "MSTORE"
    },
    "16312": {
      "op": "DUP5"
    },
    "16313": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16315": {
      "op": "DUP4"
    },
    "16316": {
      "op": "DUP7"
    },
    "16317": {
      "op": "ADD"
    },
    "16318": {
      "op": "ADD"
    },
    "16319": {
      "op": "GT"
    },
    "16320": {
      "op": "ISZERO"
    },
    "16321": {
      "op": "PUSH2",
      "value": "0x3FC9"
    },
    "16324": {
      "op": "JUMPI"
    },
    "16325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16327": {
      "op": "DUP1"
    },
    "16328": {
      "op": "REVERT"
    },
    "16329": {
      "op": "JUMPDEST"
    },
    "16330": {
      "op": "DUP2"
    },
    "16331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16333": {
      "op": "DUP6"
    },
    "16334": {
      "op": "ADD"
    },
    "16335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16337": {
      "op": "DUP4"
    },
    "16338": {
      "op": "ADD"
    },
    "16339": {
      "op": "CALLDATACOPY"
    },
    "16340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16342": {
      "op": "SWAP2"
    },
    "16343": {
      "op": "DUP2"
    },
    "16344": {
      "op": "ADD"
    },
    "16345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16347": {
      "op": "ADD"
    },
    "16348": {
      "op": "SWAP2"
    },
    "16349": {
      "op": "SWAP1"
    },
    "16350": {
      "op": "SWAP2"
    },
    "16351": {
      "op": "MSTORE"
    },
    "16352": {
      "op": "SWAP4"
    },
    "16353": {
      "op": "SWAP3"
    },
    "16354": {
      "op": "POP"
    },
    "16355": {
      "op": "POP"
    },
    "16356": {
      "op": "POP"
    },
    "16357": {
      "jump": "o",
      "op": "JUMP"
    },
    "16358": {
      "op": "JUMPDEST"
    },
    "16359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16363": {
      "op": "DUP3"
    },
    "16364": {
      "op": "DUP5"
    },
    "16365": {
      "op": "SUB"
    },
    "16366": {
      "op": "SLT"
    },
    "16367": {
      "op": "ISZERO"
    },
    "16368": {
      "op": "PUSH2",
      "value": "0x3FF8"
    },
    "16371": {
      "op": "JUMPI"
    },
    "16372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16374": {
      "op": "DUP1"
    },
    "16375": {
      "op": "REVERT"
    },
    "16376": {
      "op": "JUMPDEST"
    },
    "16377": {
      "op": "DUP2"
    },
    "16378": {
      "op": "MLOAD"
    },
    "16379": {
      "op": "PUSH2",
      "value": "0x3AF7"
    },
    "16382": {
      "op": "DUP2"
    },
    "16383": {
      "op": "PUSH2",
      "value": "0x4ACF"
    },
    "16386": {
      "jump": "i",
      "op": "JUMP"
    },
    "16387": {
      "op": "JUMPDEST"
    },
    "16388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16392": {
      "op": "DUP3"
    },
    "16393": {
      "op": "DUP5"
    },
    "16394": {
      "op": "SUB"
    },
    "16395": {
      "op": "SLT"
    },
    "16396": {
      "op": "ISZERO"
    },
    "16397": {
      "op": "PUSH2",
      "value": "0x4015"
    },
    "16400": {
      "op": "JUMPI"
    },
    "16401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16403": {
      "op": "DUP1"
    },
    "16404": {
      "op": "REVERT"
    },
    "16405": {
      "op": "JUMPDEST"
    },
    "16406": {
      "op": "DUP2"
    },
    "16407": {
      "op": "CALLDATALOAD"
    },
    "16408": {
      "op": "PUSH2",
      "value": "0x3AF7"
    },
    "16411": {
      "op": "DUP2"
    },
    "16412": {
      "op": "PUSH2",
      "value": "0x4ACF"
    },
    "16415": {
      "jump": "i",
      "op": "JUMP"
    },
    "16416": {
      "op": "JUMPDEST"
    },
    "16417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16419": {
      "op": "DUP1"
    },
    "16420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16422": {
      "op": "DUP1"
    },
    "16423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16427": {
      "op": "DUP7"
    },
    "16428": {
      "op": "DUP9"
    },
    "16429": {
      "op": "SUB"
    },
    "16430": {
      "op": "SLT"
    },
    "16431": {
      "op": "ISZERO"
    },
    "16432": {
      "op": "PUSH2",
      "value": "0x4038"
    },
    "16435": {
      "op": "JUMPI"
    },
    "16436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16438": {
      "op": "DUP1"
    },
    "16439": {
      "op": "REVERT"
    },
    "16440": {
      "op": "JUMPDEST"
    },
    "16441": {
      "op": "DUP6"
    },
    "16442": {
      "op": "CALLDATALOAD"
    },
    "16443": {
      "op": "PUSH2",
      "value": "0x4043"
    },
    "16446": {
      "op": "DUP2"
    },
    "16447": {
      "op": "PUSH2",
      "value": "0x4ACF"
    },
    "16450": {
      "jump": "i",
      "op": "JUMP"
    },
    "16451": {
      "op": "JUMPDEST"
    },
    "16452": {
      "op": "SWAP5"
    },
    "16453": {
      "op": "POP"
    },
    "16454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16456": {
      "op": "DUP7"
    },
    "16457": {
      "op": "ADD"
    },
    "16458": {
      "op": "CALLDATALOAD"
    },
    "16459": {
      "op": "PUSH2",
      "value": "0x4053"
    },
    "16462": {
      "op": "DUP2"
    },
    "16463": {
      "op": "PUSH2",
      "value": "0x4ACF"
    },
    "16466": {
      "jump": "i",
      "op": "JUMP"
    },
    "16467": {
      "op": "JUMPDEST"
    },
    "16468": {
      "op": "SWAP4"
    },
    "16469": {
      "op": "POP"
    },
    "16470": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16472": {
      "op": "DUP7"
    },
    "16473": {
      "op": "ADD"
    },
    "16474": {
      "op": "CALLDATALOAD"
    },
    "16475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16479": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16481": {
      "op": "SHL"
    },
    "16482": {
      "op": "SUB"
    },
    "16483": {
      "op": "DUP1"
    },
    "16484": {
      "op": "DUP3"
    },
    "16485": {
      "op": "GT"
    },
    "16486": {
      "op": "ISZERO"
    },
    "16487": {
      "op": "PUSH2",
      "value": "0x406F"
    },
    "16490": {
      "op": "JUMPI"
    },
    "16491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16493": {
      "op": "DUP1"
    },
    "16494": {
      "op": "REVERT"
    },
    "16495": {
      "op": "JUMPDEST"
    },
    "16496": {
      "op": "PUSH2",
      "value": "0x407B"
    },
    "16499": {
      "op": "DUP10"
    },
    "16500": {
      "op": "DUP4"
    },
    "16501": {
      "op": "DUP11"
    },
    "16502": {
      "op": "ADD"
    },
    "16503": {
      "op": "PUSH2",
      "value": "0x3E91"
    },
    "16506": {
      "jump": "i",
      "op": "JUMP"
    },
    "16507": {
      "op": "JUMPDEST"
    },
    "16508": {
      "op": "SWAP5"
    },
    "16509": {
      "op": "POP"
    },
    "16510": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16512": {
      "op": "DUP9"
    },
    "16513": {
      "op": "ADD"
    },
    "16514": {
      "op": "CALLDATALOAD"
    },
    "16515": {
      "op": "SWAP2"
    },
    "16516": {
      "op": "POP"
    },
    "16517": {
      "op": "DUP1"
    },
    "16518": {
      "op": "DUP3"
    },
    "16519": {
      "op": "GT"
    },
    "16520": {
      "op": "ISZERO"
    },
    "16521": {
      "op": "PUSH2",
      "value": "0x4091"
    },
    "16524": {
      "op": "JUMPI"
    },
    "16525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16527": {
      "op": "DUP1"
    },
    "16528": {
      "op": "REVERT"
    },
    "16529": {
      "op": "JUMPDEST"
    },
    "16530": {
      "op": "PUSH2",
      "value": "0x409D"
    },
    "16533": {
      "op": "DUP10"
    },
    "16534": {
      "op": "DUP4"
    },
    "16535": {
      "op": "DUP11"
    },
    "16536": {
      "op": "ADD"
    },
    "16537": {
      "op": "PUSH2",
      "value": "0x3E91"
    },
    "16540": {
      "jump": "i",
      "op": "JUMP"
    },
    "16541": {
      "op": "JUMPDEST"
    },
    "16542": {
      "op": "SWAP4"
    },
    "16543": {
      "op": "POP"
    },
    "16544": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16546": {
      "op": "DUP9"
    },
    "16547": {
      "op": "ADD"
    },
    "16548": {
      "op": "CALLDATALOAD"
    },
    "16549": {
      "op": "SWAP2"
    },
    "16550": {
      "op": "POP"
    },
    "16551": {
      "op": "DUP1"
    },
    "16552": {
      "op": "DUP3"
    },
    "16553": {
      "op": "GT"
    },
    "16554": {
      "op": "ISZERO"
    },
    "16555": {
      "op": "PUSH2",
      "value": "0x40B3"
    },
    "16558": {
      "op": "JUMPI"
    },
    "16559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16561": {
      "op": "DUP1"
    },
    "16562": {
      "op": "REVERT"
    },
    "16563": {
      "op": "JUMPDEST"
    },
    "16564": {
      "op": "POP"
    },
    "16565": {
      "op": "PUSH2",
      "value": "0x40C0"
    },
    "16568": {
      "op": "DUP9"
    },
    "16569": {
      "op": "DUP3"
    },
    "16570": {
      "op": "DUP10"
    },
    "16571": {
      "op": "ADD"
    },
    "16572": {
      "op": "PUSH2",
      "value": "0x3F77"
    },
    "16575": {
      "jump": "i",
      "op": "JUMP"
    },
    "16576": {
      "op": "JUMPDEST"
    },
    "16577": {
      "op": "SWAP2"
    },
    "16578": {
      "op": "POP"
    },
    "16579": {
      "op": "POP"
    },
    "16580": {
      "op": "SWAP3"
    },
    "16581": {
      "op": "SWAP6"
    },
    "16582": {
      "op": "POP"
    },
    "16583": {
      "op": "SWAP3"
    },
    "16584": {
      "op": "SWAP6"
    },
    "16585": {
      "op": "SWAP1"
    },
    "16586": {
      "op": "SWAP4"
    },
    "16587": {
      "op": "POP"
    },
    "16588": {
      "jump": "o",
      "op": "JUMP"
    },
    "16589": {
      "op": "JUMPDEST"
    },
    "16590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16592": {
      "op": "DUP1"
    },
    "16593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16595": {
      "op": "DUP1"
    },
    "16596": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16598": {
      "op": "DUP6"
    },
    "16599": {
      "op": "DUP8"
    },
    "16600": {
      "op": "SUB"
    },
    "16601": {
      "op": "SLT"
    },
    "16602": {
      "op": "ISZERO"
    },
    "16603": {
      "op": "PUSH2",
      "value": "0x40E3"
    },
    "16606": {
      "op": "JUMPI"
    },
    "16607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16609": {
      "op": "DUP1"
    },
    "16610": {
      "op": "REVERT"
    },
    "16611": {
      "op": "JUMPDEST"
    },
    "16612": {
      "op": "DUP5"
    },
    "16613": {
      "op": "CALLDATALOAD"
    },
    "16614": {
      "op": "PUSH2",
      "value": "0x40EE"
    },
    "16617": {
      "op": "DUP2"
    },
    "16618": {
      "op": "PUSH2",
      "value": "0x4ACF"
    },
    "16621": {
      "jump": "i",
      "op": "JUMP"
    },
    "16622": {
      "op": "JUMPDEST"
    },
    "16623": {
      "op": "SWAP4"
    },
    "16624": {
      "op": "POP"
    },
    "16625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16627": {
      "op": "DUP6"
    },
    "16628": {
      "op": "ADD"
    },
    "16629": {
      "op": "CALLDATALOAD"
    },
    "16630": {
      "op": "PUSH2",
      "value": "0x40FE"
    },
    "16633": {
      "op": "DUP2"
    },
    "16634": {
      "op": "PUSH2",
      "value": "0x4ACF"
    },
    "16637": {
      "jump": "i",
      "op": "JUMP"
    },
    "16638": {
      "op": "JUMPDEST"
    },
    "16639": {
      "op": "SWAP3"
    },
    "16640": {
      "op": "POP"
    },
    "16641": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16643": {
      "op": "DUP6"
    },
    "16644": {
      "op": "ADD"
    },
    "16645": {
      "op": "CALLDATALOAD"
    },
    "16646": {
      "op": "SWAP2"
    },
    "16647": {
      "op": "POP"
    },
    "16648": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16650": {
      "op": "DUP6"
    },
    "16651": {
      "op": "ADD"
    },
    "16652": {
      "op": "CALLDATALOAD"
    },
    "16653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16657": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16659": {
      "op": "SHL"
    },
    "16660": {
      "op": "SUB"
    },
    "16661": {
      "op": "DUP2"
    },
    "16662": {
      "op": "GT"
    },
    "16663": {
      "op": "ISZERO"
    },
    "16664": {
      "op": "PUSH2",
      "value": "0x4120"
    },
    "16667": {
      "op": "JUMPI"
    },
    "16668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16670": {
      "op": "DUP1"
    },
    "16671": {
      "op": "REVERT"
    },
    "16672": {
      "op": "JUMPDEST"
    },
    "16673": {
      "op": "PUSH2",
      "value": "0x412C"
    },
    "16676": {
      "op": "DUP8"
    },
    "16677": {
      "op": "DUP3"
    },
    "16678": {
      "op": "DUP9"
    },
    "16679": {
      "op": "ADD"
    },
    "16680": {
      "op": "PUSH2",
      "value": "0x3F77"
    },
    "16683": {
      "jump": "i",
      "op": "JUMP"
    },
    "16684": {
      "op": "JUMPDEST"
    },
    "16685": {
      "op": "SWAP2"
    },
    "16686": {
      "op": "POP"
    },
    "16687": {
      "op": "POP"
    },
    "16688": {
      "op": "SWAP3"
    },
    "16689": {
      "op": "SWAP6"
    },
    "16690": {
      "op": "SWAP2"
    },
    "16691": {
      "op": "SWAP5"
    },
    "16692": {
      "op": "POP"
    },
    "16693": {
      "op": "SWAP3"
    },
    "16694": {
      "op": "POP"
    },
    "16695": {
      "jump": "o",
      "op": "JUMP"
    },
    "16696": {
      "op": "JUMPDEST"
    },
    "16697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16699": {
      "op": "DUP1"
    },
    "16700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16702": {
      "op": "DUP1"
    },
    "16703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16707": {
      "op": "DUP7"
    },
    "16708": {
      "op": "DUP9"
    },
    "16709": {
      "op": "SUB"
    },
    "16710": {
      "op": "SLT"
    },
    "16711": {
      "op": "ISZERO"
    },
    "16712": {
      "op": "PUSH2",
      "value": "0x4150"
    },
    "16715": {
      "op": "JUMPI"
    },
    "16716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16718": {
      "op": "DUP1"
    },
    "16719": {
      "op": "REVERT"
    },
    "16720": {
      "op": "JUMPDEST"
    },
    "16721": {
      "op": "DUP6"
    },
    "16722": {
      "op": "CALLDATALOAD"
    },
    "16723": {
      "op": "PUSH2",
      "value": "0x415B"
    },
    "16726": {
      "op": "DUP2"
    },
    "16727": {
      "op": "PUSH2",
      "value": "0x4ACF"
    },
    "16730": {
      "jump": "i",
      "op": "JUMP"
    },
    "16731": {
      "op": "JUMPDEST"
    },
    "16732": {
      "op": "SWAP5"
    },
    "16733": {
      "op": "POP"
    },
    "16734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16736": {
      "op": "DUP7"
    },
    "16737": {
      "op": "ADD"
    },
    "16738": {
      "op": "CALLDATALOAD"
    },
    "16739": {
      "op": "PUSH2",
      "value": "0x416B"
    },
    "16742": {
      "op": "DUP2"
    },
    "16743": {
      "op": "PUSH2",
      "value": "0x4ACF"
    },
    "16746": {
      "jump": "i",
      "op": "JUMP"
    },
    "16747": {
      "op": "JUMPDEST"
    },
    "16748": {
      "op": "SWAP4"
    },
    "16749": {
      "op": "POP"
    },
    "16750": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16752": {
      "op": "DUP7"
    },
    "16753": {
      "op": "ADD"
    },
    "16754": {
      "op": "CALLDATALOAD"
    },
    "16755": {
      "op": "SWAP3"
    },
    "16756": {
      "op": "POP"
    },
    "16757": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16759": {
      "op": "DUP7"
    },
    "16760": {
      "op": "ADD"
    },
    "16761": {
      "op": "CALLDATALOAD"
    },
    "16762": {
      "op": "SWAP2"
    },
    "16763": {
      "op": "POP"
    },
    "16764": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16766": {
      "op": "DUP7"
    },
    "16767": {
      "op": "ADD"
    },
    "16768": {
      "op": "CALLDATALOAD"
    },
    "16769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16773": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16775": {
      "op": "SHL"
    },
    "16776": {
      "op": "SUB"
    },
    "16777": {
      "op": "DUP2"
    },
    "16778": {
      "op": "GT"
    },
    "16779": {
      "op": "ISZERO"
    },
    "16780": {
      "op": "PUSH2",
      "value": "0x4194"
    },
    "16783": {
      "op": "JUMPI"
    },
    "16784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16786": {
      "op": "DUP1"
    },
    "16787": {
      "op": "REVERT"
    },
    "16788": {
      "op": "JUMPDEST"
    },
    "16789": {
      "op": "PUSH2",
      "value": "0x40C0"
    },
    "16792": {
      "op": "DUP9"
    },
    "16793": {
      "op": "DUP3"
    },
    "16794": {
      "op": "DUP10"
    },
    "16795": {
      "op": "ADD"
    },
    "16796": {
      "op": "PUSH2",
      "value": "0x3F77"
    },
    "16799": {
      "jump": "i",
      "op": "JUMP"
    },
    "16800": {
      "op": "JUMPDEST"
    },
    "16801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16803": {
      "op": "DUP1"
    },
    "16804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16806": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16808": {
      "op": "DUP5"
    },
    "16809": {
      "op": "DUP7"
    },
    "16810": {
      "op": "SUB"
    },
    "16811": {
      "op": "SLT"
    },
    "16812": {
      "op": "ISZERO"
    },
    "16813": {
      "op": "PUSH2",
      "value": "0x41B5"
    },
    "16816": {
      "op": "JUMPI"
    },
    "16817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16819": {
      "op": "DUP1"
    },
    "16820": {
      "op": "REVERT"
    },
    "16821": {
      "op": "JUMPDEST"
    },
    "16822": {
      "op": "DUP4"
    },
    "16823": {
      "op": "CALLDATALOAD"
    },
    "16824": {
      "op": "PUSH2",
      "value": "0x41C0"
    },
    "16827": {
      "op": "DUP2"
    },
    "16828": {
      "op": "PUSH2",
      "value": "0x4ACF"
    },
    "16831": {
      "jump": "i",
      "op": "JUMP"
    },
    "16832": {
      "op": "JUMPDEST"
    },
    "16833": {
      "op": "SWAP6"
    },
    "16834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16836": {
      "op": "DUP6"
    },
    "16837": {
      "op": "ADD"
    },
    "16838": {
      "op": "CALLDATALOAD"
    },
    "16839": {
      "op": "SWAP6"
    },
    "16840": {
      "op": "POP"
    },
    "16841": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16843": {
      "op": "SWAP1"
    },
    "16844": {
      "op": "SWAP5"
    },
    "16845": {
      "op": "ADD"
    },
    "16846": {
      "op": "CALLDATALOAD"
    },
    "16847": {
      "op": "SWAP4"
    },
    "16848": {
      "op": "SWAP3"
    },
    "16849": {
      "op": "POP"
    },
    "16850": {
      "op": "POP"
    },
    "16851": {
      "op": "POP"
    },
    "16852": {
      "jump": "o",
      "op": "JUMP"
    },
    "16853": {
      "op": "JUMPDEST"
    },
    "16854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16856": {
      "op": "DUP1"
    },
    "16857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16859": {
      "op": "DUP1"
    },
    "16860": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16862": {
      "op": "DUP6"
    },
    "16863": {
      "op": "DUP8"
    },
    "16864": {
      "op": "SUB"
    },
    "16865": {
      "op": "SLT"
    },
    "16866": {
      "op": "ISZERO"
    },
    "16867": {
      "op": "PUSH2",
      "value": "0x41EB"
    },
    "16870": {
      "op": "JUMPI"
    },
    "16871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16873": {
      "op": "DUP1"
    },
    "16874": {
      "op": "REVERT"
    },
    "16875": {
      "op": "JUMPDEST"
    },
    "16876": {
      "op": "DUP5"
    },
    "16877": {
      "op": "CALLDATALOAD"
    },
    "16878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16882": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16884": {
      "op": "SHL"
    },
    "16885": {
      "op": "SUB"
    },
    "16886": {
      "op": "DUP1"
    },
    "16887": {
      "op": "DUP3"
    },
    "16888": {
      "op": "GT"
    },
    "16889": {
      "op": "ISZERO"
    },
    "16890": {
      "op": "PUSH2",
      "value": "0x4202"
    },
    "16893": {
      "op": "JUMPI"
    },
    "16894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16896": {
      "op": "DUP1"
    },
    "16897": {
      "op": "REVERT"
    },
    "16898": {
      "op": "JUMPDEST"
    },
    "16899": {
      "op": "PUSH2",
      "value": "0x420E"
    },
    "16902": {
      "op": "DUP9"
    },
    "16903": {
      "op": "DUP4"
    },
    "16904": {
      "op": "DUP10"
    },
    "16905": {
      "op": "ADD"
    },
    "16906": {
      "op": "PUSH2",
      "value": "0x3DA9"
    },
    "16909": {
      "jump": "i",
      "op": "JUMP"
    },
    "16910": {
      "op": "JUMPDEST"
    },
    "16911": {
      "op": "SWAP6"
    },
    "16912": {
      "op": "POP"
    },
    "16913": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16915": {
      "op": "DUP8"
    },
    "16916": {
      "op": "ADD"
    },
    "16917": {
      "op": "CALLDATALOAD"
    },
    "16918": {
      "op": "SWAP2"
    },
    "16919": {
      "op": "POP"
    },
    "16920": {
      "op": "DUP1"
    },
    "16921": {
      "op": "DUP3"
    },
    "16922": {
      "op": "GT"
    },
    "16923": {
      "op": "ISZERO"
    },
    "16924": {
      "op": "PUSH2",
      "value": "0x4224"
    },
    "16927": {
      "op": "JUMPI"
    },
    "16928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16930": {
      "op": "DUP1"
    },
    "16931": {
      "op": "REVERT"
    },
    "16932": {
      "op": "JUMPDEST"
    },
    "16933": {
      "op": "PUSH2",
      "value": "0x4230"
    },
    "16936": {
      "op": "DUP9"
    },
    "16937": {
      "op": "DUP4"
    },
    "16938": {
      "op": "DUP10"
    },
    "16939": {
      "op": "ADD"
    },
    "16940": {
      "op": "PUSH2",
      "value": "0x3CC7"
    },
    "16943": {
      "jump": "i",
      "op": "JUMP"
    },
    "16944": {
      "op": "JUMPDEST"
    },
    "16945": {
      "op": "SWAP5"
    },
    "16946": {
      "op": "POP"
    },
    "16947": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16949": {
      "op": "DUP8"
    },
    "16950": {
      "op": "ADD"
    },
    "16951": {
      "op": "CALLDATALOAD"
    },
    "16952": {
      "op": "SWAP2"
    },
    "16953": {
      "op": "POP"
    },
    "16954": {
      "op": "DUP1"
    },
    "16955": {
      "op": "DUP3"
    },
    "16956": {
      "op": "GT"
    },
    "16957": {
      "op": "ISZERO"
    },
    "16958": {
      "op": "PUSH2",
      "value": "0x4246"
    },
    "16961": {
      "op": "JUMPI"
    },
    "16962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16964": {
      "op": "DUP1"
    },
    "16965": {
      "op": "REVERT"
    },
    "16966": {
      "op": "JUMPDEST"
    },
    "16967": {
      "op": "PUSH2",
      "value": "0x4252"
    },
    "16970": {
      "op": "DUP9"
    },
    "16971": {
      "op": "DUP4"
    },
    "16972": {
      "op": "DUP10"
    },
    "16973": {
      "op": "ADD"
    },
    "16974": {
      "op": "PUSH2",
      "value": "0x3E91"
    },
    "16977": {
      "jump": "i",
      "op": "JUMP"
    },
    "16978": {
      "op": "JUMPDEST"
    },
    "16979": {
      "op": "SWAP4"
    },
    "16980": {
      "op": "POP"
    },
    "16981": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16983": {
      "op": "DUP8"
    },
    "16984": {
      "op": "ADD"
    },
    "16985": {
      "op": "CALLDATALOAD"
    },
    "16986": {
      "op": "SWAP2"
    },
    "16987": {
      "op": "POP"
    },
    "16988": {
      "op": "DUP1"
    },
    "16989": {
      "op": "DUP3"
    },
    "16990": {
      "op": "GT"
    },
    "16991": {
      "op": "ISZERO"
    },
    "16992": {
      "op": "PUSH2",
      "value": "0x4268"
    },
    "16995": {
      "op": "JUMPI"
    },
    "16996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16998": {
      "op": "DUP1"
    },
    "16999": {
      "op": "REVERT"
    },
    "17000": {
      "op": "JUMPDEST"
    },
    "17001": {
      "op": "POP"
    },
    "17002": {
      "op": "PUSH2",
      "value": "0x412C"
    },
    "17005": {
      "op": "DUP8"
    },
    "17006": {
      "op": "DUP3"
    },
    "17007": {
      "op": "DUP9"
    },
    "17008": {
      "op": "ADD"
    },
    "17009": {
      "op": "PUSH2",
      "value": "0x3E91"
    },
    "17012": {
      "jump": "i",
      "op": "JUMP"
    },
    "17013": {
      "op": "JUMPDEST"
    },
    "17014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17016": {
      "op": "DUP1"
    },
    "17017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17019": {
      "op": "DUP1"
    },
    "17020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17024": {
      "op": "DUP7"
    },
    "17025": {
      "op": "DUP9"
    },
    "17026": {
      "op": "SUB"
    },
    "17027": {
      "op": "SLT"
    },
    "17028": {
      "op": "ISZERO"
    },
    "17029": {
      "op": "PUSH2",
      "value": "0x428D"
    },
    "17032": {
      "op": "JUMPI"
    },
    "17033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17035": {
      "op": "DUP1"
    },
    "17036": {
      "op": "REVERT"
    },
    "17037": {
      "op": "JUMPDEST"
    },
    "17038": {
      "op": "DUP6"
    },
    "17039": {
      "op": "CALLDATALOAD"
    },
    "17040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17044": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17046": {
      "op": "SHL"
    },
    "17047": {
      "op": "SUB"
    },
    "17048": {
      "op": "DUP1"
    },
    "17049": {
      "op": "DUP3"
    },
    "17050": {
      "op": "GT"
    },
    "17051": {
      "op": "ISZERO"
    },
    "17052": {
      "op": "PUSH2",
      "value": "0x42A4"
    },
    "17055": {
      "op": "JUMPI"
    },
    "17056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17058": {
      "op": "DUP1"
    },
    "17059": {
      "op": "REVERT"
    },
    "17060": {
      "op": "JUMPDEST"
    },
    "17061": {
      "op": "PUSH2",
      "value": "0x42B0"
    },
    "17064": {
      "op": "DUP10"
    },
    "17065": {
      "op": "DUP4"
    },
    "17066": {
      "op": "DUP11"
    },
    "17067": {
      "op": "ADD"
    },
    "17068": {
      "op": "PUSH2",
      "value": "0x3DA9"
    },
    "17071": {
      "jump": "i",
      "op": "JUMP"
    },
    "17072": {
      "op": "JUMPDEST"
    },
    "17073": {
      "op": "SWAP7"
    },
    "17074": {
      "op": "POP"
    },
    "17075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17077": {
      "op": "DUP9"
    },
    "17078": {
      "op": "ADD"
    },
    "17079": {
      "op": "CALLDATALOAD"
    },
    "17080": {
      "op": "SWAP2"
    },
    "17081": {
      "op": "POP"
    },
    "17082": {
      "op": "DUP1"
    },
    "17083": {
      "op": "DUP3"
    },
    "17084": {
      "op": "GT"
    },
    "17085": {
      "op": "ISZERO"
    },
    "17086": {
      "op": "PUSH2",
      "value": "0x42C6"
    },
    "17089": {
      "op": "JUMPI"
    },
    "17090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17092": {
      "op": "DUP1"
    },
    "17093": {
      "op": "REVERT"
    },
    "17094": {
      "op": "JUMPDEST"
    },
    "17095": {
      "op": "PUSH2",
      "value": "0x42D2"
    },
    "17098": {
      "op": "DUP10"
    },
    "17099": {
      "op": "DUP4"
    },
    "17100": {
      "op": "DUP11"
    },
    "17101": {
      "op": "ADD"
    },
    "17102": {
      "op": "PUSH2",
      "value": "0x3CC7"
    },
    "17105": {
      "jump": "i",
      "op": "JUMP"
    },
    "17106": {
      "op": "JUMPDEST"
    },
    "17107": {
      "op": "SWAP6"
    },
    "17108": {
      "op": "POP"
    },
    "17109": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17111": {
      "op": "DUP9"
    },
    "17112": {
      "op": "ADD"
    },
    "17113": {
      "op": "CALLDATALOAD"
    },
    "17114": {
      "op": "SWAP2"
    },
    "17115": {
      "op": "POP"
    },
    "17116": {
      "op": "DUP1"
    },
    "17117": {
      "op": "DUP3"
    },
    "17118": {
      "op": "GT"
    },
    "17119": {
      "op": "ISZERO"
    },
    "17120": {
      "op": "PUSH2",
      "value": "0x42E8"
    },
    "17123": {
      "op": "JUMPI"
    },
    "17124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17126": {
      "op": "DUP1"
    },
    "17127": {
      "op": "REVERT"
    },
    "17128": {
      "op": "JUMPDEST"
    },
    "17129": {
      "op": "PUSH2",
      "value": "0x42F4"
    },
    "17132": {
      "op": "DUP10"
    },
    "17133": {
      "op": "DUP4"
    },
    "17134": {
      "op": "DUP11"
    },
    "17135": {
      "op": "ADD"
    },
    "17136": {
      "op": "PUSH2",
      "value": "0x3E91"
    },
    "17139": {
      "jump": "i",
      "op": "JUMP"
    },
    "17140": {
      "op": "JUMPDEST"
    },
    "17141": {
      "op": "SWAP5"
    },
    "17142": {
      "op": "POP"
    },
    "17143": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17145": {
      "op": "DUP9"
    },
    "17146": {
      "op": "ADD"
    },
    "17147": {
      "op": "CALLDATALOAD"
    },
    "17148": {
      "op": "SWAP2"
    },
    "17149": {
      "op": "POP"
    },
    "17150": {
      "op": "DUP1"
    },
    "17151": {
      "op": "DUP3"
    },
    "17152": {
      "op": "GT"
    },
    "17153": {
      "op": "ISZERO"
    },
    "17154": {
      "op": "PUSH2",
      "value": "0x430A"
    },
    "17157": {
      "op": "JUMPI"
    },
    "17158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17160": {
      "op": "DUP1"
    },
    "17161": {
      "op": "REVERT"
    },
    "17162": {
      "op": "JUMPDEST"
    },
    "17163": {
      "op": "PUSH2",
      "value": "0x4316"
    },
    "17166": {
      "op": "DUP10"
    },
    "17167": {
      "op": "DUP4"
    },
    "17168": {
      "op": "DUP11"
    },
    "17169": {
      "op": "ADD"
    },
    "17170": {
      "op": "PUSH2",
      "value": "0x3E91"
    },
    "17173": {
      "jump": "i",
      "op": "JUMP"
    },
    "17174": {
      "op": "JUMPDEST"
    },
    "17175": {
      "op": "SWAP4"
    },
    "17176": {
      "op": "POP"
    },
    "17177": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17179": {
      "op": "DUP9"
    },
    "17180": {
      "op": "ADD"
    },
    "17181": {
      "op": "CALLDATALOAD"
    },
    "17182": {
      "op": "SWAP2"
    },
    "17183": {
      "op": "POP"
    },
    "17184": {
      "op": "DUP1"
    },
    "17185": {
      "op": "DUP3"
    },
    "17186": {
      "op": "GT"
    },
    "17187": {
      "op": "ISZERO"
    },
    "17188": {
      "op": "PUSH2",
      "value": "0x432C"
    },
    "17191": {
      "op": "JUMPI"
    },
    "17192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17194": {
      "op": "DUP1"
    },
    "17195": {
      "op": "REVERT"
    },
    "17196": {
      "op": "JUMPDEST"
    },
    "17197": {
      "op": "POP"
    },
    "17198": {
      "op": "PUSH2",
      "value": "0x40C0"
    },
    "17201": {
      "op": "DUP9"
    },
    "17202": {
      "op": "DUP3"
    },
    "17203": {
      "op": "DUP10"
    },
    "17204": {
      "op": "ADD"
    },
    "17205": {
      "op": "PUSH2",
      "value": "0x3E91"
    },
    "17208": {
      "jump": "i",
      "op": "JUMP"
    },
    "17209": {
      "op": "JUMPDEST"
    },
    "17210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17212": {
      "op": "DUP1"
    },
    "17213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17215": {
      "op": "DUP1"
    },
    "17216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17218": {
      "op": "DUP1"
    },
    "17219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17221": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17223": {
      "op": "DUP9"
    },
    "17224": {
      "op": "DUP11"
    },
    "17225": {
      "op": "SUB"
    },
    "17226": {
      "op": "SLT"
    },
    "17227": {
      "op": "ISZERO"
    },
    "17228": {
      "op": "PUSH2",
      "value": "0x4354"
    },
    "17231": {
      "op": "JUMPI"
    },
    "17232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17234": {
      "op": "DUP1"
    },
    "17235": {
      "op": "REVERT"
    },
    "17236": {
      "op": "JUMPDEST"
    },
    "17237": {
      "op": "DUP8"
    },
    "17238": {
      "op": "CALLDATALOAD"
    },
    "17239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17243": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17245": {
      "op": "SHL"
    },
    "17246": {
      "op": "SUB"
    },
    "17247": {
      "op": "DUP1"
    },
    "17248": {
      "op": "DUP3"
    },
    "17249": {
      "op": "GT"
    },
    "17250": {
      "op": "ISZERO"
    },
    "17251": {
      "op": "PUSH2",
      "value": "0x436B"
    },
    "17254": {
      "op": "JUMPI"
    },
    "17255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17257": {
      "op": "DUP1"
    },
    "17258": {
      "op": "REVERT"
    },
    "17259": {
      "op": "JUMPDEST"
    },
    "17260": {
      "op": "PUSH2",
      "value": "0x4377"
    },
    "17263": {
      "op": "DUP12"
    },
    "17264": {
      "op": "DUP4"
    },
    "17265": {
      "op": "DUP13"
    },
    "17266": {
      "op": "ADD"
    },
    "17267": {
      "op": "PUSH2",
      "value": "0x3DA9"
    },
    "17270": {
      "jump": "i",
      "op": "JUMP"
    },
    "17271": {
      "op": "JUMPDEST"
    },
    "17272": {
      "op": "SWAP9"
    },
    "17273": {
      "op": "POP"
    },
    "17274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17276": {
      "op": "DUP11"
    },
    "17277": {
      "op": "ADD"
    },
    "17278": {
      "op": "CALLDATALOAD"
    },
    "17279": {
      "op": "SWAP2"
    },
    "17280": {
      "op": "POP"
    },
    "17281": {
      "op": "DUP1"
    },
    "17282": {
      "op": "DUP3"
    },
    "17283": {
      "op": "GT"
    },
    "17284": {
      "op": "ISZERO"
    },
    "17285": {
      "op": "PUSH2",
      "value": "0x438D"
    },
    "17288": {
      "op": "JUMPI"
    },
    "17289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17291": {
      "op": "DUP1"
    },
    "17292": {
      "op": "REVERT"
    },
    "17293": {
      "op": "JUMPDEST"
    },
    "17294": {
      "op": "PUSH2",
      "value": "0x4399"
    },
    "17297": {
      "op": "DUP12"
    },
    "17298": {
      "op": "DUP4"
    },
    "17299": {
      "op": "DUP13"
    },
    "17300": {
      "op": "ADD"
    },
    "17301": {
      "op": "PUSH2",
      "value": "0x3CC7"
    },
    "17304": {
      "jump": "i",
      "op": "JUMP"
    },
    "17305": {
      "op": "JUMPDEST"
    },
    "17306": {
      "op": "SWAP8"
    },
    "17307": {
      "op": "POP"
    },
    "17308": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17310": {
      "op": "DUP11"
    },
    "17311": {
      "op": "ADD"
    },
    "17312": {
      "op": "CALLDATALOAD"
    },
    "17313": {
      "op": "SWAP2"
    },
    "17314": {
      "op": "POP"
    },
    "17315": {
      "op": "DUP1"
    },
    "17316": {
      "op": "DUP3"
    },
    "17317": {
      "op": "GT"
    },
    "17318": {
      "op": "ISZERO"
    },
    "17319": {
      "op": "PUSH2",
      "value": "0x43AF"
    },
    "17322": {
      "op": "JUMPI"
    },
    "17323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17325": {
      "op": "DUP1"
    },
    "17326": {
      "op": "REVERT"
    },
    "17327": {
      "op": "JUMPDEST"
    },
    "17328": {
      "op": "PUSH2",
      "value": "0x43BB"
    },
    "17331": {
      "op": "DUP12"
    },
    "17332": {
      "op": "DUP4"
    },
    "17333": {
      "op": "DUP13"
    },
    "17334": {
      "op": "ADD"
    },
    "17335": {
      "op": "PUSH2",
      "value": "0x3E91"
    },
    "17338": {
      "jump": "i",
      "op": "JUMP"
    },
    "17339": {
      "op": "JUMPDEST"
    },
    "17340": {
      "op": "SWAP7"
    },
    "17341": {
      "op": "POP"
    },
    "17342": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17344": {
      "op": "DUP11"
    },
    "17345": {
      "op": "ADD"
    },
    "17346": {
      "op": "CALLDATALOAD"
    },
    "17347": {
      "op": "SWAP2"
    },
    "17348": {
      "op": "POP"
    },
    "17349": {
      "op": "DUP1"
    },
    "17350": {
      "op": "DUP3"
    },
    "17351": {
      "op": "GT"
    },
    "17352": {
      "op": "ISZERO"
    },
    "17353": {
      "op": "PUSH2",
      "value": "0x43D1"
    },
    "17356": {
      "op": "JUMPI"
    },
    "17357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17359": {
      "op": "DUP1"
    },
    "17360": {
      "op": "REVERT"
    },
    "17361": {
      "op": "JUMPDEST"
    },
    "17362": {
      "op": "PUSH2",
      "value": "0x43DD"
    },
    "17365": {
      "op": "DUP12"
    },
    "17366": {
      "op": "DUP4"
    },
    "17367": {
      "op": "DUP13"
    },
    "17368": {
      "op": "ADD"
    },
    "17369": {
      "op": "PUSH2",
      "value": "0x3E91"
    },
    "17372": {
      "jump": "i",
      "op": "JUMP"
    },
    "17373": {
      "op": "JUMPDEST"
    },
    "17374": {
      "op": "SWAP6"
    },
    "17375": {
      "op": "POP"
    },
    "17376": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17378": {
      "op": "DUP11"
    },
    "17379": {
      "op": "ADD"
    },
    "17380": {
      "op": "CALLDATALOAD"
    },
    "17381": {
      "op": "SWAP2"
    },
    "17382": {
      "op": "POP"
    },
    "17383": {
      "op": "DUP1"
    },
    "17384": {
      "op": "DUP3"
    },
    "17385": {
      "op": "GT"
    },
    "17386": {
      "op": "ISZERO"
    },
    "17387": {
      "op": "PUSH2",
      "value": "0x43F3"
    },
    "17390": {
      "op": "JUMPI"
    },
    "17391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17393": {
      "op": "DUP1"
    },
    "17394": {
      "op": "REVERT"
    },
    "17395": {
      "op": "JUMPDEST"
    },
    "17396": {
      "op": "PUSH2",
      "value": "0x43FF"
    },
    "17399": {
      "op": "DUP12"
    },
    "17400": {
      "op": "DUP4"
    },
    "17401": {
      "op": "DUP13"
    },
    "17402": {
      "op": "ADD"
    },
    "17403": {
      "op": "PUSH2",
      "value": "0x3EF1"
    },
    "17406": {
      "jump": "i",
      "op": "JUMP"
    },
    "17407": {
      "op": "JUMPDEST"
    },
    "17408": {
      "op": "SWAP5"
    },
    "17409": {
      "op": "POP"
    },
    "17410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17412": {
      "op": "DUP11"
    },
    "17413": {
      "op": "ADD"
    },
    "17414": {
      "op": "CALLDATALOAD"
    },
    "17415": {
      "op": "SWAP2"
    },
    "17416": {
      "op": "POP"
    },
    "17417": {
      "op": "DUP1"
    },
    "17418": {
      "op": "DUP3"
    },
    "17419": {
      "op": "GT"
    },
    "17420": {
      "op": "ISZERO"
    },
    "17421": {
      "op": "PUSH2",
      "value": "0x4415"
    },
    "17424": {
      "op": "JUMPI"
    },
    "17425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17427": {
      "op": "DUP1"
    },
    "17428": {
      "op": "REVERT"
    },
    "17429": {
      "op": "JUMPDEST"
    },
    "17430": {
      "op": "PUSH2",
      "value": "0x4421"
    },
    "17433": {
      "op": "DUP12"
    },
    "17434": {
      "op": "DUP4"
    },
    "17435": {
      "op": "DUP13"
    },
    "17436": {
      "op": "ADD"
    },
    "17437": {
      "op": "PUSH2",
      "value": "0x3D42"
    },
    "17440": {
      "jump": "i",
      "op": "JUMP"
    },
    "17441": {
      "op": "JUMPDEST"
    },
    "17442": {
      "op": "SWAP4"
    },
    "17443": {
      "op": "POP"
    },
    "17444": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "17446": {
      "op": "DUP11"
    },
    "17447": {
      "op": "ADD"
    },
    "17448": {
      "op": "CALLDATALOAD"
    },
    "17449": {
      "op": "SWAP2"
    },
    "17450": {
      "op": "POP"
    },
    "17451": {
      "op": "DUP1"
    },
    "17452": {
      "op": "DUP3"
    },
    "17453": {
      "op": "GT"
    },
    "17454": {
      "op": "ISZERO"
    },
    "17455": {
      "op": "PUSH2",
      "value": "0x4437"
    },
    "17458": {
      "op": "JUMPI"
    },
    "17459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17461": {
      "op": "DUP1"
    },
    "17462": {
      "op": "REVERT"
    },
    "17463": {
      "op": "JUMPDEST"
    },
    "17464": {
      "op": "POP"
    },
    "17465": {
      "op": "PUSH2",
      "value": "0x4444"
    },
    "17468": {
      "op": "DUP11"
    },
    "17469": {
      "op": "DUP3"
    },
    "17470": {
      "op": "DUP12"
    },
    "17471": {
      "op": "ADD"
    },
    "17472": {
      "op": "PUSH2",
      "value": "0x3E24"
    },
    "17475": {
      "jump": "i",
      "op": "JUMP"
    },
    "17476": {
      "op": "JUMPDEST"
    },
    "17477": {
      "op": "SWAP2"
    },
    "17478": {
      "op": "POP"
    },
    "17479": {
      "op": "POP"
    },
    "17480": {
      "op": "SWAP3"
    },
    "17481": {
      "op": "SWAP6"
    },
    "17482": {
      "op": "SWAP9"
    },
    "17483": {
      "op": "SWAP2"
    },
    "17484": {
      "op": "SWAP5"
    },
    "17485": {
      "op": "SWAP8"
    },
    "17486": {
      "op": "POP"
    },
    "17487": {
      "op": "SWAP3"
    },
    "17488": {
      "op": "SWAP6"
    },
    "17489": {
      "op": "POP"
    },
    "17490": {
      "jump": "o",
      "op": "JUMP"
    },
    "17491": {
      "op": "JUMPDEST"
    },
    "17492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17494": {
      "op": "DUP1"
    },
    "17495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17497": {
      "op": "DUP1"
    },
    "17498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17500": {
      "op": "DUP1"
    },
    "17501": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "17503": {
      "op": "DUP8"
    },
    "17504": {
      "op": "DUP10"
    },
    "17505": {
      "op": "SUB"
    },
    "17506": {
      "op": "SLT"
    },
    "17507": {
      "op": "ISZERO"
    },
    "17508": {
      "op": "PUSH2",
      "value": "0x446C"
    },
    "17511": {
      "op": "JUMPI"
    },
    "17512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17514": {
      "op": "DUP1"
    },
    "17515": {
      "op": "REVERT"
    },
    "17516": {
      "op": "JUMPDEST"
    },
    "17517": {
      "op": "DUP7"
    },
    "17518": {
      "op": "CALLDATALOAD"
    },
    "17519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17523": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17525": {
      "op": "SHL"
    },
    "17526": {
      "op": "SUB"
    },
    "17527": {
      "op": "DUP1"
    },
    "17528": {
      "op": "DUP3"
    },
    "17529": {
      "op": "GT"
    },
    "17530": {
      "op": "ISZERO"
    },
    "17531": {
      "op": "PUSH2",
      "value": "0x4483"
    },
    "17534": {
      "op": "JUMPI"
    },
    "17535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17537": {
      "op": "DUP1"
    },
    "17538": {
      "op": "REVERT"
    },
    "17539": {
      "op": "JUMPDEST"
    },
    "17540": {
      "op": "PUSH2",
      "value": "0x448F"
    },
    "17543": {
      "op": "DUP11"
    },
    "17544": {
      "op": "DUP4"
    },
    "17545": {
      "op": "DUP12"
    },
    "17546": {
      "op": "ADD"
    },
    "17547": {
      "op": "PUSH2",
      "value": "0x3DA9"
    },
    "17550": {
      "jump": "i",
      "op": "JUMP"
    },
    "17551": {
      "op": "JUMPDEST"
    },
    "17552": {
      "op": "SWAP8"
    },
    "17553": {
      "op": "POP"
    },
    "17554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17556": {
      "op": "DUP10"
    },
    "17557": {
      "op": "ADD"
    },
    "17558": {
      "op": "CALLDATALOAD"
    },
    "17559": {
      "op": "SWAP2"
    },
    "17560": {
      "op": "POP"
    },
    "17561": {
      "op": "DUP1"
    },
    "17562": {
      "op": "DUP3"
    },
    "17563": {
      "op": "GT"
    },
    "17564": {
      "op": "ISZERO"
    },
    "17565": {
      "op": "PUSH2",
      "value": "0x44A5"
    },
    "17568": {
      "op": "JUMPI"
    },
    "17569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17571": {
      "op": "DUP1"
    },
    "17572": {
      "op": "REVERT"
    },
    "17573": {
      "op": "JUMPDEST"
    },
    "17574": {
      "op": "PUSH2",
      "value": "0x44B1"
    },
    "17577": {
      "op": "DUP11"
    },
    "17578": {
      "op": "DUP4"
    },
    "17579": {
      "op": "DUP12"
    },
    "17580": {
      "op": "ADD"
    },
    "17581": {
      "op": "PUSH2",
      "value": "0x3CC7"
    },
    "17584": {
      "jump": "i",
      "op": "JUMP"
    },
    "17585": {
      "op": "JUMPDEST"
    },
    "17586": {
      "op": "SWAP7"
    },
    "17587": {
      "op": "POP"
    },
    "17588": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17590": {
      "op": "DUP10"
    },
    "17591": {
      "op": "ADD"
    },
    "17592": {
      "op": "CALLDATALOAD"
    },
    "17593": {
      "op": "SWAP2"
    },
    "17594": {
      "op": "POP"
    },
    "17595": {
      "op": "DUP1"
    },
    "17596": {
      "op": "DUP3"
    },
    "17597": {
      "op": "GT"
    },
    "17598": {
      "op": "ISZERO"
    },
    "17599": {
      "op": "PUSH2",
      "value": "0x44C7"
    },
    "17602": {
      "op": "JUMPI"
    },
    "17603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17605": {
      "op": "DUP1"
    },
    "17606": {
      "op": "REVERT"
    },
    "17607": {
      "op": "JUMPDEST"
    },
    "17608": {
      "op": "PUSH2",
      "value": "0x44D3"
    },
    "17611": {
      "op": "DUP11"
    },
    "17612": {
      "op": "DUP4"
    },
    "17613": {
      "op": "DUP12"
    },
    "17614": {
      "op": "ADD"
    },
    "17615": {
      "op": "PUSH2",
      "value": "0x3E91"
    },
    "17618": {
      "jump": "i",
      "op": "JUMP"
    },
    "17619": {
      "op": "JUMPDEST"
    },
    "17620": {
      "op": "SWAP6"
    },
    "17621": {
      "op": "POP"
    },
    "17622": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17624": {
      "op": "DUP10"
    },
    "17625": {
      "op": "ADD"
    },
    "17626": {
      "op": "CALLDATALOAD"
    },
    "17627": {
      "op": "SWAP2"
    },
    "17628": {
      "op": "POP"
    },
    "17629": {
      "op": "DUP1"
    },
    "17630": {
      "op": "DUP3"
    },
    "17631": {
      "op": "GT"
    },
    "17632": {
      "op": "ISZERO"
    },
    "17633": {
      "op": "PUSH2",
      "value": "0x44E9"
    },
    "17636": {
      "op": "JUMPI"
    },
    "17637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17639": {
      "op": "DUP1"
    },
    "17640": {
      "op": "REVERT"
    },
    "17641": {
      "op": "JUMPDEST"
    },
    "17642": {
      "op": "PUSH2",
      "value": "0x44F5"
    },
    "17645": {
      "op": "DUP11"
    },
    "17646": {
      "op": "DUP4"
    },
    "17647": {
      "op": "DUP12"
    },
    "17648": {
      "op": "ADD"
    },
    "17649": {
      "op": "PUSH2",
      "value": "0x3E91"
    },
    "17652": {
      "jump": "i",
      "op": "JUMP"
    },
    "17653": {
      "op": "JUMPDEST"
    },
    "17654": {
      "op": "SWAP5"
    },
    "17655": {
      "op": "POP"
    },
    "17656": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17658": {
      "op": "DUP10"
    },
    "17659": {
      "op": "ADD"
    },
    "17660": {
      "op": "CALLDATALOAD"
    },
    "17661": {
      "op": "SWAP2"
    },
    "17662": {
      "op": "POP"
    },
    "17663": {
      "op": "DUP1"
    },
    "17664": {
      "op": "DUP3"
    },
    "17665": {
      "op": "GT"
    },
    "17666": {
      "op": "ISZERO"
    },
    "17667": {
      "op": "PUSH2",
      "value": "0x450B"
    },
    "17670": {
      "op": "JUMPI"
    },
    "17671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17673": {
      "op": "DUP1"
    },
    "17674": {
      "op": "REVERT"
    },
    "17675": {
      "op": "JUMPDEST"
    },
    "17676": {
      "op": "PUSH2",
      "value": "0x4517"
    },
    "17679": {
      "op": "DUP11"
    },
    "17680": {
      "op": "DUP4"
    },
    "17681": {
      "op": "DUP12"
    },
    "17682": {
      "op": "ADD"
    },
    "17683": {
      "op": "PUSH2",
      "value": "0x3EF1"
    },
    "17686": {
      "jump": "i",
      "op": "JUMP"
    },
    "17687": {
      "op": "JUMPDEST"
    },
    "17688": {
      "op": "SWAP4"
    },
    "17689": {
      "op": "POP"
    },
    "17690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17692": {
      "op": "DUP10"
    },
    "17693": {
      "op": "ADD"
    },
    "17694": {
      "op": "CALLDATALOAD"
    },
    "17695": {
      "op": "SWAP2"
    },
    "17696": {
      "op": "POP"
    },
    "17697": {
      "op": "DUP1"
    },
    "17698": {
      "op": "DUP3"
    },
    "17699": {
      "op": "GT"
    },
    "17700": {
      "op": "ISZERO"
    },
    "17701": {
      "op": "PUSH2",
      "value": "0x452D"
    },
    "17704": {
      "op": "JUMPI"
    },
    "17705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17707": {
      "op": "DUP1"
    },
    "17708": {
      "op": "REVERT"
    },
    "17709": {
      "op": "JUMPDEST"
    },
    "17710": {
      "op": "POP"
    },
    "17711": {
      "op": "PUSH2",
      "value": "0x453A"
    },
    "17714": {
      "op": "DUP10"
    },
    "17715": {
      "op": "DUP3"
    },
    "17716": {
      "op": "DUP11"
    },
    "17717": {
      "op": "ADD"
    },
    "17718": {
      "op": "PUSH2",
      "value": "0x3E91"
    },
    "17721": {
      "jump": "i",
      "op": "JUMP"
    },
    "17722": {
      "op": "JUMPDEST"
    },
    "17723": {
      "op": "SWAP2"
    },
    "17724": {
      "op": "POP"
    },
    "17725": {
      "op": "POP"
    },
    "17726": {
      "op": "SWAP3"
    },
    "17727": {
      "op": "SWAP6"
    },
    "17728": {
      "op": "POP"
    },
    "17729": {
      "op": "SWAP3"
    },
    "17730": {
      "op": "SWAP6"
    },
    "17731": {
      "op": "POP"
    },
    "17732": {
      "op": "SWAP3"
    },
    "17733": {
      "op": "SWAP6"
    },
    "17734": {
      "jump": "o",
      "op": "JUMP"
    },
    "17735": {
      "op": "JUMPDEST"
    },
    "17736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17740": {
      "op": "DUP3"
    },
    "17741": {
      "op": "DUP5"
    },
    "17742": {
      "op": "SUB"
    },
    "17743": {
      "op": "SLT"
    },
    "17744": {
      "op": "ISZERO"
    },
    "17745": {
      "op": "PUSH2",
      "value": "0x4559"
    },
    "17748": {
      "op": "JUMPI"
    },
    "17749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17751": {
      "op": "DUP1"
    },
    "17752": {
      "op": "REVERT"
    },
    "17753": {
      "op": "JUMPDEST"
    },
    "17754": {
      "op": "DUP2"
    },
    "17755": {
      "op": "CALLDATALOAD"
    },
    "17756": {
      "op": "PUSH2",
      "value": "0x3AF7"
    },
    "17759": {
      "op": "DUP2"
    },
    "17760": {
      "op": "PUSH2",
      "value": "0x4AE4"
    },
    "17763": {
      "jump": "i",
      "op": "JUMP"
    },
    "17764": {
      "op": "JUMPDEST"
    },
    "17765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17769": {
      "op": "DUP3"
    },
    "17770": {
      "op": "DUP5"
    },
    "17771": {
      "op": "SUB"
    },
    "17772": {
      "op": "SLT"
    },
    "17773": {
      "op": "ISZERO"
    },
    "17774": {
      "op": "PUSH2",
      "value": "0x4576"
    },
    "17777": {
      "op": "JUMPI"
    },
    "17778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17780": {
      "op": "DUP1"
    },
    "17781": {
      "op": "REVERT"
    },
    "17782": {
      "op": "JUMPDEST"
    },
    "17783": {
      "op": "DUP2"
    },
    "17784": {
      "op": "MLOAD"
    },
    "17785": {
      "op": "PUSH2",
      "value": "0x3AF7"
    },
    "17788": {
      "op": "DUP2"
    },
    "17789": {
      "op": "PUSH2",
      "value": "0x4AE4"
    },
    "17792": {
      "jump": "i",
      "op": "JUMP"
    },
    "17793": {
      "op": "JUMPDEST"
    },
    "17794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17798": {
      "op": "DUP3"
    },
    "17799": {
      "op": "DUP5"
    },
    "17800": {
      "op": "SUB"
    },
    "17801": {
      "op": "SLT"
    },
    "17802": {
      "op": "ISZERO"
    },
    "17803": {
      "op": "PUSH2",
      "value": "0x4593"
    },
    "17806": {
      "op": "JUMPI"
    },
    "17807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17809": {
      "op": "DUP1"
    },
    "17810": {
      "op": "REVERT"
    },
    "17811": {
      "op": "JUMPDEST"
    },
    "17812": {
      "op": "PUSH2",
      "value": "0x3AF7"
    },
    "17815": {
      "op": "DUP3"
    },
    "17816": {
      "op": "PUSH2",
      "value": "0x3F5A"
    },
    "17819": {
      "jump": "i",
      "op": "JUMP"
    },
    "17820": {
      "op": "JUMPDEST"
    },
    "17821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17825": {
      "op": "DUP3"
    },
    "17826": {
      "op": "DUP5"
    },
    "17827": {
      "op": "SUB"
    },
    "17828": {
      "op": "SLT"
    },
    "17829": {
      "op": "ISZERO"
    },
    "17830": {
      "op": "PUSH2",
      "value": "0x45AE"
    },
    "17833": {
      "op": "JUMPI"
    },
    "17834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17836": {
      "op": "DUP1"
    },
    "17837": {
      "op": "REVERT"
    },
    "17838": {
      "op": "JUMPDEST"
    },
    "17839": {
      "op": "POP"
    },
    "17840": {
      "op": "CALLDATALOAD"
    },
    "17841": {
      "op": "SWAP2"
    },
    "17842": {
      "op": "SWAP1"
    },
    "17843": {
      "op": "POP"
    },
    "17844": {
      "jump": "o",
      "op": "JUMP"
    },
    "17845": {
      "op": "JUMPDEST"
    },
    "17846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17848": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17850": {
      "op": "DUP3"
    },
    "17851": {
      "op": "DUP5"
    },
    "17852": {
      "op": "SUB"
    },
    "17853": {
      "op": "SLT"
    },
    "17854": {
      "op": "ISZERO"
    },
    "17855": {
      "op": "PUSH2",
      "value": "0x45C7"
    },
    "17858": {
      "op": "JUMPI"
    },
    "17859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17861": {
      "op": "DUP1"
    },
    "17862": {
      "op": "REVERT"
    },
    "17863": {
      "op": "JUMPDEST"
    },
    "17864": {
      "op": "DUP2"
    },
    "17865": {
      "op": "MLOAD"
    },
    "17866": {
      "op": "PUSH2",
      "value": "0x3AF7"
    },
    "17869": {
      "op": "DUP2"
    },
    "17870": {
      "op": "PUSH2",
      "value": "0x4AF2"
    },
    "17873": {
      "jump": "i",
      "op": "JUMP"
    },
    "17874": {
      "op": "JUMPDEST"
    },
    "17875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17877": {
      "op": "DUP2"
    },
    "17878": {
      "op": "MLOAD"
    },
    "17879": {
      "op": "DUP1"
    },
    "17880": {
      "op": "DUP5"
    },
    "17881": {
      "op": "MSTORE"
    },
    "17882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17884": {
      "op": "DUP1"
    },
    "17885": {
      "op": "DUP6"
    },
    "17886": {
      "op": "ADD"
    },
    "17887": {
      "op": "SWAP5"
    },
    "17888": {
      "op": "POP"
    },
    "17889": {
      "op": "DUP1"
    },
    "17890": {
      "op": "DUP5"
    },
    "17891": {
      "op": "ADD"
    },
    "17892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17894": {
      "op": "JUMPDEST"
    },
    "17895": {
      "op": "DUP4"
    },
    "17896": {
      "op": "DUP2"
    },
    "17897": {
      "op": "LT"
    },
    "17898": {
      "op": "ISZERO"
    },
    "17899": {
      "op": "PUSH2",
      "value": "0x4602"
    },
    "17902": {
      "op": "JUMPI"
    },
    "17903": {
      "op": "DUP2"
    },
    "17904": {
      "op": "MLOAD"
    },
    "17905": {
      "op": "DUP8"
    },
    "17906": {
      "op": "MSTORE"
    },
    "17907": {
      "op": "SWAP6"
    },
    "17908": {
      "op": "DUP3"
    },
    "17909": {
      "op": "ADD"
    },
    "17910": {
      "op": "SWAP6"
    },
    "17911": {
      "op": "SWAP1"
    },
    "17912": {
      "op": "DUP3"
    },
    "17913": {
      "op": "ADD"
    },
    "17914": {
      "op": "SWAP1"
    },
    "17915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17917": {
      "op": "ADD"
    },
    "17918": {
      "op": "PUSH2",
      "value": "0x45E6"
    },
    "17921": {
      "op": "JUMP"
    },
    "17922": {
      "op": "JUMPDEST"
    },
    "17923": {
      "op": "POP"
    },
    "17924": {
      "op": "SWAP5"
    },
    "17925": {
      "op": "SWAP6"
    },
    "17926": {
      "op": "SWAP5"
    },
    "17927": {
      "op": "POP"
    },
    "17928": {
      "op": "POP"
    },
    "17929": {
      "op": "POP"
    },
    "17930": {
      "op": "POP"
    },
    "17931": {
      "op": "POP"
    },
    "17932": {
      "jump": "o",
      "op": "JUMP"
    },
    "17933": {
      "op": "JUMPDEST"
    },
    "17934": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17936": {
      "op": "SWAP4"
    },
    "17937": {
      "op": "SWAP1"
    },
    "17938": {
      "op": "SWAP4"
    },
    "17939": {
      "op": "SHL"
    },
    "17940": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "17953": {
      "op": "NOT"
    },
    "17954": {
      "op": "AND"
    },
    "17955": {
      "op": "DUP4"
    },
    "17956": {
      "op": "MSTORE"
    },
    "17957": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "17959": {
      "op": "DUP4"
    },
    "17960": {
      "op": "ADD"
    },
    "17961": {
      "op": "SWAP2"
    },
    "17962": {
      "op": "SWAP1"
    },
    "17963": {
      "op": "SWAP2"
    },
    "17964": {
      "op": "MSTORE"
    },
    "17965": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "17967": {
      "op": "DUP3"
    },
    "17968": {
      "op": "ADD"
    },
    "17969": {
      "op": "MSTORE"
    },
    "17970": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "17972": {
      "op": "ADD"
    },
    "17973": {
      "op": "SWAP1"
    },
    "17974": {
      "jump": "o",
      "op": "JUMP"
    },
    "17975": {
      "op": "JUMPDEST"
    },
    "17976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17978": {
      "op": "DUP3"
    },
    "17979": {
      "op": "MLOAD"
    },
    "17980": {
      "op": "PUSH2",
      "value": "0x4649"
    },
    "17983": {
      "op": "DUP2"
    },
    "17984": {
      "op": "DUP5"
    },
    "17985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17987": {
      "op": "DUP8"
    },
    "17988": {
      "op": "ADD"
    },
    "17989": {
      "op": "PUSH2",
      "value": "0x4A30"
    },
    "17992": {
      "jump": "i",
      "op": "JUMP"
    },
    "17993": {
      "op": "JUMPDEST"
    },
    "17994": {
      "op": "SWAP2"
    },
    "17995": {
      "op": "SWAP1"
    },
    "17996": {
      "op": "SWAP2"
    },
    "17997": {
      "op": "ADD"
    },
    "17998": {
      "op": "SWAP3"
    },
    "17999": {
      "op": "SWAP2"
    },
    "18000": {
      "op": "POP"
    },
    "18001": {
      "op": "POP"
    },
    "18002": {
      "jump": "o",
      "op": "JUMP"
    },
    "18003": {
      "op": "JUMPDEST"
    },
    "18004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18010": {
      "op": "SHL"
    },
    "18011": {
      "op": "SUB"
    },
    "18012": {
      "op": "DUP6"
    },
    "18013": {
      "op": "DUP2"
    },
    "18014": {
      "op": "AND"
    },
    "18015": {
      "op": "DUP3"
    },
    "18016": {
      "op": "MSTORE"
    },
    "18017": {
      "op": "DUP5"
    },
    "18018": {
      "op": "AND"
    },
    "18019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18021": {
      "op": "DUP3"
    },
    "18022": {
      "op": "ADD"
    },
    "18023": {
      "op": "MSTORE"
    },
    "18024": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18026": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18028": {
      "op": "DUP3"
    },
    "18029": {
      "op": "ADD"
    },
    "18030": {
      "op": "DUP2"
    },
    "18031": {
      "op": "SWAP1"
    },
    "18032": {
      "op": "MSTORE"
    },
    "18033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18035": {
      "op": "SWAP1"
    },
    "18036": {
      "op": "PUSH2",
      "value": "0x467F"
    },
    "18039": {
      "op": "SWAP1"
    },
    "18040": {
      "op": "DUP4"
    },
    "18041": {
      "op": "ADD"
    },
    "18042": {
      "op": "DUP6"
    },
    "18043": {
      "op": "PUSH2",
      "value": "0x45D2"
    },
    "18046": {
      "jump": "i",
      "op": "JUMP"
    },
    "18047": {
      "op": "JUMPDEST"
    },
    "18048": {
      "op": "DUP3"
    },
    "18049": {
      "op": "DUP2"
    },
    "18050": {
      "op": "SUB"
    },
    "18051": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18053": {
      "op": "DUP5"
    },
    "18054": {
      "op": "ADD"
    },
    "18055": {
      "op": "MSTORE"
    },
    "18056": {
      "op": "PUSH2",
      "value": "0x4691"
    },
    "18059": {
      "op": "DUP2"
    },
    "18060": {
      "op": "DUP6"
    },
    "18061": {
      "op": "PUSH2",
      "value": "0x45D2"
    },
    "18064": {
      "jump": "i",
      "op": "JUMP"
    },
    "18065": {
      "op": "JUMPDEST"
    },
    "18066": {
      "op": "DUP4"
    },
    "18067": {
      "op": "DUP2"
    },
    "18068": {
      "op": "SUB"
    },
    "18069": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18071": {
      "op": "SWAP1"
    },
    "18072": {
      "op": "SWAP5"
    },
    "18073": {
      "op": "ADD"
    },
    "18074": {
      "op": "SWAP4"
    },
    "18075": {
      "op": "SWAP1"
    },
    "18076": {
      "op": "SWAP4"
    },
    "18077": {
      "op": "MSTORE"
    },
    "18078": {
      "op": "POP"
    },
    "18079": {
      "op": "POP"
    },
    "18080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18082": {
      "op": "DUP2"
    },
    "18083": {
      "op": "MSTORE"
    },
    "18084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18086": {
      "op": "ADD"
    },
    "18087": {
      "op": "SWAP5"
    },
    "18088": {
      "op": "SWAP4"
    },
    "18089": {
      "op": "POP"
    },
    "18090": {
      "op": "POP"
    },
    "18091": {
      "op": "POP"
    },
    "18092": {
      "op": "POP"
    },
    "18093": {
      "jump": "o",
      "op": "JUMP"
    },
    "18094": {
      "op": "JUMPDEST"
    },
    "18095": {
      "op": "DUP7"
    },
    "18096": {
      "op": "ISZERO"
    },
    "18097": {
      "op": "ISZERO"
    },
    "18098": {
      "op": "DUP2"
    },
    "18099": {
      "op": "MSTORE"
    },
    "18100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18102": {
      "op": "DUP2"
    },
    "18103": {
      "op": "ADD"
    },
    "18104": {
      "op": "DUP7"
    },
    "18105": {
      "op": "SWAP1"
    },
    "18106": {
      "op": "MSTORE"
    },
    "18107": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18109": {
      "op": "DUP6"
    },
    "18110": {
      "op": "AND"
    },
    "18111": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18113": {
      "op": "DUP3"
    },
    "18114": {
      "op": "ADD"
    },
    "18115": {
      "op": "MSTORE"
    },
    "18116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18120": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18122": {
      "op": "SHL"
    },
    "18123": {
      "op": "SUB"
    },
    "18124": {
      "op": "NOT"
    },
    "18125": {
      "op": "DUP5"
    },
    "18126": {
      "op": "AND"
    },
    "18127": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18129": {
      "op": "DUP3"
    },
    "18130": {
      "op": "ADD"
    },
    "18131": {
      "op": "MSTORE"
    },
    "18132": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "18135": {
      "op": "DUP4"
    },
    "18136": {
      "op": "AND"
    },
    "18137": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18139": {
      "op": "DUP3"
    },
    "18140": {
      "op": "ADD"
    },
    "18141": {
      "op": "MSTORE"
    },
    "18142": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "18144": {
      "op": "DUP2"
    },
    "18145": {
      "op": "ADD"
    },
    "18146": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "18148": {
      "op": "DUP4"
    },
    "18149": {
      "op": "LT"
    },
    "18150": {
      "op": "PUSH2",
      "value": "0x46FF"
    },
    "18153": {
      "op": "JUMPI"
    },
    "18154": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "18159": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18161": {
      "op": "SHL"
    },
    "18162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18164": {
      "op": "MSTORE"
    },
    "18165": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "18167": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "18169": {
      "op": "MSTORE"
    },
    "18170": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18174": {
      "op": "REVERT"
    },
    "18175": {
      "op": "JUMPDEST"
    },
    "18176": {
      "op": "DUP3"
    },
    "18177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18179": {
      "op": "DUP4"
    },
    "18180": {
      "op": "ADD"
    },
    "18181": {
      "op": "MSTORE"
    },
    "18182": {
      "op": "SWAP8"
    },
    "18183": {
      "op": "SWAP7"
    },
    "18184": {
      "op": "POP"
    },
    "18185": {
      "op": "POP"
    },
    "18186": {
      "op": "POP"
    },
    "18187": {
      "op": "POP"
    },
    "18188": {
      "op": "POP"
    },
    "18189": {
      "op": "POP"
    },
    "18190": {
      "op": "POP"
    },
    "18191": {
      "jump": "o",
      "op": "JUMP"
    },
    "18192": {
      "op": "JUMPDEST"
    },
    "18193": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18195": {
      "op": "DUP2"
    },
    "18196": {
      "op": "MSTORE"
    },
    "18197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18199": {
      "op": "DUP3"
    },
    "18200": {
      "op": "MLOAD"
    },
    "18201": {
      "op": "DUP1"
    },
    "18202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18204": {
      "op": "DUP5"
    },
    "18205": {
      "op": "ADD"
    },
    "18206": {
      "op": "MSTORE"
    },
    "18207": {
      "op": "PUSH2",
      "value": "0x472F"
    },
    "18210": {
      "op": "DUP2"
    },
    "18211": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18213": {
      "op": "DUP6"
    },
    "18214": {
      "op": "ADD"
    },
    "18215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18217": {
      "op": "DUP8"
    },
    "18218": {
      "op": "ADD"
    },
    "18219": {
      "op": "PUSH2",
      "value": "0x4A30"
    },
    "18222": {
      "jump": "i",
      "op": "JUMP"
    },
    "18223": {
      "op": "JUMPDEST"
    },
    "18224": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18226": {
      "op": "ADD"
    },
    "18227": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18229": {
      "op": "NOT"
    },
    "18230": {
      "op": "AND"
    },
    "18231": {
      "op": "SWAP2"
    },
    "18232": {
      "op": "SWAP1"
    },
    "18233": {
      "op": "SWAP2"
    },
    "18234": {
      "op": "ADD"
    },
    "18235": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18237": {
      "op": "ADD"
    },
    "18238": {
      "op": "SWAP3"
    },
    "18239": {
      "op": "SWAP2"
    },
    "18240": {
      "op": "POP"
    },
    "18241": {
      "op": "POP"
    },
    "18242": {
      "jump": "o",
      "op": "JUMP"
    },
    "18243": {
      "op": "JUMPDEST"
    },
    "18244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18246": {
      "op": "DUP1"
    },
    "18247": {
      "op": "DUP3"
    },
    "18248": {
      "op": "MSTORE"
    },
    "18249": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "18251": {
      "op": "SWAP1"
    },
    "18252": {
      "op": "DUP3"
    },
    "18253": {
      "op": "ADD"
    },
    "18254": {
      "op": "MSTORE"
    },
    "18255": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A696E76616C6964206E6674207374616E646172640000000000"
    },
    "18288": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18290": {
      "op": "DUP3"
    },
    "18291": {
      "op": "ADD"
    },
    "18292": {
      "op": "MSTORE"
    },
    "18293": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18295": {
      "op": "ADD"
    },
    "18296": {
      "op": "SWAP1"
    },
    "18297": {
      "jump": "o",
      "op": "JUMP"
    },
    "18298": {
      "op": "JUMPDEST"
    },
    "18299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18301": {
      "op": "DUP1"
    },
    "18302": {
      "op": "DUP3"
    },
    "18303": {
      "op": "MSTORE"
    },
    "18304": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "18306": {
      "op": "SWAP1"
    },
    "18307": {
      "op": "DUP3"
    },
    "18308": {
      "op": "ADD"
    },
    "18309": {
      "op": "MSTORE"
    },
    "18310": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6475726174696F6E206973207A65726F000000000000000000"
    },
    "18343": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18345": {
      "op": "DUP3"
    },
    "18346": {
      "op": "ADD"
    },
    "18347": {
      "op": "MSTORE"
    },
    "18348": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18350": {
      "op": "ADD"
    },
    "18351": {
      "op": "SWAP1"
    },
    "18352": {
      "jump": "o",
      "op": "JUMP"
    },
    "18353": {
      "op": "JUMPDEST"
    },
    "18354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18356": {
      "op": "DUP1"
    },
    "18357": {
      "op": "DUP3"
    },
    "18358": {
      "op": "MSTORE"
    },
    "18359": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "18361": {
      "op": "SWAP1"
    },
    "18362": {
      "op": "DUP3"
    },
    "18363": {
      "op": "ADD"
    },
    "18364": {
      "op": "MSTORE"
    },
    "18365": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E74207072696365206973207A65726F00000000000000"
    },
    "18398": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18400": {
      "op": "DUP3"
    },
    "18401": {
      "op": "ADD"
    },
    "18402": {
      "op": "MSTORE"
    },
    "18403": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18405": {
      "op": "ADD"
    },
    "18406": {
      "op": "SWAP1"
    },
    "18407": {
      "jump": "o",
      "op": "JUMP"
    },
    "18408": {
      "op": "JUMPDEST"
    },
    "18409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18411": {
      "op": "DUP1"
    },
    "18412": {
      "op": "DUP3"
    },
    "18413": {
      "op": "MSTORE"
    },
    "18414": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "18416": {
      "op": "SWAP1"
    },
    "18417": {
      "op": "DUP3"
    },
    "18418": {
      "op": "ADD"
    },
    "18419": {
      "op": "MSTORE"
    },
    "18420": {
      "op": "PUSH13",
      "value": "0x14995391950E8E9C185D5CD959"
    },
    "18434": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "18436": {
      "op": "SHL"
    },
    "18437": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18439": {
      "op": "DUP3"
    },
    "18440": {
      "op": "ADD"
    },
    "18441": {
      "op": "MSTORE"
    },
    "18442": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18444": {
      "op": "ADD"
    },
    "18445": {
      "op": "SWAP1"
    },
    "18446": {
      "jump": "o",
      "op": "JUMP"
    },
    "18447": {
      "op": "JUMPDEST"
    },
    "18448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18450": {
      "op": "DUP1"
    },
    "18451": {
      "op": "DUP3"
    },
    "18452": {
      "op": "MSTORE"
    },
    "18453": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "18455": {
      "op": "SWAP1"
    },
    "18456": {
      "op": "DUP3"
    },
    "18457": {
      "op": "ADD"
    },
    "18458": {
      "op": "MSTORE"
    },
    "18459": {
      "op": "PUSH16",
      "value": "0x2932A7232A1D1D3737BA1030B236B4B7"
    },
    "18476": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "18478": {
      "op": "SHL"
    },
    "18479": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18481": {
      "op": "DUP3"
    },
    "18482": {
      "op": "ADD"
    },
    "18483": {
      "op": "MSTORE"
    },
    "18484": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18486": {
      "op": "ADD"
    },
    "18487": {
      "op": "SWAP1"
    },
    "18488": {
      "jump": "o",
      "op": "JUMP"
    },
    "18489": {
      "op": "JUMPDEST"
    },
    "18490": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18492": {
      "op": "MLOAD"
    },
    "18493": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18495": {
      "op": "DUP3"
    },
    "18496": {
      "op": "ADD"
    },
    "18497": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18499": {
      "op": "NOT"
    },
    "18500": {
      "op": "AND"
    },
    "18501": {
      "op": "DUP2"
    },
    "18502": {
      "op": "ADD"
    },
    "18503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18507": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18509": {
      "op": "SHL"
    },
    "18510": {
      "op": "SUB"
    },
    "18511": {
      "op": "DUP2"
    },
    "18512": {
      "op": "GT"
    },
    "18513": {
      "op": "DUP3"
    },
    "18514": {
      "op": "DUP3"
    },
    "18515": {
      "op": "LT"
    },
    "18516": {
      "op": "OR"
    },
    "18517": {
      "op": "ISZERO"
    },
    "18518": {
      "op": "PUSH2",
      "value": "0x4861"
    },
    "18521": {
      "op": "JUMPI"
    },
    "18522": {
      "op": "PUSH2",
      "value": "0x4861"
    },
    "18525": {
      "op": "PUSH2",
      "value": "0x4AB9"
    },
    "18528": {
      "jump": "i",
      "op": "JUMP"
    },
    "18529": {
      "op": "JUMPDEST"
    },
    "18530": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18532": {
      "op": "MSTORE"
    },
    "18533": {
      "op": "SWAP2"
    },
    "18534": {
      "op": "SWAP1"
    },
    "18535": {
      "op": "POP"
    },
    "18536": {
      "jump": "o",
      "op": "JUMP"
    },
    "18537": {
      "op": "JUMPDEST"
    },
    "18538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18544": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18546": {
      "op": "SHL"
    },
    "18547": {
      "op": "SUB"
    },
    "18548": {
      "op": "DUP3"
    },
    "18549": {
      "op": "GT"
    },
    "18550": {
      "op": "ISZERO"
    },
    "18551": {
      "op": "PUSH2",
      "value": "0x4882"
    },
    "18554": {
      "op": "JUMPI"
    },
    "18555": {
      "op": "PUSH2",
      "value": "0x4882"
    },
    "18558": {
      "op": "PUSH2",
      "value": "0x4AB9"
    },
    "18561": {
      "jump": "i",
      "op": "JUMP"
    },
    "18562": {
      "op": "JUMPDEST"
    },
    "18563": {
      "op": "POP"
    },
    "18564": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "18566": {
      "op": "SHL"
    },
    "18567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18569": {
      "op": "ADD"
    },
    "18570": {
      "op": "SWAP1"
    },
    "18571": {
      "jump": "o",
      "op": "JUMP"
    },
    "18572": {
      "op": "JUMPDEST"
    },
    "18573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18575": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "18578": {
      "op": "DUP1"
    },
    "18579": {
      "op": "DUP4"
    },
    "18580": {
      "op": "AND"
    },
    "18581": {
      "op": "DUP2"
    },
    "18582": {
      "op": "DUP6"
    },
    "18583": {
      "op": "AND"
    },
    "18584": {
      "op": "DUP1"
    },
    "18585": {
      "op": "DUP4"
    },
    "18586": {
      "op": "SUB"
    },
    "18587": {
      "op": "DUP3"
    },
    "18588": {
      "op": "GT"
    },
    "18589": {
      "op": "ISZERO"
    },
    "18590": {
      "op": "PUSH2",
      "value": "0x48A9"
    },
    "18593": {
      "op": "JUMPI"
    },
    "18594": {
      "op": "PUSH2",
      "value": "0x48A9"
    },
    "18597": {
      "op": "PUSH2",
      "value": "0x4A77"
    },
    "18600": {
      "jump": "i",
      "op": "JUMP"
    },
    "18601": {
      "op": "JUMPDEST"
    },
    "18602": {
      "op": "ADD"
    },
    "18603": {
      "op": "SWAP5"
    },
    "18604": {
      "op": "SWAP4"
    },
    "18605": {
      "op": "POP"
    },
    "18606": {
      "op": "POP"
    },
    "18607": {
      "op": "POP"
    },
    "18608": {
      "op": "POP"
    },
    "18609": {
      "jump": "o",
      "op": "JUMP"
    },
    "18610": {
      "op": "JUMPDEST"
    },
    "18611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18613": {
      "op": "DUP3"
    },
    "18614": {
      "op": "NOT"
    },
    "18615": {
      "op": "DUP3"
    },
    "18616": {
      "op": "GT"
    },
    "18617": {
      "op": "ISZERO"
    },
    "18618": {
      "op": "PUSH2",
      "value": "0x48C5"
    },
    "18621": {
      "op": "JUMPI"
    },
    "18622": {
      "op": "PUSH2",
      "value": "0x48C5"
    },
    "18625": {
      "op": "PUSH2",
      "value": "0x4A77"
    },
    "18628": {
      "jump": "i",
      "op": "JUMP"
    },
    "18629": {
      "op": "JUMPDEST"
    },
    "18630": {
      "op": "POP"
    },
    "18631": {
      "op": "ADD"
    },
    "18632": {
      "op": "SWAP1"
    },
    "18633": {
      "jump": "o",
      "op": "JUMP"
    },
    "18634": {
      "op": "JUMPDEST"
    },
    "18635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18637": {
      "op": "DUP3"
    },
    "18638": {
      "op": "PUSH2",
      "value": "0x48E7"
    },
    "18641": {
      "op": "JUMPI"
    },
    "18642": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "18647": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18649": {
      "op": "SHL"
    },
    "18650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18652": {
      "op": "MSTORE"
    },
    "18653": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "18655": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "18657": {
      "op": "MSTORE"
    },
    "18658": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18662": {
      "op": "REVERT"
    },
    "18663": {
      "op": "JUMPDEST"
    },
    "18664": {
      "op": "POP"
    },
    "18665": {
      "op": "DIV"
    },
    "18666": {
      "op": "SWAP1"
    },
    "18667": {
      "jump": "o",
      "op": "JUMP"
    },
    "18668": {
      "op": "JUMPDEST"
    },
    "18669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18671": {
      "op": "DUP2"
    },
    "18672": {
      "op": "DUP2"
    },
    "18673": {
      "op": "JUMPDEST"
    },
    "18674": {
      "op": "DUP1"
    },
    "18675": {
      "op": "DUP6"
    },
    "18676": {
      "op": "GT"
    },
    "18677": {
      "op": "ISZERO"
    },
    "18678": {
      "op": "PUSH2",
      "value": "0x4927"
    },
    "18681": {
      "op": "JUMPI"
    },
    "18682": {
      "op": "DUP2"
    },
    "18683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18685": {
      "op": "NOT"
    },
    "18686": {
      "op": "DIV"
    },
    "18687": {
      "op": "DUP3"
    },
    "18688": {
      "op": "GT"
    },
    "18689": {
      "op": "ISZERO"
    },
    "18690": {
      "op": "PUSH2",
      "value": "0x490D"
    },
    "18693": {
      "op": "JUMPI"
    },
    "18694": {
      "op": "PUSH2",
      "value": "0x490D"
    },
    "18697": {
      "op": "PUSH2",
      "value": "0x4A77"
    },
    "18700": {
      "jump": "i",
      "op": "JUMP"
    },
    "18701": {
      "op": "JUMPDEST"
    },
    "18702": {
      "op": "DUP1"
    },
    "18703": {
      "op": "DUP6"
    },
    "18704": {
      "op": "AND"
    },
    "18705": {
      "op": "ISZERO"
    },
    "18706": {
      "op": "PUSH2",
      "value": "0x491A"
    },
    "18709": {
      "op": "JUMPI"
    },
    "18710": {
      "op": "SWAP2"
    },
    "18711": {
      "op": "DUP2"
    },
    "18712": {
      "op": "MUL"
    },
    "18713": {
      "op": "SWAP2"
    },
    "18714": {
      "op": "JUMPDEST"
    },
    "18715": {
      "op": "SWAP4"
    },
    "18716": {
      "op": "DUP5"
    },
    "18717": {
      "op": "SHR"
    },
    "18718": {
      "op": "SWAP4"
    },
    "18719": {
      "op": "SWAP1"
    },
    "18720": {
      "op": "DUP1"
    },
    "18721": {
      "op": "MUL"
    },
    "18722": {
      "op": "SWAP1"
    },
    "18723": {
      "op": "PUSH2",
      "value": "0x48F1"
    },
    "18726": {
      "op": "JUMP"
    },
    "18727": {
      "op": "JUMPDEST"
    },
    "18728": {
      "op": "POP"
    },
    "18729": {
      "op": "SWAP3"
    },
    "18730": {
      "op": "POP"
    },
    "18731": {
      "op": "SWAP3"
    },
    "18732": {
      "op": "SWAP1"
    },
    "18733": {
      "op": "POP"
    },
    "18734": {
      "jump": "o",
      "op": "JUMP"
    },
    "18735": {
      "op": "JUMPDEST"
    },
    "18736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18738": {
      "op": "PUSH2",
      "value": "0x3AF7"
    },
    "18741": {
      "op": "DUP4"
    },
    "18742": {
      "op": "DUP4"
    },
    "18743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18745": {
      "op": "DUP3"
    },
    "18746": {
      "op": "PUSH2",
      "value": "0x4945"
    },
    "18749": {
      "op": "JUMPI"
    },
    "18750": {
      "op": "POP"
    },
    "18751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18753": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "18756": {
      "op": "JUMP"
    },
    "18757": {
      "op": "JUMPDEST"
    },
    "18758": {
      "op": "DUP2"
    },
    "18759": {
      "op": "PUSH2",
      "value": "0x4952"
    },
    "18762": {
      "op": "JUMPI"
    },
    "18763": {
      "op": "POP"
    },
    "18764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18766": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "18769": {
      "op": "JUMP"
    },
    "18770": {
      "op": "JUMPDEST"
    },
    "18771": {
      "op": "DUP2"
    },
    "18772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18774": {
      "op": "DUP2"
    },
    "18775": {
      "op": "EQ"
    },
    "18776": {
      "op": "PUSH2",
      "value": "0x4968"
    },
    "18779": {
      "op": "JUMPI"
    },
    "18780": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "18782": {
      "op": "DUP2"
    },
    "18783": {
      "op": "EQ"
    },
    "18784": {
      "op": "PUSH2",
      "value": "0x4972"
    },
    "18787": {
      "op": "JUMPI"
    },
    "18788": {
      "op": "PUSH2",
      "value": "0x498E"
    },
    "18791": {
      "op": "JUMP"
    },
    "18792": {
      "op": "JUMPDEST"
    },
    "18793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18795": {
      "op": "SWAP2"
    },
    "18796": {
      "op": "POP"
    },
    "18797": {
      "op": "POP"
    },
    "18798": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "18801": {
      "op": "JUMP"
    },
    "18802": {
      "op": "JUMPDEST"
    },
    "18803": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18805": {
      "op": "DUP5"
    },
    "18806": {
      "op": "GT"
    },
    "18807": {
      "op": "ISZERO"
    },
    "18808": {
      "op": "PUSH2",
      "value": "0x4983"
    },
    "18811": {
      "op": "JUMPI"
    },
    "18812": {
      "op": "PUSH2",
      "value": "0x4983"
    },
    "18815": {
      "op": "PUSH2",
      "value": "0x4A77"
    },
    "18818": {
      "jump": "i",
      "op": "JUMP"
    },
    "18819": {
      "op": "JUMPDEST"
    },
    "18820": {
      "op": "POP"
    },
    "18821": {
      "op": "POP"
    },
    "18822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18824": {
      "op": "DUP3"
    },
    "18825": {
      "op": "SHL"
    },
    "18826": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "18829": {
      "op": "JUMP"
    },
    "18830": {
      "op": "JUMPDEST"
    },
    "18831": {
      "op": "POP"
    },
    "18832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18834": {
      "op": "DUP4"
    },
    "18835": {
      "op": "LT"
    },
    "18836": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "18839": {
      "op": "DUP4"
    },
    "18840": {
      "op": "LT"
    },
    "18841": {
      "op": "AND"
    },
    "18842": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "18844": {
      "op": "DUP5"
    },
    "18845": {
      "op": "LT"
    },
    "18846": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "18848": {
      "op": "DUP5"
    },
    "18849": {
      "op": "LT"
    },
    "18850": {
      "op": "AND"
    },
    "18851": {
      "op": "OR"
    },
    "18852": {
      "op": "ISZERO"
    },
    "18853": {
      "op": "PUSH2",
      "value": "0x49B1"
    },
    "18856": {
      "op": "JUMPI"
    },
    "18857": {
      "op": "POP"
    },
    "18858": {
      "op": "DUP2"
    },
    "18859": {
      "op": "DUP2"
    },
    "18860": {
      "op": "EXP"
    },
    "18861": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "18864": {
      "op": "JUMP"
    },
    "18865": {
      "op": "JUMPDEST"
    },
    "18866": {
      "op": "PUSH2",
      "value": "0x49BB"
    },
    "18869": {
      "op": "DUP4"
    },
    "18870": {
      "op": "DUP4"
    },
    "18871": {
      "op": "PUSH2",
      "value": "0x48EC"
    },
    "18874": {
      "jump": "i",
      "op": "JUMP"
    },
    "18875": {
      "op": "JUMPDEST"
    },
    "18876": {
      "op": "DUP1"
    },
    "18877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18879": {
      "op": "NOT"
    },
    "18880": {
      "op": "DIV"
    },
    "18881": {
      "op": "DUP3"
    },
    "18882": {
      "op": "GT"
    },
    "18883": {
      "op": "ISZERO"
    },
    "18884": {
      "op": "PUSH2",
      "value": "0x49CF"
    },
    "18887": {
      "op": "JUMPI"
    },
    "18888": {
      "op": "PUSH2",
      "value": "0x49CF"
    },
    "18891": {
      "op": "PUSH2",
      "value": "0x4A77"
    },
    "18894": {
      "jump": "i",
      "op": "JUMP"
    },
    "18895": {
      "op": "JUMPDEST"
    },
    "18896": {
      "op": "MUL"
    },
    "18897": {
      "op": "SWAP4"
    },
    "18898": {
      "op": "SWAP3"
    },
    "18899": {
      "op": "POP"
    },
    "18900": {
      "op": "POP"
    },
    "18901": {
      "op": "POP"
    },
    "18902": {
      "jump": "o",
      "op": "JUMP"
    },
    "18903": {
      "op": "JUMPDEST"
    },
    "18904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18906": {
      "op": "DUP2"
    },
    "18907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18909": {
      "op": "NOT"
    },
    "18910": {
      "op": "DIV"
    },
    "18911": {
      "op": "DUP4"
    },
    "18912": {
      "op": "GT"
    },
    "18913": {
      "op": "DUP3"
    },
    "18914": {
      "op": "ISZERO"
    },
    "18915": {
      "op": "ISZERO"
    },
    "18916": {
      "op": "AND"
    },
    "18917": {
      "op": "ISZERO"
    },
    "18918": {
      "op": "PUSH2",
      "value": "0x49F1"
    },
    "18921": {
      "op": "JUMPI"
    },
    "18922": {
      "op": "PUSH2",
      "value": "0x49F1"
    },
    "18925": {
      "op": "PUSH2",
      "value": "0x4A77"
    },
    "18928": {
      "jump": "i",
      "op": "JUMP"
    },
    "18929": {
      "op": "JUMPDEST"
    },
    "18930": {
      "op": "POP"
    },
    "18931": {
      "op": "MUL"
    },
    "18932": {
      "op": "SWAP1"
    },
    "18933": {
      "jump": "o",
      "op": "JUMP"
    },
    "18934": {
      "op": "JUMPDEST"
    },
    "18935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18937": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "18940": {
      "op": "DUP4"
    },
    "18941": {
      "op": "DUP2"
    },
    "18942": {
      "op": "AND"
    },
    "18943": {
      "op": "SWAP1"
    },
    "18944": {
      "op": "DUP4"
    },
    "18945": {
      "op": "AND"
    },
    "18946": {
      "op": "DUP2"
    },
    "18947": {
      "op": "DUP2"
    },
    "18948": {
      "op": "LT"
    },
    "18949": {
      "op": "ISZERO"
    },
    "18950": {
      "op": "PUSH2",
      "value": "0x4A11"
    },
    "18953": {
      "op": "JUMPI"
    },
    "18954": {
      "op": "PUSH2",
      "value": "0x4A11"
    },
    "18957": {
      "op": "PUSH2",
      "value": "0x4A77"
    },
    "18960": {
      "jump": "i",
      "op": "JUMP"
    },
    "18961": {
      "op": "JUMPDEST"
    },
    "18962": {
      "op": "SUB"
    },
    "18963": {
      "op": "SWAP4"
    },
    "18964": {
      "op": "SWAP3"
    },
    "18965": {
      "op": "POP"
    },
    "18966": {
      "op": "POP"
    },
    "18967": {
      "op": "POP"
    },
    "18968": {
      "jump": "o",
      "op": "JUMP"
    },
    "18969": {
      "op": "JUMPDEST"
    },
    "18970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18972": {
      "op": "DUP3"
    },
    "18973": {
      "op": "DUP3"
    },
    "18974": {
      "op": "LT"
    },
    "18975": {
      "op": "ISZERO"
    },
    "18976": {
      "op": "PUSH2",
      "value": "0x4A2B"
    },
    "18979": {
      "op": "JUMPI"
    },
    "18980": {
      "op": "PUSH2",
      "value": "0x4A2B"
    },
    "18983": {
      "op": "PUSH2",
      "value": "0x4A77"
    },
    "18986": {
      "jump": "i",
      "op": "JUMP"
    },
    "18987": {
      "op": "JUMPDEST"
    },
    "18988": {
      "op": "POP"
    },
    "18989": {
      "op": "SUB"
    },
    "18990": {
      "op": "SWAP1"
    },
    "18991": {
      "jump": "o",
      "op": "JUMP"
    },
    "18992": {
      "op": "JUMPDEST"
    },
    "18993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18995": {
      "op": "JUMPDEST"
    },
    "18996": {
      "op": "DUP4"
    },
    "18997": {
      "op": "DUP2"
    },
    "18998": {
      "op": "LT"
    },
    "18999": {
      "op": "ISZERO"
    },
    "19000": {
      "op": "PUSH2",
      "value": "0x4A4B"
    },
    "19003": {
      "op": "JUMPI"
    },
    "19004": {
      "op": "DUP2"
    },
    "19005": {
      "op": "DUP2"
    },
    "19006": {
      "op": "ADD"
    },
    "19007": {
      "op": "MLOAD"
    },
    "19008": {
      "op": "DUP4"
    },
    "19009": {
      "op": "DUP3"
    },
    "19010": {
      "op": "ADD"
    },
    "19011": {
      "op": "MSTORE"
    },
    "19012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19014": {
      "op": "ADD"
    },
    "19015": {
      "op": "PUSH2",
      "value": "0x4A33"
    },
    "19018": {
      "op": "JUMP"
    },
    "19019": {
      "op": "JUMPDEST"
    },
    "19020": {
      "op": "DUP4"
    },
    "19021": {
      "op": "DUP2"
    },
    "19022": {
      "op": "GT"
    },
    "19023": {
      "op": "ISZERO"
    },
    "19024": {
      "op": "PUSH2",
      "value": "0x708"
    },
    "19027": {
      "op": "JUMPI"
    },
    "19028": {
      "op": "POP"
    },
    "19029": {
      "op": "POP"
    },
    "19030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19032": {
      "op": "SWAP2"
    },
    "19033": {
      "op": "ADD"
    },
    "19034": {
      "op": "MSTORE"
    },
    "19035": {
      "jump": "o",
      "op": "JUMP"
    },
    "19036": {
      "op": "JUMPDEST"
    },
    "19037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19041": {
      "op": "NOT"
    },
    "19042": {
      "op": "DUP3"
    },
    "19043": {
      "op": "EQ"
    },
    "19044": {
      "op": "ISZERO"
    },
    "19045": {
      "op": "PUSH2",
      "value": "0x4A70"
    },
    "19048": {
      "op": "JUMPI"
    },
    "19049": {
      "op": "PUSH2",
      "value": "0x4A70"
    },
    "19052": {
      "op": "PUSH2",
      "value": "0x4A77"
    },
    "19055": {
      "jump": "i",
      "op": "JUMP"
    },
    "19056": {
      "op": "JUMPDEST"
    },
    "19057": {
      "op": "POP"
    },
    "19058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19060": {
      "op": "ADD"
    },
    "19061": {
      "op": "SWAP1"
    },
    "19062": {
      "jump": "o",
      "op": "JUMP"
    },
    "19063": {
      "op": "JUMPDEST"
    },
    "19064": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "19069": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "19071": {
      "op": "SHL"
    },
    "19072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19074": {
      "op": "MSTORE"
    },
    "19075": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "19077": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "19079": {
      "op": "MSTORE"
    },
    "19080": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19084": {
      "op": "REVERT"
    },
    "19085": {
      "op": "JUMPDEST"
    },
    "19086": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "19091": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "19093": {
      "op": "SHL"
    },
    "19094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19096": {
      "op": "MSTORE"
    },
    "19097": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "19099": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "19101": {
      "op": "MSTORE"
    },
    "19102": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19106": {
      "op": "REVERT"
    },
    "19107": {
      "op": "JUMPDEST"
    },
    "19108": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "19113": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "19115": {
      "op": "SHL"
    },
    "19116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19118": {
      "op": "MSTORE"
    },
    "19119": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "19121": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "19123": {
      "op": "MSTORE"
    },
    "19124": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19128": {
      "op": "REVERT"
    },
    "19129": {
      "op": "JUMPDEST"
    },
    "19130": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "19135": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "19137": {
      "op": "SHL"
    },
    "19138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19140": {
      "op": "MSTORE"
    },
    "19141": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "19143": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "19145": {
      "op": "MSTORE"
    },
    "19146": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19150": {
      "op": "REVERT"
    },
    "19151": {
      "op": "JUMPDEST"
    },
    "19152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19158": {
      "op": "SHL"
    },
    "19159": {
      "op": "SUB"
    },
    "19160": {
      "op": "DUP2"
    },
    "19161": {
      "op": "AND"
    },
    "19162": {
      "op": "DUP2"
    },
    "19163": {
      "op": "EQ"
    },
    "19164": {
      "op": "PUSH2",
      "value": "0x15C8"
    },
    "19167": {
      "op": "JUMPI"
    },
    "19168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19170": {
      "op": "DUP1"
    },
    "19171": {
      "op": "REVERT"
    },
    "19172": {
      "op": "JUMPDEST"
    },
    "19173": {
      "op": "DUP1"
    },
    "19174": {
      "op": "ISZERO"
    },
    "19175": {
      "op": "ISZERO"
    },
    "19176": {
      "op": "DUP2"
    },
    "19177": {
      "op": "EQ"
    },
    "19178": {
      "op": "PUSH2",
      "value": "0x15C8"
    },
    "19181": {
      "op": "JUMPI"
    },
    "19182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19184": {
      "op": "DUP1"
    },
    "19185": {
      "op": "REVERT"
    },
    "19186": {
      "op": "JUMPDEST"
    },
    "19187": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "19189": {
      "op": "DUP2"
    },
    "19190": {
      "op": "AND"
    },
    "19191": {
      "op": "DUP2"
    },
    "19192": {
      "op": "EQ"
    },
    "19193": {
      "op": "PUSH2",
      "value": "0x15C8"
    },
    "19196": {
      "op": "JUMPI"
    },
    "19197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19199": {
      "op": "DUP1"
    },
    "19200": {
      "op": "REVERT"
    }
  },
  "sha1": "299c4c4f9ef1c57d72804d18df3b22a49aac3a1c",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity =0.8.7;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/ERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/utils/ERC721Holder.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Receiver.sol\";\n\nimport \"./interfaces/IRegistry.sol\";\n\n//              @@@@@@@@@@@@@@@@        ,@@@@@@@@@@@@@@@@\n//              @@@,,,,,,,,,,@@@        ,@@&,,,,,,,,,,@@@\n//         @@@@@@@@,,,,,,,,,,@@@@@@@@&  ,@@&,,,,,,,,,,@@@@@@@@\n//         @@@**********@@@@@@@@@@@@@&  ,@@@@@@@@**********@@@\n//         @@@**********@@@@@@@@@@@@@&  ,@@@@@@@@**********@@@@@@@@\n//         @@@**********@@@@@@@@@@@@@&       .@@@**********@@@@@@@@\n//    @@@@@@@@**********@@@@@@@@@@@@@&       .@@@**********@@@@@@@@\n//    @@@**********@@@@@@@@@@@@@&            .@@@@@@@@**********@@@\n//    @@@**********@@@@@@@@@@@@@&            .@@@@@@@@**********@@@@@@@@\n//    @@@@@@@@**********@@@@@@@@&            .@@@**********@@@@@@@@@@@@@\n//    @@@@@@@@//////////@@@@@@@@&            .@@@//////////@@@@@@@@@@@@@\n//         @@@//////////@@@@@@@@&            .@@@//////////@@@@@@@@@@@@@\n//         @@@//////////@@@@@@@@&       ,@@@@@@@@//////////@@@@@@@@@@@@@\n//         @@@%%%%%/////(((((@@@&       ,@@@(((((/////%%%%%@@@@@@@@\n//         @@@@@@@@//////////@@@@@@@@&  ,@@@//////////@@@@@@@@@@@@@\n//              @@@%%%%%%%%%%@@@@@@@@&  ,@@@%%%%%%%%%%@@@@@@@@@@@@@\n//              @@@@@@@@@@@@@@@@@@@@@&  ,@@@@@@@@@@@@@@@@@@@@@@@@@@\n//                   @@@@@@@@@@@@@@@@&        @@@@@@@@@@@@@@@@\n//                   @@@@@@@@@@@@@@@@&        @@@@@@@@@@@@@@@@\n\ncontract Registry is IRegistry, ERC721Holder, ERC1155Receiver, ERC1155Holder {\n    using SafeERC20 for ERC20;\n\n    IResolver private resolver;\n    address private admin;\n    address payable private beneficiary;\n    uint256 private lendingID = 1;\n    uint256 private rentingID = 1;\n    bool public paused = false;\n    uint256 public rentFee = 0;\n    uint256 private constant SECONDS_IN_DAY = 86400;\n    mapping(bytes32 => Lending) private lendings;\n    mapping(bytes32 => Renting) private rentings;\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"ReNFT::not admin\");\n        _;\n    }\n\n    modifier notPaused() {\n        require(!paused, \"ReNFT::paused\");\n        _;\n    }\n\n    constructor(\n        address newResolver,\n        address payable newBeneficiary,\n        address newAdmin\n    ) {\n        ensureIsNotZeroAddr(newResolver);\n        ensureIsNotZeroAddr(newBeneficiary);\n        ensureIsNotZeroAddr(newAdmin);\n        resolver = IResolver(newResolver);\n        beneficiary = newBeneficiary;\n        admin = newAdmin;\n    }\n\n    function lend(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory lendAmount,\n        uint8[] memory maxRentDuration,\n        bytes4[] memory dailyRentPrice,\n        IResolver.PaymentToken[] memory paymentToken\n    ) external override notPaused {\n        bundleCall(\n            handleLend,\n            createLendCallData(\n                nftStandard,\n                nftAddress,\n                tokenID,\n                lendAmount,\n                maxRentDuration,\n                dailyRentPrice,\n                paymentToken\n            )\n        );\n    }\n\n    function stopLend(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID\n    ) external override notPaused {\n        bundleCall(\n            handleStopLend,\n            createActionCallData(\n                nftStandard,\n                nftAddress,\n                tokenID,\n                _lendingID,\n                new uint256[](0)\n            )\n        );\n    }\n\n    function rent(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint8[] memory rentDuration,\n        uint256[] memory rentAmount\n    ) external payable override notPaused {\n        bundleCall(\n            handleRent,\n            createRentCallData(\n                nftStandard,\n                nftAddress,\n                tokenID,\n                _lendingID,\n                rentDuration,\n                rentAmount\n            )\n        );\n    }\n\n    function stopRent(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint256[] memory _rentingID\n    ) external override notPaused {\n        bundleCall(\n            handleStopRent,\n            createActionCallData(\n                nftStandard,\n                nftAddress,\n                tokenID,\n                _lendingID,\n                _rentingID\n            )\n        );\n    }\n\n    function claimRent(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint256[] memory _rentingID\n    ) external override notPaused {\n        bundleCall(\n            handleClaimRent,\n            createActionCallData(\n                nftStandard,\n                nftAddress,\n                tokenID,\n                _lendingID,\n                _rentingID\n            )\n        );\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function handleLend(IRegistry.CallData memory cd) private {\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            ensureIsLendable(cd, i);\n            bytes32 identifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    lendingID\n                )\n            );\n            IRegistry.Lending storage lending = lendings[identifier];\n            ensureIsNull(lending);\n            ensureTokenNotSentinel(uint8(cd.paymentToken[i]));\n            bool is721 = cd.nftStandard[i] == IRegistry.NFTStandard.E721;\n            lendings[identifier] = IRegistry.Lending({\n                nftStandard: cd.nftStandard[i],\n                lenderAddress: payable(msg.sender),\n                maxRentDuration: cd.maxRentDuration[i],\n                dailyRentPrice: cd.dailyRentPrice[i],\n                lendAmount: is721 ? 1 : uint16(cd.lendAmount[i]),\n                availableAmount: is721 ? 1 : uint16(cd.lendAmount[i]),\n                paymentToken: cd.paymentToken[i]\n            });\n            emit IRegistry.Lend(\n                is721,\n                msg.sender,\n                cd.nftAddress[cd.left],\n                cd.tokenID[i],\n                lendingID,\n                cd.maxRentDuration[i],\n                cd.dailyRentPrice[i],\n                is721 ? 1 : uint16(cd.lendAmount[i]),\n                cd.paymentToken[i]\n            );\n            lendingID++;\n        }\n        safeTransfer(\n            cd,\n            msg.sender,\n            address(this),\n            sliceArr(cd.tokenID, cd.left, cd.right, 0),\n            sliceArr(cd.lendAmount, cd.left, cd.right, 0)\n        );\n    }\n\n    function handleStopLend(IRegistry.CallData memory cd) private {\n        uint256[] memory lentAmounts = new uint256[](cd.right - cd.left);\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            bytes32 lendingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    cd.lendingID[i]\n                )\n            );\n            Lending storage lending = lendings[lendingIdentifier];\n            ensureIsNotNull(lending);\n            ensureIsStoppable(lending, msg.sender);\n            require(\n                cd.nftStandard[i] == lending.nftStandard,\n                \"ReNFT::invalid nft standard\"\n            );\n            require(\n                lending.lendAmount == lending.availableAmount,\n                \"ReNFT::actively rented\"\n            );\n            lentAmounts[i - cd.left] = lending.lendAmount;\n            emit IRegistry.StopLend(cd.lendingID[i], uint32(block.timestamp));\n            delete lendings[lendingIdentifier];\n        }\n        safeTransfer(\n            cd,\n            address(this),\n            msg.sender,\n            sliceArr(cd.tokenID, cd.left, cd.right, 0),\n            sliceArr(lentAmounts, cd.left, cd.right, cd.left)\n        );\n    }\n\n    function handleRent(IRegistry.CallData memory cd) private {\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            bytes32 lendingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    cd.lendingID[i]\n                )\n            );\n            bytes32 rentingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    rentingID\n                )\n            );\n            IRegistry.Lending storage lending = lendings[lendingIdentifier];\n            IRegistry.Renting storage renting = rentings[rentingIdentifier];\n            ensureIsNotNull(lending);\n            ensureIsNull(renting);\n            ensureIsRentable(lending, cd, i, msg.sender);\n            require(\n                cd.nftStandard[i] == lending.nftStandard,\n                \"ReNFT::invalid nft standard\"\n            );\n            require(\n                cd.rentAmount[i] <= lending.availableAmount,\n                \"ReNFT::invalid rent amount\"\n            );\n            uint8 paymentTokenIx = uint8(lending.paymentToken);\n            address paymentToken = resolver.getPaymentToken(paymentTokenIx);\n            uint256 decimals = ERC20(paymentToken).decimals();\n            {\n                uint256 scale = 10**decimals;\n                uint256 rentPrice = cd.rentAmount[i] *\n                    cd.rentDuration[i] *\n                    unpackPrice(lending.dailyRentPrice, scale);\n                require(rentPrice > 0, \"ReNFT::rent price is zero\");\n                ERC20(paymentToken).safeTransferFrom(\n                    msg.sender,\n                    address(this),\n                    rentPrice\n                );\n            }\n            rentings[rentingIdentifier] = IRegistry.Renting({\n                renterAddress: payable(msg.sender),\n                rentAmount: uint16(cd.rentAmount[i]),\n                rentDuration: cd.rentDuration[i],\n                rentedAt: uint32(block.timestamp)\n            });\n            lendings[lendingIdentifier].availableAmount -= uint16(\n                cd.rentAmount[i]\n            );\n            emit IRegistry.Rent(\n                msg.sender,\n                cd.lendingID[i],\n                rentingID,\n                uint16(cd.rentAmount[i]),\n                cd.rentDuration[i],\n                renting.rentedAt\n            );\n            rentingID++;\n        }\n    }\n\n    function handleStopRent(IRegistry.CallData memory cd) private {\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            bytes32 lendingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    cd.lendingID[i]\n                )\n            );\n            bytes32 rentingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    cd.rentingID[i]\n                )\n            );\n            IRegistry.Lending storage lending = lendings[lendingIdentifier];\n            IRegistry.Renting storage renting = rentings[rentingIdentifier];\n            ensureIsNotNull(lending);\n            ensureIsNotNull(renting);\n            ensureIsReturnable(renting, msg.sender, block.timestamp);\n            require(\n                cd.nftStandard[i] == lending.nftStandard,\n                \"ReNFT::invalid nft standard\"\n            );\n            require(\n                renting.rentAmount <= lending.lendAmount,\n                \"ReNFT::critical error\"\n            );\n            uint256 secondsSinceRentStart = block.timestamp - renting.rentedAt;\n            distributePayments(lending, renting, secondsSinceRentStart);\n            lendings[lendingIdentifier].availableAmount += renting.rentAmount;\n            emit IRegistry.StopRent(cd.rentingID[i], uint32(block.timestamp));\n            delete rentings[rentingIdentifier];\n        }\n    }\n\n    function handleClaimRent(CallData memory cd) private {\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            bytes32 lendingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    cd.lendingID[i]\n                )\n            );\n            bytes32 rentingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    cd.rentingID[i]\n                )\n            );\n            IRegistry.Lending storage lending = lendings[lendingIdentifier];\n            IRegistry.Renting storage renting = rentings[rentingIdentifier];\n            ensureIsNotNull(lending);\n            ensureIsNotNull(renting);\n            ensureIsClaimable(renting, block.timestamp);\n            distributeClaimPayment(lending, renting);\n            lending.availableAmount += renting.rentAmount;\n            emit IRegistry.RentClaimed(\n                cd.rentingID[i],\n                uint32(block.timestamp)\n            );\n            delete rentings[rentingIdentifier];\n        }\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function bundleCall(\n        function(IRegistry.CallData memory) handler,\n        IRegistry.CallData memory cd\n    ) private {\n        require(cd.nftAddress.length > 0, \"ReNFT::no nfts\");\n        while (cd.right != cd.nftAddress.length) {\n            if (\n                (cd.nftAddress[cd.left] == cd.nftAddress[cd.right]) &&\n                (cd.nftStandard[cd.right] == IRegistry.NFTStandard.E1155)\n            ) {\n                cd.right++;\n            } else {\n                handler(cd);\n                cd.left = cd.right;\n                cd.right++;\n            }\n        }\n        handler(cd);\n    }\n\n    function takeFee(uint256 rentAmt, IResolver.PaymentToken paymentToken)\n        private\n        returns (uint256 fee)\n    {\n        fee = rentAmt * rentFee;\n        fee /= 10000;\n        uint8 paymentTokenIx = uint8(paymentToken);\n        ERC20 pmtToken = ERC20(resolver.getPaymentToken(paymentTokenIx));\n        pmtToken.safeTransfer(beneficiary, fee);\n    }\n\n    function distributePayments(\n        IRegistry.Lending memory lending,\n        IRegistry.Renting memory renting,\n        uint256 secondsSinceRentStart\n    ) private {\n        uint8 paymentTokenIx = uint8(lending.paymentToken);\n        address pmtToken = resolver.getPaymentToken(paymentTokenIx);\n        uint256 decimals = ERC20(pmtToken).decimals();\n        uint256 scale = 10**decimals;\n        uint256 rentPrice = renting.rentAmount *\n            unpackPrice(lending.dailyRentPrice, scale);\n        uint256 totalRenterPmt = rentPrice * renting.rentDuration;\n        uint256 sendLenderAmt = (secondsSinceRentStart * rentPrice) /\n            SECONDS_IN_DAY;\n        require(totalRenterPmt > 0, \"ReNFT::total renter payment is zero\");\n        require(sendLenderAmt > 0, \"ReNFT::lender payment is zero\");\n        uint256 sendRenterAmt = totalRenterPmt - sendLenderAmt;\n        if (rentFee != 0) {\n            uint256 takenFee = takeFee(sendLenderAmt, lending.paymentToken);\n            sendLenderAmt -= takenFee;\n        }\n        ERC20(pmtToken).safeTransfer(lending.lenderAddress, sendLenderAmt);\n        if (sendRenterAmt > 0) {\n            ERC20(pmtToken).safeTransfer(renting.renterAddress, sendRenterAmt);\n        }\n    }\n\n    function distributeClaimPayment(\n        IRegistry.Lending memory lending,\n        IRegistry.Renting memory renting\n    ) private {\n        uint8 paymentTokenIx = uint8(lending.paymentToken);\n        ERC20 paymentToken = ERC20(resolver.getPaymentToken(paymentTokenIx));\n        uint256 decimals = ERC20(paymentToken).decimals();\n        uint256 scale = 10**decimals;\n        uint256 rentPrice = renting.rentAmount *\n            unpackPrice(lending.dailyRentPrice, scale);\n        uint256 finalAmt = rentPrice * renting.rentDuration;\n        uint256 takenFee = 0;\n        if (rentFee != 0) {\n            takenFee = takeFee(\n                finalAmt,\n                IResolver.PaymentToken(paymentTokenIx)\n            );\n        }\n        paymentToken.safeTransfer(lending.lenderAddress, finalAmt - takenFee);\n    }\n\n    function safeTransfer(\n        CallData memory cd,\n        address from,\n        address to,\n        uint256[] memory tokenID,\n        uint256[] memory lendAmount\n    ) private {\n        if (cd.nftStandard[cd.left] == IRegistry.NFTStandard.E721) {\n            IERC721(cd.nftAddress[cd.left]).transferFrom(\n                from,\n                to,\n                cd.tokenID[cd.left]\n            );\n        } else {\n            IERC1155(cd.nftAddress[cd.left]).safeBatchTransferFrom(\n                from,\n                to,\n                tokenID,\n                lendAmount,\n                \"\"\n            );\n        }\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function getLending(\n        address nftAddress,\n        uint256 tokenID,\n        uint256 _lendingID\n    )\n        external\n        view\n        returns (\n            uint8,\n            address,\n            uint8,\n            bytes4,\n            uint16,\n            uint16,\n            uint8\n        )\n    {\n        bytes32 identifier = keccak256(\n            abi.encodePacked(nftAddress, tokenID, _lendingID)\n        );\n        IRegistry.Lending storage lending = lendings[identifier];\n        return (\n            uint8(lending.nftStandard),\n            lending.lenderAddress,\n            lending.maxRentDuration,\n            lending.dailyRentPrice,\n            lending.lendAmount,\n            lending.availableAmount,\n            uint8(lending.paymentToken)\n        );\n    }\n\n    function getRenting(\n        address nftAddress,\n        uint256 tokenID,\n        uint256 _rentingID\n    )\n        external\n        view\n        returns (\n            address,\n            uint16,\n            uint8,\n            uint32\n        )\n    {\n        bytes32 identifier = keccak256(\n            abi.encodePacked(nftAddress, tokenID, _rentingID)\n        );\n        IRegistry.Renting storage renting = rentings[identifier];\n        return (\n            renting.renterAddress,\n            renting.rentAmount,\n            renting.rentDuration,\n            renting.rentedAt\n        );\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function createLendCallData(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory lendAmount,\n        uint8[] memory maxRentDuration,\n        bytes4[] memory dailyRentPrice,\n        IResolver.PaymentToken[] memory paymentToken\n    ) private pure returns (CallData memory cd) {\n        cd = CallData({\n            left: 0,\n            right: 1,\n            nftStandard: nftStandard,\n            nftAddress: nftAddress,\n            tokenID: tokenID,\n            lendAmount: lendAmount,\n            lendingID: new uint256[](0),\n            rentingID: new uint256[](0),\n            rentDuration: new uint8[](0),\n            rentAmount: new uint256[](0),\n            maxRentDuration: maxRentDuration,\n            dailyRentPrice: dailyRentPrice,\n            paymentToken: paymentToken\n        });\n    }\n\n    function createRentCallData(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint8[] memory rentDuration,\n        uint256[] memory rentAmount\n    ) private pure returns (CallData memory cd) {\n        cd = CallData({\n            left: 0,\n            right: 1,\n            nftStandard: nftStandard,\n            nftAddress: nftAddress,\n            tokenID: tokenID,\n            lendAmount: new uint256[](0),\n            lendingID: _lendingID,\n            rentingID: new uint256[](0),\n            rentDuration: rentDuration,\n            rentAmount: rentAmount,\n            maxRentDuration: new uint8[](0),\n            dailyRentPrice: new bytes4[](0),\n            paymentToken: new IResolver.PaymentToken[](0)\n        });\n    }\n\n    function createActionCallData(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint256[] memory _rentingID\n    ) private pure returns (CallData memory cd) {\n        cd = CallData({\n            left: 0,\n            right: 1,\n            nftStandard: nftStandard,\n            nftAddress: nftAddress,\n            tokenID: tokenID,\n            lendAmount: new uint256[](0),\n            lendingID: _lendingID,\n            rentingID: _rentingID,\n            rentDuration: new uint8[](0),\n            rentAmount: new uint256[](0),\n            maxRentDuration: new uint8[](0),\n            dailyRentPrice: new bytes4[](0),\n            paymentToken: new IResolver.PaymentToken[](0)\n        });\n    }\n\n    function unpackPrice(bytes4 price, uint256 scale)\n        private\n        pure\n        returns (uint256)\n    {\n        ensureIsUnpackablePrice(price, scale);\n        uint16 whole = uint16(bytes2(price));\n        uint16 decimal = uint16(bytes2(price << 16));\n        uint256 decimalScale = scale / 10000;\n        if (whole > 9999) {\n            whole = 9999;\n        }\n        if (decimal > 9999) {\n            decimal = 9999;\n        }\n        uint256 w = whole * scale;\n        uint256 d = decimal * decimalScale;\n        uint256 fullPrice = w + d;\n        return fullPrice;\n    }\n\n    function sliceArr(\n        uint256[] memory arr,\n        uint256 fromIx,\n        uint256 toIx,\n        uint256 arrOffset\n    ) private pure returns (uint256[] memory r) {\n        r = new uint256[](toIx - fromIx);\n        for (uint256 i = fromIx; i < toIx; i++) {\n            r[i - fromIx] = arr[i - arrOffset];\n        }\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function ensureIsNotZeroAddr(address addr) private pure {\n        require(addr != address(0), \"ReNFT::zero address\");\n    }\n\n    function ensureIsZeroAddr(address addr) private pure {\n        require(addr == address(0), \"ReNFT::not a zero address\");\n    }\n\n    function ensureIsNull(Lending memory lending) private pure {\n        ensureIsZeroAddr(lending.lenderAddress);\n        require(lending.maxRentDuration == 0, \"ReNFT::duration not zero\");\n        require(lending.dailyRentPrice == 0, \"ReNFT::rent price not zero\");\n    }\n\n    function ensureIsNotNull(Lending memory lending) private pure {\n        ensureIsNotZeroAddr(lending.lenderAddress);\n        require(lending.maxRentDuration != 0, \"ReNFT::duration zero\");\n        require(lending.dailyRentPrice != 0, \"ReNFT::rent price is zero\");\n    }\n\n    function ensureIsNull(Renting memory renting) private pure {\n        ensureIsZeroAddr(renting.renterAddress);\n        require(renting.rentDuration == 0, \"ReNFT::duration not zero\");\n        require(renting.rentedAt == 0, \"ReNFT::rented at not zero\");\n    }\n\n    function ensureIsNotNull(Renting memory renting) private pure {\n        ensureIsNotZeroAddr(renting.renterAddress);\n        require(renting.rentDuration != 0, \"ReNFT::duration is zero\");\n        require(renting.rentedAt != 0, \"ReNFT::rented at is zero\");\n    }\n\n    function ensureIsLendable(CallData memory cd, uint256 i) private pure {\n        require(cd.lendAmount[i] > 0, \"ReNFT::lend amount is zero\");\n        require(cd.lendAmount[i] <= type(uint16).max, \"ReNFT::not uint16\");\n        require(cd.maxRentDuration[i] > 0, \"ReNFT::duration is zero\");\n        require(cd.maxRentDuration[i] <= type(uint8).max, \"ReNFT::not uint8\");\n        require(uint32(cd.dailyRentPrice[i]) > 0, \"ReNFT::rent price is zero\");\n    }\n\n    function ensureIsRentable(\n        Lending memory lending,\n        CallData memory cd,\n        uint256 i,\n        address msgSender\n    ) private pure {\n        require(msgSender != lending.lenderAddress, \"ReNFT::cant rent own nft\");\n        require(cd.rentDuration[i] <= type(uint8).max, \"ReNFT::not uint8\");\n        require(cd.rentDuration[i] > 0, \"ReNFT::duration is zero\");\n        require(cd.rentAmount[i] <= type(uint16).max, \"ReNFT::not uint16\");\n        require(cd.rentAmount[i] > 0, \"ReNFT::rentAmount is zero\");\n        require(\n            cd.rentDuration[i] <= lending.maxRentDuration,\n            \"ReNFT::rent duration exceeds allowed max\"\n        );\n    }\n\n    function ensureIsReturnable(\n        Renting memory renting,\n        address msgSender,\n        uint256 blockTimestamp\n    ) private pure {\n        require(renting.renterAddress == msgSender, \"ReNFT::not renter\");\n        require(\n            !isPastReturnDate(renting, blockTimestamp),\n            \"ReNFT::past return date\"\n        );\n    }\n\n    function ensureIsStoppable(Lending memory lending, address msgSender)\n        private\n        pure\n    {\n        require(lending.lenderAddress == msgSender, \"ReNFT::not lender\");\n    }\n\n    function ensureIsUnpackablePrice(bytes4 price, uint256 scale) private pure {\n        require(uint32(price) > 0, \"ReNFT::invalid price\");\n        require(scale >= 10000, \"ReNFT::invalid scale\");\n    }\n\n    function ensureTokenNotSentinel(uint8 paymentIx) private pure {\n        require(paymentIx > 0, \"ReNFT::token is sentinel\");\n    }\n\n    function ensureIsClaimable(\n        IRegistry.Renting memory renting,\n        uint256 blockTimestamp\n    ) private pure {\n        require(\n            isPastReturnDate(renting, blockTimestamp),\n            \"ReNFT::return date not passed\"\n        );\n    }\n\n    function isPastReturnDate(Renting memory renting, uint256 nowTime)\n        private\n        pure\n        returns (bool)\n    {\n        require(nowTime > renting.rentedAt, \"ReNFT::now before rented\");\n        return\n            nowTime - renting.rentedAt > renting.rentDuration * SECONDS_IN_DAY;\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function setRentFee(uint256 newRentFee) external onlyAdmin {\n        require(newRentFee < 10000, \"ReNFT::fee exceeds 100pct\");\n        rentFee = newRentFee;\n    }\n\n    function setBeneficiary(address payable newBeneficiary) external onlyAdmin {\n        beneficiary = newBeneficiary;\n    }\n\n    function setPaused(bool newPaused) external onlyAdmin {\n        paused = newPaused;\n    }\n}\n\n//              @@@@@@@@@@@@@@@@        ,@@@@@@@@@@@@@@@@\n//              @@@,,,,,,,,,,@@@        ,@@&,,,,,,,,,,@@@\n//         @@@@@@@@,,,,,,,,,,@@@@@@@@&  ,@@&,,,,,,,,,,@@@@@@@@\n//         @@@**********@@@@@@@@@@@@@&  ,@@@@@@@@**********@@@\n//         @@@**********@@@@@@@@@@@@@&  ,@@@@@@@@**********@@@@@@@@\n//         @@@**********@@@@@@@@@@@@@&       .@@@**********@@@@@@@@\n//    @@@@@@@@**********@@@@@@@@@@@@@&       .@@@**********@@@@@@@@\n//    @@@**********@@@@@@@@@@@@@&            .@@@@@@@@**********@@@\n//    @@@**********@@@@@@@@@@@@@&            .@@@@@@@@**********@@@@@@@@\n//    @@@@@@@@**********@@@@@@@@&            .@@@**********@@@@@@@@@@@@@\n//    @@@@@@@@//////////@@@@@@@@&            .@@@//////////@@@@@@@@@@@@@\n//         @@@//////////@@@@@@@@&            .@@@//////////@@@@@@@@@@@@@\n//         @@@//////////@@@@@@@@&       ,@@@@@@@@//////////@@@@@@@@@@@@@\n//         @@@%%%%%/////(((((@@@&       ,@@@(((((/////%%%%%@@@@@@@@\n//         @@@@@@@@//////////@@@@@@@@&  ,@@@//////////@@@@@@@@@@@@@\n//              @@@%%%%%%%%%%@@@@@@@@&  ,@@@%%%%%%%%%%@@@@@@@@@@@@@\n//              @@@@@@@@@@@@@@@@@@@@@&  ,@@@@@@@@@@@@@@@@@@@@@@@@@@\n//                   @@@@@@@@@@@@@@@@&        @@@@@@@@@@@@@@@@\n//                   @@@@@@@@@@@@@@@@&        @@@@@@@@@@@@@@@@\n",
  "sourceMap": "2113:25897:15:-:0;;;2356:1;2328:29;;;;2363;;2398:26;;;-1:-1:-1;;2398:26:15;;;-1:-1:-1;2430:26:15;;2807:353;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2930:32;2950:11;2930:19;:32::i;:::-;2972:35;2992:14;2972:19;:35::i;:::-;3017:29;3037:8;3017:19;:29::i;:::-;3056:8;:33;;-1:-1:-1;;;;;3056:33:15;;;-1:-1:-1;;;;;;3056:33:15;;;;;;;3099:11;:28;;;;;;;;;;;;;;;3056:33;3137:16;;;;;;;;;;;2113:25897;;23535:123;-1:-1:-1;;;;;23609:18:15;;23601:50;;;;-1:-1:-1;;;23601:50:15;;748:2:18;23601:50:15;;;730:21:18;787:2;767:18;;;760:30;826:21;806:18;;;799:49;865:18;;23601:50:15;;;;;;;;23535:123;:::o;14:527:18:-;110:6;118;126;179:2;167:9;158:7;154:23;150:32;147:52;;;195:1;192;185:12;147:52;227:9;221:16;246:31;271:5;246:31;:::i;:::-;346:2;331:18;;325:25;296:5;;-1:-1:-1;359:33:18;325:25;359:33;:::i;:::-;463:2;448:18;;442:25;411:7;;-1:-1:-1;476:33:18;442:25;476:33;:::i;:::-;528:7;518:17;;;14:527;;;;;:::o;894:131::-;-1:-1:-1;;;;;969:31:18;;959:42;;949:70;;1015:1;1012;1005:12;894:131;2113:25897:15;;;;;;",
  "sourcePath": "contracts/Registry.sol",
  "type": "contract"
}