{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uri_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/ERC1155.sol",
    "18": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Address.sol",
    "19": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol",
    "2": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155.sol",
    "21": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/introspection/ERC165.sol",
    "22": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/introspection/IERC165.sol",
    "3": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155Receiver.sol",
    "4": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol"
  },
  "ast": {
    "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/ERC1155.sol",
    "exportedSymbols": {
      "Address": [
        6095
      ],
      "Context": [
        5798
      ],
      "ERC1155": [
        5232
      ],
      "ERC165": [
        5751
      ],
      "IERC1155": [
        3075
      ],
      "IERC1155MetadataURI": [
        6128
      ],
      "IERC1155Receiver": [
        5727
      ],
      "IERC165": [
        5686
      ]
    },
    "id": 5233,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4153,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:1"
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155.sol",
        "file": "./IERC1155.sol",
        "id": 4154,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5233,
        "sourceUnit": 3076,
        "src": "58:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155Receiver.sol",
        "file": "./IERC1155Receiver.sol",
        "id": 4155,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5233,
        "sourceUnit": 5728,
        "src": "83:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "file": "./extensions/IERC1155MetadataURI.sol",
        "id": 4156,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5233,
        "sourceUnit": 6129,
        "src": "116:46:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 4157,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5233,
        "sourceUnit": 6096,
        "src": "163:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 4158,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5233,
        "sourceUnit": 5799,
        "src": "197:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 4159,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5233,
        "sourceUnit": 5752,
        "src": "231:46:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4161,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5798,
              "src": "514:7:1"
            },
            "id": 4162,
            "nodeType": "InheritanceSpecifier",
            "src": "514:7:1"
          },
          {
            "baseName": {
              "id": 4163,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5751,
              "src": "523:6:1"
            },
            "id": 4164,
            "nodeType": "InheritanceSpecifier",
            "src": "523:6:1"
          },
          {
            "baseName": {
              "id": 4165,
              "name": "IERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3075,
              "src": "531:8:1"
            },
            "id": 4166,
            "nodeType": "InheritanceSpecifier",
            "src": "531:8:1"
          },
          {
            "baseName": {
              "id": 4167,
              "name": "IERC1155MetadataURI",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6128,
              "src": "541:19:1"
            },
            "id": 4168,
            "nodeType": "InheritanceSpecifier",
            "src": "541:19:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4160,
          "nodeType": "StructuredDocumentation",
          "src": "279:214:1",
          "text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
        },
        "fullyImplemented": true,
        "id": 5232,
        "linearizedBaseContracts": [
          5232,
          6128,
          3075,
          5751,
          5686,
          5798
        ],
        "name": "ERC1155",
        "nameLocation": "503:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4171,
            "libraryName": {
              "id": 4169,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6095,
              "src": "573:7:1"
            },
            "nodeType": "UsingForDirective",
            "src": "567:26:1",
            "typeName": {
              "id": 4170,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "585:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 4177,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "704:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 5232,
            "src": "648:65:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(address => uint256))"
            },
            "typeName": {
              "id": 4176,
              "keyType": {
                "id": 4172,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "656:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "648:47:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(address => uint256))"
              },
              "valueType": {
                "id": 4175,
                "keyType": {
                  "id": 4173,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "675:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "667:27:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 4174,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "686:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4183,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "823:18:1",
            "nodeType": "VariableDeclaration",
            "scope": 5232,
            "src": "770:71:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 4182,
              "keyType": {
                "id": 4178,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "778:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "770:44:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 4181,
                "keyType": {
                  "id": 4179,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "797:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "789:24:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 4180,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "808:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4185,
            "mutability": "mutable",
            "name": "_uri",
            "nameLocation": "977:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 5232,
            "src": "962:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4184,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "962:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 4195,
              "nodeType": "Block",
              "src": "1063:30:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4192,
                        "name": "uri_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4188,
                        "src": "1081:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 4191,
                      "name": "_setURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4692,
                      "src": "1073:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 4193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1073:13:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4194,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:13:1"
                }
              ]
            },
            "documentation": {
              "id": 4186,
              "nodeType": "StructuredDocumentation",
              "src": "988:38:1",
              "text": " @dev See {_setURI}."
            },
            "id": 4196,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4188,
                  "mutability": "mutable",
                  "name": "uri_",
                  "nameLocation": "1057:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4196,
                  "src": "1043:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4187,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1042:20:1"
            },
            "returnParameters": {
              "id": 4190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:0:1"
            },
            "scope": 5232,
            "src": "1031:62:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5685,
              5750
            ],
            "body": {
              "id": 4226,
              "nodeType": "Block",
              "src": "1268:197:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 4219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 4212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4207,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4199,
                          "src": "1297:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 4209,
                                "name": "IERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3075,
                                "src": "1317:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$3075_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$3075_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              ],
                              "id": 4208,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1312:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 4210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1312:14:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$3075",
                              "typeString": "type(contract IERC1155)"
                            }
                          },
                          "id": 4211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1312:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1297:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 4218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4213,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4199,
                          "src": "1354:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 4215,
                                "name": "IERC1155MetadataURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6128,
                                "src": "1374:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$6128_$",
                                  "typeString": "type(contract IERC1155MetadataURI)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$6128_$",
                                  "typeString": "type(contract IERC1155MetadataURI)"
                                }
                              ],
                              "id": 4214,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1369:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 4216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1369:25:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$6128",
                              "typeString": "type(contract IERC1155MetadataURI)"
                            }
                          },
                          "id": 4217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1369:37:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1354:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1297:109:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 4222,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4199,
                          "src": "1446:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 4220,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1422:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC1155_$5232_$",
                            "typeString": "type(contract super ERC1155)"
                          }
                        },
                        "id": 4221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5750,
                        "src": "1422:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 4223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1422:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1297:161:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4206,
                  "id": 4225,
                  "nodeType": "Return",
                  "src": "1278:180:1"
                }
              ]
            },
            "documentation": {
              "id": 4197,
              "nodeType": "StructuredDocumentation",
              "src": "1099:56:1",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 4227,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1169:17:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4203,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 4201,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5751,
                  "src": "1236:6:1"
                },
                {
                  "id": 4202,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5686,
                  "src": "1244:7:1"
                }
              ],
              "src": "1227:25:1"
            },
            "parameters": {
              "id": 4200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4199,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1194:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4227,
                  "src": "1187:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 4198,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1186:20:1"
            },
            "returnParameters": {
              "id": 4206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4205,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4227,
                  "src": "1262:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4204,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1261:6:1"
            },
            "scope": 5232,
            "src": "1160:305:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6127
            ],
            "body": {
              "id": 4238,
              "nodeType": "Block",
              "src": "1939:28:1",
              "statements": [
                {
                  "expression": {
                    "id": 4236,
                    "name": "_uri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4185,
                    "src": "1956:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 4235,
                  "id": 4237,
                  "nodeType": "Return",
                  "src": "1949:11:1"
                }
              ]
            },
            "documentation": {
              "id": 4228,
              "nodeType": "StructuredDocumentation",
              "src": "1471:388:1",
              "text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
            },
            "functionSelector": "0e89341c",
            "id": 4239,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "1873:3:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4232,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1906:8:1"
            },
            "parameters": {
              "id": 4231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4230,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4239,
                  "src": "1877:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1877:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1876:9:1"
            },
            "returnParameters": {
              "id": 4235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4234,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4239,
                  "src": "1924:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4233,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1924:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1923:15:1"
            },
            "scope": 5232,
            "src": "1864:103:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3013
            ],
            "body": {
              "id": 4266,
              "nodeType": "Block",
              "src": "2204:133:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4251,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4242,
                          "src": "2222:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2241:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2233:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4252,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2233:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2233:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2222:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 4257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2245:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        },
                        "value": "ERC1155: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        }
                      ],
                      "id": 4250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2214:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2214:77:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4259,
                  "nodeType": "ExpressionStatement",
                  "src": "2214:77:1"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4260,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4177,
                        "src": "2308:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 4262,
                      "indexExpression": {
                        "id": 4261,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4244,
                        "src": "2318:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2308:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4264,
                    "indexExpression": {
                      "id": 4263,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4242,
                      "src": "2322:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2308:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4249,
                  "id": 4265,
                  "nodeType": "Return",
                  "src": "2301:29:1"
                }
              ]
            },
            "documentation": {
              "id": 4240,
              "nodeType": "StructuredDocumentation",
              "src": "1973:131:1",
              "text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
            },
            "functionSelector": "00fdd58e",
            "id": 4267,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2118:9:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4246,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2177:8:1"
            },
            "parameters": {
              "id": 4245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4242,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2136:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4267,
                  "src": "2128:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2128:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4244,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2153:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4267,
                  "src": "2145:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2127:29:1"
            },
            "returnParameters": {
              "id": 4249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4248,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4267,
                  "src": "2195:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2194:9:1"
            },
            "scope": 5232,
            "src": "2109:228:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3026
            ],
            "body": {
              "id": 4330,
              "nodeType": "Block",
              "src": "2667:335:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4282,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4271,
                            "src": "2685:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 4283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2685:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 4284,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4274,
                            "src": "2704:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 4285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2704:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2685:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
                        "id": 4287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2716:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
                          "typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
                        },
                        "value": "ERC1155: accounts and ids length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
                          "typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
                        }
                      ],
                      "id": 4281,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2677:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2677:83:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4289,
                  "nodeType": "ExpressionStatement",
                  "src": "2677:83:1"
                },
                {
                  "assignments": [
                    4294
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4294,
                      "mutability": "mutable",
                      "name": "batchBalances",
                      "nameLocation": "2788:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 4330,
                      "src": "2771:30:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4292,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4293,
                        "nodeType": "ArrayTypeName",
                        "src": "2771:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4301,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4298,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4271,
                          "src": "2818:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 4299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2818:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2804:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4295,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2808:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4296,
                        "nodeType": "ArrayTypeName",
                        "src": "2808:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 4300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2804:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2771:63:1"
                },
                {
                  "body": {
                    "id": 4326,
                    "nodeType": "Block",
                    "src": "2891:74:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 4324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4313,
                              "name": "batchBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294,
                              "src": "2905:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 4315,
                            "indexExpression": {
                              "id": 4314,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4303,
                              "src": "2919:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2905:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 4317,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4271,
                                  "src": "2934:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 4319,
                                "indexExpression": {
                                  "id": 4318,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4303,
                                  "src": "2943:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2934:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 4320,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4274,
                                  "src": "2947:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 4322,
                                "indexExpression": {
                                  "id": 4321,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4303,
                                  "src": "2951:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2947:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4316,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4267,
                              "src": "2924:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 4323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2924:30:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2905:49:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4325,
                        "nodeType": "ExpressionStatement",
                        "src": "2905:49:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4306,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4303,
                      "src": "2865:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 4307,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4271,
                        "src": "2869:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 4308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2869:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2865:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4327,
                  "initializationExpression": {
                    "assignments": [
                      4303
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4303,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2858:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4327,
                        "src": "2850:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4302,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2850:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 4305,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 4304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2862:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2850:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 4311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2886:3:1",
                      "subExpression": {
                        "id": 4310,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4303,
                        "src": "2888:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4312,
                    "nodeType": "ExpressionStatement",
                    "src": "2886:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "2845:120:1"
                },
                {
                  "expression": {
                    "id": 4328,
                    "name": "batchBalances",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4294,
                    "src": "2982:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 4280,
                  "id": 4329,
                  "nodeType": "Return",
                  "src": "2975:20:1"
                }
              ]
            },
            "documentation": {
              "id": 4268,
              "nodeType": "StructuredDocumentation",
              "src": "2343:146:1",
              "text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
            },
            "functionSelector": "4e1273f4",
            "id": 4331,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfBatch",
            "nameLocation": "2503:14:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4276,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2619:8:1"
            },
            "parameters": {
              "id": 4275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4271,
                  "mutability": "mutable",
                  "name": "accounts",
                  "nameLocation": "2535:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4331,
                  "src": "2518:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4269,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2518:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4270,
                    "nodeType": "ArrayTypeName",
                    "src": "2518:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4274,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "2562:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4331,
                  "src": "2545:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4272,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2545:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4273,
                    "nodeType": "ArrayTypeName",
                    "src": "2545:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2517:49:1"
            },
            "returnParameters": {
              "id": 4280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4279,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4331,
                  "src": "2645:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4277,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2645:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4278,
                    "nodeType": "ArrayTypeName",
                    "src": "2645:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2644:18:1"
            },
            "scope": 5232,
            "src": "2494:508:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3034
            ],
            "body": {
              "id": 4364,
              "nodeType": "Block",
              "src": "3154:222:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4341,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5788,
                            "src": "3172:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 4342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3172:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 4343,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4334,
                          "src": "3188:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3172:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
                        "id": 4345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3198:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
                          "typeString": "literal_string \"ERC1155: setting approval status for self\""
                        },
                        "value": "ERC1155: setting approval status for self"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
                          "typeString": "literal_string \"ERC1155: setting approval status for self\""
                        }
                      ],
                      "id": 4340,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3164:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3164:78:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4347,
                  "nodeType": "ExpressionStatement",
                  "src": "3164:78:1"
                },
                {
                  "expression": {
                    "id": 4355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4348,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4183,
                          "src": "3253:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 4352,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4349,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5788,
                            "src": "3272:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 4350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3272:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3253:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4353,
                      "indexExpression": {
                        "id": 4351,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4334,
                        "src": "3286:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3253:42:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4354,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4336,
                      "src": "3298:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3253:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4356,
                  "nodeType": "ExpressionStatement",
                  "src": "3253:53:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4358,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5788,
                          "src": "3336:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3336:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4360,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4334,
                        "src": "3350:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4361,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4336,
                        "src": "3360:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4357,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2996,
                      "src": "3321:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 4362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3321:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4363,
                  "nodeType": "EmitStatement",
                  "src": "3316:53:1"
                }
              ]
            },
            "documentation": {
              "id": 4332,
              "nodeType": "StructuredDocumentation",
              "src": "3008:57:1",
              "text": " @dev See {IERC1155-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 4365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "3079:17:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4338,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3145:8:1"
            },
            "parameters": {
              "id": 4337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4334,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3105:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4365,
                  "src": "3097:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4333,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3097:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4336,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "3120:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4365,
                  "src": "3115:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4335,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3115:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3096:33:1"
            },
            "returnParameters": {
              "id": 4339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3154:0:1"
            },
            "scope": 5232,
            "src": "3070:306:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3044
            ],
            "body": {
              "id": 4382,
              "nodeType": "Block",
              "src": "3548:61:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4376,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4183,
                        "src": "3565:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 4378,
                      "indexExpression": {
                        "id": 4377,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4368,
                        "src": "3584:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3565:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 4380,
                    "indexExpression": {
                      "id": 4379,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4370,
                      "src": "3593:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3565:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4375,
                  "id": 4381,
                  "nodeType": "Return",
                  "src": "3558:44:1"
                }
              ]
            },
            "documentation": {
              "id": 4366,
              "nodeType": "StructuredDocumentation",
              "src": "3382:56:1",
              "text": " @dev See {IERC1155-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 4383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "3452:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4372,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3524:8:1"
            },
            "parameters": {
              "id": 4371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4368,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3477:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4383,
                  "src": "3469:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3469:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4370,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3494:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4383,
                  "src": "3486:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3486:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3468:35:1"
            },
            "returnParameters": {
              "id": 4375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4374,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4383,
                  "src": "3542:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4373,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3542:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3541:6:1"
            },
            "scope": 5232,
            "src": "3443:166:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3058
            ],
            "body": {
              "id": 4420,
              "nodeType": "Block",
              "src": "3845:220:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4399,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4386,
                            "src": "3876:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4400,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5788,
                              "src": "3884:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3884:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3876:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 4404,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4386,
                              "src": "3917:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4405,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5788,
                                "src": "3923:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 4406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3923:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4403,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4383,
                            "src": "3900:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 4407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3900:36:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3876:60:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 4409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3950:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
                        },
                        "value": "ERC1155: caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
                        }
                      ],
                      "id": 4398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3855:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3855:148:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4411,
                  "nodeType": "ExpressionStatement",
                  "src": "3855:148:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4413,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4386,
                        "src": "4031:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4414,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4388,
                        "src": "4037:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4415,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4390,
                        "src": "4041:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4416,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4392,
                        "src": "4045:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4417,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4394,
                        "src": "4053:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4412,
                      "name": "_safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4555,
                      "src": "4013:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 4418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4013:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4419,
                  "nodeType": "ExpressionStatement",
                  "src": "4013:45:1"
                }
              ]
            },
            "documentation": {
              "id": 4384,
              "nodeType": "StructuredDocumentation",
              "src": "3615:56:1",
              "text": " @dev See {IERC1155-safeTransferFrom}."
            },
            "functionSelector": "f242432a",
            "id": 4421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "3685:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4396,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3836:8:1"
            },
            "parameters": {
              "id": 4395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4386,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3719:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4421,
                  "src": "3711:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4385,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3711:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4388,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3741:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4421,
                  "src": "3733:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3733:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4390,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3761:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4421,
                  "src": "3753:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4389,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3753:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4392,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3781:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4421,
                  "src": "3773:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3773:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4394,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3810:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4421,
                  "src": "3797:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4393,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3797:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3701:119:1"
            },
            "returnParameters": {
              "id": 4397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3845:0:1"
            },
            "scope": 5232,
            "src": "3676:389:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3074
            ],
            "body": {
              "id": 4460,
              "nodeType": "Block",
              "src": "4331:236:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4439,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4424,
                            "src": "4362:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4440,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5788,
                              "src": "4370:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4370:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4362:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 4444,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4424,
                              "src": "4403:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4445,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5788,
                                "src": "4409:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 4446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4409:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4443,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4383,
                            "src": "4386:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 4447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4386:36:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4362:60:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 4449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4436:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
                          "typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC1155: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
                          "typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 4438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4341:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4341:157:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4451,
                  "nodeType": "ExpressionStatement",
                  "src": "4341:157:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4453,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4424,
                        "src": "4531:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4454,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4426,
                        "src": "4537:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4455,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4429,
                        "src": "4541:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 4456,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4432,
                        "src": "4546:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 4457,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4434,
                        "src": "4555:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4452,
                      "name": "_safeBatchTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4681,
                      "src": "4508:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 4458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4508:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4459,
                  "nodeType": "ExpressionStatement",
                  "src": "4508:52:1"
                }
              ]
            },
            "documentation": {
              "id": 4422,
              "nodeType": "StructuredDocumentation",
              "src": "4071:61:1",
              "text": " @dev See {IERC1155-safeBatchTransferFrom}."
            },
            "functionSelector": "2eb2c2d6",
            "id": 4461,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeBatchTransferFrom",
            "nameLocation": "4146:21:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4436,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4322:8:1"
            },
            "parameters": {
              "id": 4435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4424,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4185:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4461,
                  "src": "4177:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4177:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4426,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4207:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4461,
                  "src": "4199:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4199:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4429,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "4236:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4461,
                  "src": "4219:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4427,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4219:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4428,
                    "nodeType": "ArrayTypeName",
                    "src": "4219:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4432,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "4266:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4461,
                  "src": "4249:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4430,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4249:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4431,
                    "nodeType": "ArrayTypeName",
                    "src": "4249:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4434,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4296:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4461,
                  "src": "4283:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4433,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4283:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4167:139:1"
            },
            "returnParameters": {
              "id": 4437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4331:0:1"
            },
            "scope": 5232,
            "src": "4137:430:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4554,
              "nodeType": "Block",
              "src": "5180:634:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4476,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4466,
                          "src": "5198:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5212:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5204:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4477,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5204:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5204:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5198:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 4482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5216:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        },
                        "value": "ERC1155: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        }
                      ],
                      "id": 4475,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5190:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5190:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4484,
                  "nodeType": "ExpressionStatement",
                  "src": "5190:66:1"
                },
                {
                  "assignments": [
                    4486
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4486,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "5275:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 4554,
                      "src": "5267:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4485,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5267:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4489,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4487,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5788,
                      "src": "5286:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5286:12:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5267:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4491,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4486,
                        "src": "5330:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4492,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4464,
                        "src": "5340:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4493,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4466,
                        "src": "5346:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4495,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4468,
                            "src": "5368:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4494,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5231,
                          "src": "5350:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 4496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5350:21:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4498,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4470,
                            "src": "5391:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4497,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5231,
                          "src": "5373:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 4499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5373:25:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 4500,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4472,
                        "src": "5400:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4490,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5075,
                      "src": "5309:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 4501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5309:96:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4502,
                  "nodeType": "ExpressionStatement",
                  "src": "5309:96:1"
                },
                {
                  "assignments": [
                    4504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4504,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "5424:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 4554,
                      "src": "5416:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4503,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5416:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4510,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4505,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4177,
                        "src": "5438:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 4507,
                      "indexExpression": {
                        "id": 4506,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4468,
                        "src": "5448:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5438:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4509,
                    "indexExpression": {
                      "id": 4508,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4464,
                      "src": "5452:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5438:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5416:41:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4512,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4504,
                          "src": "5475:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4513,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4470,
                          "src": "5490:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5475:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
                        "id": 4515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5498:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                          "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                        },
                        "value": "ERC1155: insufficient balance for transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                          "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                        }
                      ],
                      "id": 4511,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5467:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5467:76:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4517,
                  "nodeType": "ExpressionStatement",
                  "src": "5467:76:1"
                },
                {
                  "id": 4528,
                  "nodeType": "UncheckedBlock",
                  "src": "5553:77:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 4526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 4518,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4177,
                              "src": "5577:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 4521,
                            "indexExpression": {
                              "id": 4519,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4468,
                              "src": "5587:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5577:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4522,
                          "indexExpression": {
                            "id": 4520,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4464,
                            "src": "5591:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "5577:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4523,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4504,
                            "src": "5599:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 4524,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4470,
                            "src": "5613:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5599:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5577:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4527,
                      "nodeType": "ExpressionStatement",
                      "src": "5577:42:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 4535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4529,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4177,
                          "src": "5639:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 4532,
                        "indexExpression": {
                          "id": 4530,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4468,
                          "src": "5649:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5639:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4533,
                      "indexExpression": {
                        "id": 4531,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4466,
                        "src": "5653:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5639:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 4534,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4470,
                      "src": "5660:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5639:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4536,
                  "nodeType": "ExpressionStatement",
                  "src": "5639:27:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4538,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4486,
                        "src": "5697:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4539,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4464,
                        "src": "5707:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4540,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4466,
                        "src": "5713:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4541,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4468,
                        "src": "5717:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4542,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4470,
                        "src": "5721:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4537,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2972,
                      "src": "5682:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 4543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5682:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4544,
                  "nodeType": "EmitStatement",
                  "src": "5677:51:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4546,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4486,
                        "src": "5770:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4547,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4464,
                        "src": "5780:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4548,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4466,
                        "src": "5786:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4549,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4468,
                        "src": "5790:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4550,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4470,
                        "src": "5794:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4551,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4472,
                        "src": "5802:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4545,
                      "name": "_doSafeTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5138,
                      "src": "5739:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 4552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5739:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4553,
                  "nodeType": "ExpressionStatement",
                  "src": "5739:68:1"
                }
              ]
            },
            "documentation": {
              "id": 4462,
              "nodeType": "StructuredDocumentation",
              "src": "4573:439:1",
              "text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
            },
            "id": 4555,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransferFrom",
            "nameLocation": "5026:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4464,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5061:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4555,
                  "src": "5053:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5053:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4466,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5083:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4555,
                  "src": "5075:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5075:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4468,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5103:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4555,
                  "src": "5095:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5095:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4470,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5123:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4555,
                  "src": "5115:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5115:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4472,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5152:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4555,
                  "src": "5139:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4471,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5139:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5043:119:1"
            },
            "returnParameters": {
              "id": 4474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5180:0:1"
            },
            "scope": 5232,
            "src": "5017:797:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4680,
              "nodeType": "Block",
              "src": "6348:857:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4572,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4563,
                            "src": "6366:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 4573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6366:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 4574,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4566,
                            "src": "6380:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 4575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6380:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6366:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 4577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6396:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 4571,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6358:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6358:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4579,
                  "nodeType": "ExpressionStatement",
                  "src": "6358:81:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4581,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4560,
                          "src": "6457:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6471:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6463:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4582,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6463:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6463:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6457:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 4587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6475:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        },
                        "value": "ERC1155: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        }
                      ],
                      "id": 4580,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6449:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6449:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4589,
                  "nodeType": "ExpressionStatement",
                  "src": "6449:66:1"
                },
                {
                  "assignments": [
                    4591
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4591,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "6534:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 4680,
                      "src": "6526:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4590,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6526:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4594,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4592,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5788,
                      "src": "6545:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6545:12:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6526:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4596,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4591,
                        "src": "6589:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4597,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4558,
                        "src": "6599:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4598,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4560,
                        "src": "6605:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4599,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4563,
                        "src": "6609:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 4600,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4566,
                        "src": "6614:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 4601,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4568,
                        "src": "6623:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4595,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5075,
                      "src": "6568:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 4602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6568:60:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4603,
                  "nodeType": "ExpressionStatement",
                  "src": "6568:60:1"
                },
                {
                  "body": {
                    "id": 4661,
                    "nodeType": "Block",
                    "src": "6680:370:1",
                    "statements": [
                      {
                        "assignments": [
                          4616
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4616,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "6702:2:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 4661,
                            "src": "6694:10:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4615,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6694:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4620,
                        "initialValue": {
                          "baseExpression": {
                            "id": 4617,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4563,
                            "src": "6707:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 4619,
                          "indexExpression": {
                            "id": 4618,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4605,
                            "src": "6711:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6707:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6694:19:1"
                      },
                      {
                        "assignments": [
                          4622
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4622,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "6735:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 4661,
                            "src": "6727:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4621,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6727:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4626,
                        "initialValue": {
                          "baseExpression": {
                            "id": 4623,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4566,
                            "src": "6744:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 4625,
                          "indexExpression": {
                            "id": 4624,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4605,
                            "src": "6752:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6744:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6727:27:1"
                      },
                      {
                        "assignments": [
                          4628
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4628,
                            "mutability": "mutable",
                            "name": "fromBalance",
                            "nameLocation": "6777:11:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 4661,
                            "src": "6769:19:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4627,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6769:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4634,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 4629,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4177,
                              "src": "6791:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 4631,
                            "indexExpression": {
                              "id": 4630,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4616,
                              "src": "6801:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6791:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4633,
                          "indexExpression": {
                            "id": 4632,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4558,
                            "src": "6805:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6791:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6769:41:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4636,
                                "name": "fromBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4628,
                                "src": "6832:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 4637,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4622,
                                "src": "6847:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6832:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
                              "id": 4639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6855:44:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                                "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                              },
                              "value": "ERC1155: insufficient balance for transfer"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                                "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                              }
                            ],
                            "id": 4635,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6824:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6824:76:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4641,
                        "nodeType": "ExpressionStatement",
                        "src": "6824:76:1"
                      },
                      {
                        "id": 4652,
                        "nodeType": "UncheckedBlock",
                        "src": "6914:85:1",
                        "statements": [
                          {
                            "expression": {
                              "id": 4650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 4642,
                                    "name": "_balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4177,
                                    "src": "6942:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 4645,
                                  "indexExpression": {
                                    "id": 4643,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4616,
                                    "src": "6952:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6942:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 4646,
                                "indexExpression": {
                                  "id": 4644,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4558,
                                  "src": "6956:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "6942:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4647,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4628,
                                  "src": "6964:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 4648,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4622,
                                  "src": "6978:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6964:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6942:42:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 4651,
                            "nodeType": "ExpressionStatement",
                            "src": "6942:42:1"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 4659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 4653,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4177,
                                "src": "7012:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 4656,
                              "indexExpression": {
                                "id": 4654,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4616,
                                "src": "7022:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7012:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 4657,
                            "indexExpression": {
                              "id": 4655,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4560,
                              "src": "7026:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7012:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 4658,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4622,
                            "src": "7033:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7012:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4660,
                        "nodeType": "ExpressionStatement",
                        "src": "7012:27:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4608,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4605,
                      "src": "6659:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 4609,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4563,
                        "src": "6663:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 4610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6663:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6659:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4662,
                  "initializationExpression": {
                    "assignments": [
                      4605
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4605,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6652:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4662,
                        "src": "6644:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4604,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6644:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 4607,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 4606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6656:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6644:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 4613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "6675:3:1",
                      "subExpression": {
                        "id": 4612,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4605,
                        "src": "6677:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4614,
                    "nodeType": "ExpressionStatement",
                    "src": "6675:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "6639:411:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4664,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4591,
                        "src": "7079:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4665,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4558,
                        "src": "7089:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4666,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4560,
                        "src": "7095:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4667,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4563,
                        "src": "7099:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 4668,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4566,
                        "src": "7104:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 4663,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2987,
                      "src": "7065:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 4669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7065:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4670,
                  "nodeType": "EmitStatement",
                  "src": "7060:52:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4672,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4591,
                        "src": "7159:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4673,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4558,
                        "src": "7169:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4674,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4560,
                        "src": "7175:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4675,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4563,
                        "src": "7179:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 4676,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4566,
                        "src": "7184:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 4677,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4568,
                        "src": "7193:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4671,
                      "name": "_doSafeBatchTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5203,
                      "src": "7123:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 4678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7123:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4679,
                  "nodeType": "ExpressionStatement",
                  "src": "7123:75:1"
                }
              ]
            },
            "documentation": {
              "id": 4556,
              "nodeType": "StructuredDocumentation",
              "src": "5820:335:1",
              "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
            },
            "id": 4681,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeBatchTransferFrom",
            "nameLocation": "6169:22:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4558,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6209:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4681,
                  "src": "6201:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6201:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4560,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6231:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4681,
                  "src": "6223:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6223:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4563,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "6260:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4681,
                  "src": "6243:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4561,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6243:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4562,
                    "nodeType": "ArrayTypeName",
                    "src": "6243:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4566,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "6290:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4681,
                  "src": "6273:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4564,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6273:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4565,
                    "nodeType": "ArrayTypeName",
                    "src": "6273:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4568,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6320:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4681,
                  "src": "6307:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4567,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6307:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6191:139:1"
            },
            "returnParameters": {
              "id": 4570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6348:0:1"
            },
            "scope": 5232,
            "src": "6160:1045:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4691,
              "nodeType": "Block",
              "src": "8084:30:1",
              "statements": [
                {
                  "expression": {
                    "id": 4689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4687,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4185,
                      "src": "8094:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4688,
                      "name": "newuri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4684,
                      "src": "8101:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8094:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4690,
                  "nodeType": "ExpressionStatement",
                  "src": "8094:13:1"
                }
              ]
            },
            "documentation": {
              "id": 4682,
              "nodeType": "StructuredDocumentation",
              "src": "7211:812:1",
              "text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
            },
            "id": 4692,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setURI",
            "nameLocation": "8037:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4684,
                  "mutability": "mutable",
                  "name": "newuri",
                  "nameLocation": "8059:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4692,
                  "src": "8045:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4683,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8045:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8044:22:1"
            },
            "returnParameters": {
              "id": 4686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8084:0:1"
            },
            "scope": 5232,
            "src": "8028:86:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4766,
              "nodeType": "Block",
              "src": "8636:449:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4705,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4695,
                          "src": "8654:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8673:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8665:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4706,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8665:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8665:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8654:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 4711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8677:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        },
                        "value": "ERC1155: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        }
                      ],
                      "id": 4704,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8646:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8646:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4713,
                  "nodeType": "ExpressionStatement",
                  "src": "8646:67:1"
                },
                {
                  "assignments": [
                    4715
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4715,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "8732:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 4766,
                      "src": "8724:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4714,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8724:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4718,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4716,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5788,
                      "src": "8743:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8743:12:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8724:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4720,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4715,
                        "src": "8787:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8805:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8797:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4721,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8797:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8797:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4725,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4695,
                        "src": "8809:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4727,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4697,
                            "src": "8836:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4726,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5231,
                          "src": "8818:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 4728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8818:21:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4730,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4699,
                            "src": "8859:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4729,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5231,
                          "src": "8841:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 4731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8841:25:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 4732,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4701,
                        "src": "8868:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4719,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5075,
                      "src": "8766:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 4733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8766:107:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4734,
                  "nodeType": "ExpressionStatement",
                  "src": "8766:107:1"
                },
                {
                  "expression": {
                    "id": 4741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4735,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4177,
                          "src": "8884:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 4738,
                        "indexExpression": {
                          "id": 4736,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4697,
                          "src": "8894:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8884:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4739,
                      "indexExpression": {
                        "id": 4737,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4695,
                        "src": "8898:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8884:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 4740,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4699,
                      "src": "8910:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8884:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4742,
                  "nodeType": "ExpressionStatement",
                  "src": "8884:32:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4744,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4715,
                        "src": "8946:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8964:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8956:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4745,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8956:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8956:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4749,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4695,
                        "src": "8968:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4750,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4697,
                        "src": "8977:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4751,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4699,
                        "src": "8981:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4743,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2972,
                      "src": "8931:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 4752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8931:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4753,
                  "nodeType": "EmitStatement",
                  "src": "8926:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4755,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4715,
                        "src": "9030:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9048:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9040:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4756,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9040:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9040:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4760,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4695,
                        "src": "9052:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4761,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4697,
                        "src": "9061:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4762,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4699,
                        "src": "9065:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4763,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4701,
                        "src": "9073:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4754,
                      "name": "_doSafeTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5138,
                      "src": "8999:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 4764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8999:79:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4765,
                  "nodeType": "ExpressionStatement",
                  "src": "8999:79:1"
                }
              ]
            },
            "documentation": {
              "id": 4693,
              "nodeType": "StructuredDocumentation",
              "src": "8120:377:1",
              "text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n Emits a {TransferSingle} event.\n Requirements:\n - `account` cannot be the zero address.\n - If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
            },
            "id": 4767,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8511:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4695,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8534:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4767,
                  "src": "8526:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8526:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4697,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "8559:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4767,
                  "src": "8551:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8551:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4699,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8579:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4767,
                  "src": "8571:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8571:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4701,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8608:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4767,
                  "src": "8595:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4700,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8595:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8516:102:1"
            },
            "returnParameters": {
              "id": 4703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8636:0:1"
            },
            "scope": 5232,
            "src": "8502:583:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4865,
              "nodeType": "Block",
              "src": "9584:561:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4782,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4770,
                          "src": "9602:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9616:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9608:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4783,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9608:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9608:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9602:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 4788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9620:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        },
                        "value": "ERC1155: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        }
                      ],
                      "id": 4781,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9594:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9594:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4790,
                  "nodeType": "ExpressionStatement",
                  "src": "9594:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4792,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4773,
                            "src": "9674:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 4793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9674:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 4794,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4776,
                            "src": "9688:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 4795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9688:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9674:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 4797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9704:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 4791,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9666:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9666:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4799,
                  "nodeType": "ExpressionStatement",
                  "src": "9666:81:1"
                },
                {
                  "assignments": [
                    4801
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4801,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "9766:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 4865,
                      "src": "9758:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4800,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9758:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4804,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4802,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5788,
                      "src": "9777:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9777:12:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9758:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4806,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4801,
                        "src": "9821:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9839:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9831:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4807,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9831:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9831:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4811,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4770,
                        "src": "9843:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4812,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4773,
                        "src": "9847:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 4813,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4776,
                        "src": "9852:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 4814,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4778,
                        "src": "9861:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4805,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5075,
                      "src": "9800:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 4815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9800:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4816,
                  "nodeType": "ExpressionStatement",
                  "src": "9800:66:1"
                },
                {
                  "body": {
                    "id": 4840,
                    "nodeType": "Block",
                    "src": "9918:60:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 4838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 4828,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4177,
                                "src": "9932:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 4833,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 4829,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4773,
                                  "src": "9942:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 4831,
                                "indexExpression": {
                                  "id": 4830,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4818,
                                  "src": "9946:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9942:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9932:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 4834,
                            "indexExpression": {
                              "id": 4832,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4770,
                              "src": "9950:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9932:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 4835,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4776,
                              "src": "9957:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 4837,
                            "indexExpression": {
                              "id": 4836,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4818,
                              "src": "9965:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9957:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9932:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4839,
                        "nodeType": "ExpressionStatement",
                        "src": "9932:35:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4821,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4818,
                      "src": "9897:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 4822,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4773,
                        "src": "9901:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 4823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9901:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9897:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4841,
                  "initializationExpression": {
                    "assignments": [
                      4818
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4818,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9890:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4841,
                        "src": "9882:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4817,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9882:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 4820,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 4819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9894:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9882:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 4826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9913:3:1",
                      "subExpression": {
                        "id": 4825,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4818,
                        "src": "9913:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4827,
                    "nodeType": "ExpressionStatement",
                    "src": "9913:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "9877:101:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4843,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4801,
                        "src": "10007:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10025:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10017:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4844,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10017:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10017:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4848,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4770,
                        "src": "10029:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4849,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4773,
                        "src": "10033:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 4850,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4776,
                        "src": "10038:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 4842,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2987,
                      "src": "9993:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 4851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9993:53:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4852,
                  "nodeType": "EmitStatement",
                  "src": "9988:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4854,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4801,
                        "src": "10093:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10111:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10103:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4855,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10103:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10103:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4859,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4770,
                        "src": "10115:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4860,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4773,
                        "src": "10119:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 4861,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4776,
                        "src": "10124:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 4862,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4778,
                        "src": "10133:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4853,
                      "name": "_doSafeBatchTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5203,
                      "src": "10057:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 4863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10057:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4864,
                  "nodeType": "ExpressionStatement",
                  "src": "10057:81:1"
                }
              ]
            },
            "documentation": {
              "id": 4768,
              "nodeType": "StructuredDocumentation",
              "src": "9091:334:1",
              "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
            },
            "id": 4866,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintBatch",
            "nameLocation": "9439:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4770,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9467:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4866,
                  "src": "9459:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9459:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4773,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "9496:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4866,
                  "src": "9479:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4771,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9479:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4772,
                    "nodeType": "ArrayTypeName",
                    "src": "9479:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4776,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "9526:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4866,
                  "src": "9509:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4774,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9509:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4775,
                    "nodeType": "ArrayTypeName",
                    "src": "9509:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4778,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "9556:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4866,
                  "src": "9543:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4777,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9543:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9449:117:1"
            },
            "returnParameters": {
              "id": 4780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9584:0:1"
            },
            "scope": 5232,
            "src": "9430:715:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4944,
              "nodeType": "Block",
              "src": "10501:550:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4877,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4869,
                          "src": "10519:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10538:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10530:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4878,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10530:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10530:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10519:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 4883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10542:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        },
                        "value": "ERC1155: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        }
                      ],
                      "id": 4876,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10511:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10511:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4885,
                  "nodeType": "ExpressionStatement",
                  "src": "10511:69:1"
                },
                {
                  "assignments": [
                    4887
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4887,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "10599:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 4944,
                      "src": "10591:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4886,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10591:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4890,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4888,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5788,
                      "src": "10610:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10610:12:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10591:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4892,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4887,
                        "src": "10654:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4893,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4869,
                        "src": "10664:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10681:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10673:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4894,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10673:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10673:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4899,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4871,
                            "src": "10703:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4898,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5231,
                          "src": "10685:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 4900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10685:21:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4902,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4873,
                            "src": "10726:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4901,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5231,
                          "src": "10708:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 4903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10708:25:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 4904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10735:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 4891,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5075,
                      "src": "10633:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 4905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10633:105:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4906,
                  "nodeType": "ExpressionStatement",
                  "src": "10633:105:1"
                },
                {
                  "assignments": [
                    4908
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4908,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "10757:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 4944,
                      "src": "10749:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4907,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10749:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4914,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4909,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4177,
                        "src": "10774:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 4911,
                      "indexExpression": {
                        "id": 4910,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4871,
                        "src": "10784:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10774:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4913,
                    "indexExpression": {
                      "id": 4912,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4869,
                      "src": "10788:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10774:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10749:47:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4916,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4908,
                          "src": "10814:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4917,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4873,
                          "src": "10832:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10814:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 4919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10840:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                          "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                        },
                        "value": "ERC1155: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                          "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                        }
                      ],
                      "id": 4915,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10806:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10806:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4921,
                  "nodeType": "ExpressionStatement",
                  "src": "10806:73:1"
                },
                {
                  "id": 4932,
                  "nodeType": "UncheckedBlock",
                  "src": "10889:83:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 4930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 4922,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4177,
                              "src": "10913:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 4925,
                            "indexExpression": {
                              "id": 4923,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4871,
                              "src": "10923:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10913:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4926,
                          "indexExpression": {
                            "id": 4924,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4869,
                            "src": "10927:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10913:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4927,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4908,
                            "src": "10938:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 4928,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4873,
                            "src": "10955:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10938:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10913:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4931,
                      "nodeType": "ExpressionStatement",
                      "src": "10913:48:1"
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4934,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4887,
                        "src": "11002:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4935,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4869,
                        "src": "11012:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11029:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11021:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4936,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11021:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11021:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4940,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4871,
                        "src": "11033:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4941,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4873,
                        "src": "11037:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4933,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2972,
                      "src": "10987:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 4942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10987:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4943,
                  "nodeType": "EmitStatement",
                  "src": "10982:62:1"
                }
              ]
            },
            "documentation": {
              "id": 4867,
              "nodeType": "StructuredDocumentation",
              "src": "10151:238:1",
              "text": " @dev Destroys `amount` tokens of token type `id` from `account`\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens of token type `id`."
            },
            "id": 4945,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "10403:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4869,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10426:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4945,
                  "src": "10418:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10418:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4871,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "10451:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4945,
                  "src": "10443:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10443:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4873,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10471:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4945,
                  "src": "10463:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10463:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10408:75:1"
            },
            "returnParameters": {
              "id": 4875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10501:0:1"
            },
            "scope": 5232,
            "src": "10394:657:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5055,
              "nodeType": "Block",
              "src": "11377:762:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4958,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4948,
                          "src": "11395:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11414:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11406:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4959,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11406:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11406:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11395:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 4964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11418:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        },
                        "value": "ERC1155: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        }
                      ],
                      "id": 4957,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11387:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11387:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4966,
                  "nodeType": "ExpressionStatement",
                  "src": "11387:69:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4968,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4951,
                            "src": "11474:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 4969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "11474:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 4970,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4954,
                            "src": "11488:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 4971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "11488:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11474:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 4973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11504:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 4967,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11466:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11466:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4975,
                  "nodeType": "ExpressionStatement",
                  "src": "11466:81:1"
                },
                {
                  "assignments": [
                    4977
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4977,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "11566:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 5055,
                      "src": "11558:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4976,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11558:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4980,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4978,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5788,
                      "src": "11577:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11577:12:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11558:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4982,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4977,
                        "src": "11621:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4983,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4948,
                        "src": "11631:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11648:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11640:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4984,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11640:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11640:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4988,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4951,
                        "src": "11652:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 4989,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4954,
                        "src": "11657:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 4990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11666:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 4981,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5075,
                      "src": "11600:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 4991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11600:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4992,
                  "nodeType": "ExpressionStatement",
                  "src": "11600:69:1"
                },
                {
                  "body": {
                    "id": 5042,
                    "nodeType": "Block",
                    "src": "11721:338:1",
                    "statements": [
                      {
                        "assignments": [
                          5005
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5005,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "11743:2:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 5042,
                            "src": "11735:10:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5004,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11735:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5009,
                        "initialValue": {
                          "baseExpression": {
                            "id": 5006,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4951,
                            "src": "11748:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 5008,
                          "indexExpression": {
                            "id": 5007,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4994,
                            "src": "11752:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11748:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11735:19:1"
                      },
                      {
                        "assignments": [
                          5011
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5011,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "11776:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 5042,
                            "src": "11768:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5010,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11768:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5015,
                        "initialValue": {
                          "baseExpression": {
                            "id": 5012,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4954,
                            "src": "11785:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 5014,
                          "indexExpression": {
                            "id": 5013,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4994,
                            "src": "11793:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11785:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11768:27:1"
                      },
                      {
                        "assignments": [
                          5017
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5017,
                            "mutability": "mutable",
                            "name": "accountBalance",
                            "nameLocation": "11818:14:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 5042,
                            "src": "11810:22:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5016,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11810:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5023,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 5018,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4177,
                              "src": "11835:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 5020,
                            "indexExpression": {
                              "id": 5019,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5005,
                              "src": "11845:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11835:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 5022,
                          "indexExpression": {
                            "id": 5021,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4948,
                            "src": "11849:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11835:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11810:47:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5025,
                                "name": "accountBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5017,
                                "src": "11879:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 5026,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5011,
                                "src": "11897:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11879:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
                              "id": 5028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11905:38:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                                "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                              },
                              "value": "ERC1155: burn amount exceeds balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                                "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                              }
                            ],
                            "id": 5024,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11871:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11871:73:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5030,
                        "nodeType": "ExpressionStatement",
                        "src": "11871:73:1"
                      },
                      {
                        "id": 5041,
                        "nodeType": "UncheckedBlock",
                        "src": "11958:91:1",
                        "statements": [
                          {
                            "expression": {
                              "id": 5039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 5031,
                                    "name": "_balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4177,
                                    "src": "11986:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 5034,
                                  "indexExpression": {
                                    "id": 5032,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5005,
                                    "src": "11996:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11986:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 5035,
                                "indexExpression": {
                                  "id": 5033,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4948,
                                  "src": "12000:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "11986:22:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5038,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 5036,
                                  "name": "accountBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5017,
                                  "src": "12011:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 5037,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5011,
                                  "src": "12028:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12011:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11986:48:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5040,
                            "nodeType": "ExpressionStatement",
                            "src": "11986:48:1"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4997,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4994,
                      "src": "11700:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 4998,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4951,
                        "src": "11704:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 4999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11704:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11700:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5043,
                  "initializationExpression": {
                    "assignments": [
                      4994
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4994,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11693:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 5043,
                        "src": "11685:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4993,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11685:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 4996,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 4995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11697:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11685:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 5002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11716:3:1",
                      "subExpression": {
                        "id": 5001,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4994,
                        "src": "11716:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5003,
                    "nodeType": "ExpressionStatement",
                    "src": "11716:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "11680:379:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5045,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4977,
                        "src": "12088:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5046,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4948,
                        "src": "12098:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12115:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12107:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5047,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12107:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12107:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5051,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4951,
                        "src": "12119:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 5052,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4954,
                        "src": "12124:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 5044,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2987,
                      "src": "12074:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 5053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12074:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5054,
                  "nodeType": "EmitStatement",
                  "src": "12069:63:1"
                }
              ]
            },
            "documentation": {
              "id": 4946,
              "nodeType": "StructuredDocumentation",
              "src": "11057:183:1",
              "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
            },
            "id": 5056,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnBatch",
            "nameLocation": "11254:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4948,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11282:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5056,
                  "src": "11274:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11274:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4951,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "11316:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5056,
                  "src": "11299:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4949,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11299:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4950,
                    "nodeType": "ArrayTypeName",
                    "src": "11299:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4954,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "11346:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5056,
                  "src": "11329:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4952,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11329:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4953,
                    "nodeType": "ArrayTypeName",
                    "src": "11329:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11264:95:1"
            },
            "returnParameters": {
              "id": 4956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11377:0:1"
            },
            "scope": 5232,
            "src": "11245:894:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5074,
              "nodeType": "Block",
              "src": "13285:2:1",
              "statements": []
            },
            "documentation": {
              "id": 5057,
              "nodeType": "StructuredDocumentation",
              "src": "12145:923:1",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 5075,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "13082:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5059,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13120:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5075,
                  "src": "13112:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13112:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5061,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13146:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5075,
                  "src": "13138:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5060,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13138:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5063,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13168:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5075,
                  "src": "13160:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13160:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5066,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "13197:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5075,
                  "src": "13180:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5064,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13180:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5065,
                    "nodeType": "ArrayTypeName",
                    "src": "13180:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5069,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "13227:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5075,
                  "src": "13210:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5067,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13210:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5068,
                    "nodeType": "ArrayTypeName",
                    "src": "13210:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5071,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13257:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5075,
                  "src": "13244:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5070,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13244:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13102:165:1"
            },
            "returnParameters": {
              "id": 5073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13285:0:1"
            },
            "scope": 5232,
            "src": "13073:214:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5137,
              "nodeType": "Block",
              "src": "13486:532:1",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 5090,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5081,
                        "src": "13500:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 5091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5818,
                      "src": "13500:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 5092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13500:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5136,
                  "nodeType": "IfStatement",
                  "src": "13496:516:1",
                  "trueBody": {
                    "id": 5135,
                    "nodeType": "Block",
                    "src": "13517:495:1",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 5117,
                              "nodeType": "Block",
                              "src": "13634:184:1",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 5110,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 5106,
                                      "name": "response",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5104,
                                      "src": "13656:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 5107,
                                          "name": "IERC1155Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5727,
                                          "src": "13668:16:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$5727_$",
                                            "typeString": "type(contract IERC1155Receiver)"
                                          }
                                        },
                                        "id": 5108,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC1155Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 5708,
                                        "src": "13668:34:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 5109,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "13668:43:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "13656:55:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 5116,
                                  "nodeType": "IfStatement",
                                  "src": "13652:152:1",
                                  "trueBody": {
                                    "id": 5115,
                                    "nodeType": "Block",
                                    "src": "13713:91:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
                                              "id": 5112,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13742:42:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              },
                                              "value": "ERC1155: ERC1155Receiver rejected tokens"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              }
                                            ],
                                            "id": 5111,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "13735:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 5113,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13735:50:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 5114,
                                        "nodeType": "ExpressionStatement",
                                        "src": "13735:50:1"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 5118,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 5105,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 5104,
                                  "mutability": "mutable",
                                  "name": "response",
                                  "nameLocation": "13624:8:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 5118,
                                  "src": "13617:15:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 5103,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13617:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13616:17:1"
                            },
                            "src": "13608:210:1"
                          },
                          {
                            "block": {
                              "id": 5126,
                              "nodeType": "Block",
                              "src": "13853:47:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 5123,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5120,
                                        "src": "13878:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 5122,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "13871:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 5124,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13871:14:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 5125,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13871:14:1"
                                }
                              ]
                            },
                            "errorName": "Error",
                            "id": 5127,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 5121,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 5120,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "13845:6:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 5127,
                                  "src": "13831:20:1",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 5119,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13831:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13830:22:1"
                            },
                            "src": "13819:81:1"
                          },
                          {
                            "block": {
                              "id": 5132,
                              "nodeType": "Block",
                              "src": "13907:95:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
                                        "id": 5129,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13932:54:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        },
                                        "value": "ERC1155: transfer to non ERC1155Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        }
                                      ],
                                      "id": 5128,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "13925:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 5130,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13925:62:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 5131,
                                  "nodeType": "ExpressionStatement",
                                  "src": "13925:62:1"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 5133,
                            "nodeType": "TryCatchClause",
                            "src": "13901:101:1"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 5097,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5077,
                              "src": "13574:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5098,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5079,
                              "src": "13584:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5099,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5083,
                              "src": "13590:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 5100,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5085,
                              "src": "13594:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 5101,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5087,
                              "src": "13602:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5094,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5081,
                                  "src": "13552:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5093,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5727,
                                "src": "13535:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$5727_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              },
                              "id": 5095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13535:20:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155Receiver_$5727",
                                "typeString": "contract IERC1155Receiver"
                              }
                            },
                            "id": 5096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC1155Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5708,
                            "src": "13535:38:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 5102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13535:72:1",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 5134,
                        "nodeType": "TryStatement",
                        "src": "13531:471:1"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 5138,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_doSafeTransferAcceptanceCheck",
            "nameLocation": "13302:30:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5077,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13350:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5138,
                  "src": "13342:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13342:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5079,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13376:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5138,
                  "src": "13368:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13368:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5081,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13398:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5138,
                  "src": "13390:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5080,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13390:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5083,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "13418:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5138,
                  "src": "13410:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5082,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13410:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5085,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13438:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5138,
                  "src": "13430:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5084,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13430:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5087,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13467:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5138,
                  "src": "13454:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5086,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13454:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13332:145:1"
            },
            "returnParameters": {
              "id": 5089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13486:0:1"
            },
            "scope": 5232,
            "src": "13293:725:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5202,
              "nodeType": "Block",
              "src": "14242:574:1",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 5155,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5144,
                        "src": "14256:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 5156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5818,
                      "src": "14256:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 5157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14256:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5201,
                  "nodeType": "IfStatement",
                  "src": "14252:558:1",
                  "trueBody": {
                    "id": 5200,
                    "nodeType": "Block",
                    "src": "14273:537:1",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 5182,
                              "nodeType": "Block",
                              "src": "14427:189:1",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 5175,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 5171,
                                      "name": "response",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5169,
                                      "src": "14449:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 5172,
                                          "name": "IERC1155Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5727,
                                          "src": "14461:16:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$5727_$",
                                            "typeString": "type(contract IERC1155Receiver)"
                                          }
                                        },
                                        "id": 5173,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC1155BatchReceived",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 5726,
                                        "src": "14461:39:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 5174,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "14461:48:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "14449:60:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 5181,
                                  "nodeType": "IfStatement",
                                  "src": "14445:157:1",
                                  "trueBody": {
                                    "id": 5180,
                                    "nodeType": "Block",
                                    "src": "14511:91:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
                                              "id": 5177,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "14540:42:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              },
                                              "value": "ERC1155: ERC1155Receiver rejected tokens"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              }
                                            ],
                                            "id": 5176,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "14533:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 5178,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "14533:50:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 5179,
                                        "nodeType": "ExpressionStatement",
                                        "src": "14533:50:1"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 5183,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 5170,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 5169,
                                  "mutability": "mutable",
                                  "name": "response",
                                  "nameLocation": "14404:8:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 5183,
                                  "src": "14397:15:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 5168,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14397:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "14379:47:1"
                            },
                            "src": "14371:245:1"
                          },
                          {
                            "block": {
                              "id": 5191,
                              "nodeType": "Block",
                              "src": "14651:47:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 5188,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5185,
                                        "src": "14676:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 5187,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "14669:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 5189,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14669:14:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 5190,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14669:14:1"
                                }
                              ]
                            },
                            "errorName": "Error",
                            "id": 5192,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 5186,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 5185,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "14643:6:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 5192,
                                  "src": "14629:20:1",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 5184,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14629:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "14628:22:1"
                            },
                            "src": "14617:81:1"
                          },
                          {
                            "block": {
                              "id": 5197,
                              "nodeType": "Block",
                              "src": "14705:95:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
                                        "id": 5194,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14730:54:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        },
                                        "value": "ERC1155: transfer to non ERC1155Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        }
                                      ],
                                      "id": 5193,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "14723:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 5195,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14723:62:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 5196,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14723:62:1"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 5198,
                            "nodeType": "TryCatchClause",
                            "src": "14699:101:1"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 5162,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5140,
                              "src": "14335:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5163,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5142,
                              "src": "14345:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5164,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5147,
                              "src": "14351:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 5165,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5150,
                              "src": "14356:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 5166,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5152,
                              "src": "14365:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5159,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5144,
                                  "src": "14308:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5158,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5727,
                                "src": "14291:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$5727_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              },
                              "id": 5160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14291:20:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155Receiver_$5727",
                                "typeString": "contract IERC1155Receiver"
                              }
                            },
                            "id": 5161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC1155BatchReceived",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5726,
                            "src": "14291:43:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 5167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14291:79:1",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 5199,
                        "nodeType": "TryStatement",
                        "src": "14287:513:1"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 5203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_doSafeBatchTransferAcceptanceCheck",
            "nameLocation": "14033:35:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5140,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "14086:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5203,
                  "src": "14078:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14078:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5142,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14112:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5203,
                  "src": "14104:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14104:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5144,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14134:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5203,
                  "src": "14126:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14126:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5147,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "14163:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5203,
                  "src": "14146:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5145,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14146:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5146,
                    "nodeType": "ArrayTypeName",
                    "src": "14146:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5150,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "14193:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5203,
                  "src": "14176:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5148,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14176:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5149,
                    "nodeType": "ArrayTypeName",
                    "src": "14176:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5152,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "14223:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5203,
                  "src": "14210:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5151,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14210:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14068:165:1"
            },
            "returnParameters": {
              "id": 5154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14242:0:1"
            },
            "scope": 5232,
            "src": "14024:792:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5230,
              "nodeType": "Block",
              "src": "14906:109:1",
              "statements": [
                {
                  "assignments": [
                    5215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5215,
                      "mutability": "mutable",
                      "name": "array",
                      "nameLocation": "14933:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 5230,
                      "src": "14916:22:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 5213,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14916:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5214,
                        "nodeType": "ArrayTypeName",
                        "src": "14916:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5221,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 5219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14955:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 5218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "14941:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 5216,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14945:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5217,
                        "nodeType": "ArrayTypeName",
                        "src": "14945:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 5220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14941:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14916:41:1"
                },
                {
                  "expression": {
                    "id": 5226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5222,
                        "name": "array",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5215,
                        "src": "14967:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 5224,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 5223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14973:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14967:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5225,
                      "name": "element",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5205,
                      "src": "14978:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14967:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5227,
                  "nodeType": "ExpressionStatement",
                  "src": "14967:18:1"
                },
                {
                  "expression": {
                    "id": 5228,
                    "name": "array",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5215,
                    "src": "15003:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 5210,
                  "id": 5229,
                  "nodeType": "Return",
                  "src": "14996:12:1"
                }
              ]
            },
            "id": 5231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_asSingletonArray",
            "nameLocation": "14831:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5205,
                  "mutability": "mutable",
                  "name": "element",
                  "nameLocation": "14857:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5231,
                  "src": "14849:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14849:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14848:17:1"
            },
            "returnParameters": {
              "id": 5210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5209,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5231,
                  "src": "14888:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5207,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14888:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5208,
                    "nodeType": "ArrayTypeName",
                    "src": "14888:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14887:18:1"
            },
            "scope": 5232,
            "src": "14822:193:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 5233,
        "src": "494:14523:1",
        "usedErrors": []
      }
    ],
    "src": "33:14985:1"
  },
  "bytecode": "60806040523480156200001157600080fd5b506040516200161538038062001615833981016040819052620000349162000105565b6200003f8162000046565b5062000234565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001e1565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b600060208083850312156200011957600080fd5b82516001600160401b03808211156200013157600080fd5b818501915085601f8301126200014657600080fd5b8151818111156200015b576200015b6200021e565b604051601f8201601f19908116603f011681019083821181831017156200018657620001866200021e565b8160405282815288868487010111156200019f57600080fd5b600093505b82841015620001c35784840186015181850187015292850192620001a4565b82841115620001d55760008684830101525b98975050505050505050565b600181811c90821680620001f657607f821691505b602082108114156200021857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6113d180620002446000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610e30565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610f2b565b610223565b60405190151581526020016100a9565b6100e86100e3366004610f6c565b610275565b6040516100a991906110f1565b610108610103366004610ce5565b610309565b005b61011d610118366004610e5a565b6103a0565b6040516100a991906110b0565b610108610138366004610df4565b6104ca565b6100c561014b366004610cb2565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004610d8f565b6105a1565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025457506001600160e01b031982166303a24d0760e21b145b8061026f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461028490611217565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090611217565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b61038c5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b6103998585858585610628565b5050505050565b606081518351146104055760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff811115610421576104216112c6565b60405190808252806020026020018201604052801561044a578160200160208202803683370190505b50905060005b84518110156104c25761049585828151811061046e5761046e6112b0565b6020026020010151858381518110610488576104886112b0565b602002602001015161018c565b8282815181106104a7576104a76112b0565b60209081029190910101526104bb8161127f565b9050610450565b509392505050565b336001600160a01b03831614156105355760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b0385163314806105bd57506105bd853361014b565b61061b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b6103998585858585610805565b815183511461068a5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166106b05760405162461bcd60e51b81526004016101f49061114c565b3360005b84518110156107975760008582815181106106d1576106d16112b0565b6020026020010151905060008583815181106106ef576106ef6112b0565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561073f5760405162461bcd60e51b81526004016101f490611191565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061077c9084906111ff565b92505081905550505050806107909061127f565b90506106b4565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516107e79291906110c3565b60405180910390a46107fd81878787878761092b565b505050505050565b6001600160a01b03841661082b5760405162461bcd60e51b81526004016101f49061114c565b3361084481878761083b88610a96565b61039988610a96565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156108855760405162461bcd60e51b81526004016101f490611191565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906108c29084906111ff565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610922828888888888610ae1565b50505050505050565b6001600160a01b0384163b156107fd5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061096f908990899088908890889060040161100d565b602060405180830381600087803b15801561098957600080fd5b505af19250505080156109b9575060408051601f3d908101601f191682019092526109b691810190610f4f565b60015b610a66576109c56112dc565b806308c379a014156109ff57506109da6112f8565b806109e55750610a01565b8060405162461bcd60e51b81526004016101f491906110f1565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b146109225760405162461bcd60e51b81526004016101f490611104565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ad057610ad06112b0565b602090810291909101015292915050565b6001600160a01b0384163b156107fd5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b25908990899088908890889060040161106b565b602060405180830381600087803b158015610b3f57600080fd5b505af1925050508015610b6f575060408051601f3d908101601f19168201909252610b6c91810190610f4f565b60015b610b7b576109c56112dc565b6001600160e01b0319811663f23a6e6160e01b146109225760405162461bcd60e51b81526004016101f490611104565b80356001600160a01b0381168114610bc257600080fd5b919050565b600082601f830112610bd857600080fd5b81356020610be5826111db565b604051610bf28282611252565b8381528281019150858301600585901b87018401881015610c1257600080fd5b60005b85811015610c3157813584529284019290840190600101610c15565b5090979650505050505050565b600082601f830112610c4f57600080fd5b813567ffffffffffffffff811115610c6957610c696112c6565b604051610c80601f8301601f191660200182611252565b818152846020838601011115610c9557600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610cc557600080fd5b610cce83610bab565b9150610cdc60208401610bab565b90509250929050565b600080600080600060a08688031215610cfd57600080fd5b610d0686610bab565b9450610d1460208701610bab565b9350604086013567ffffffffffffffff80821115610d3157600080fd5b610d3d89838a01610bc7565b94506060880135915080821115610d5357600080fd5b610d5f89838a01610bc7565b93506080880135915080821115610d7557600080fd5b50610d8288828901610c3e565b9150509295509295909350565b600080600080600060a08688031215610da757600080fd5b610db086610bab565b9450610dbe60208701610bab565b93506040860135925060608601359150608086013567ffffffffffffffff811115610de857600080fd5b610d8288828901610c3e565b60008060408385031215610e0757600080fd5b610e1083610bab565b915060208301358015158114610e2557600080fd5b809150509250929050565b60008060408385031215610e4357600080fd5b610e4c83610bab565b946020939093013593505050565b60008060408385031215610e6d57600080fd5b823567ffffffffffffffff80821115610e8557600080fd5b818501915085601f830112610e9957600080fd5b81356020610ea6826111db565b604051610eb38282611252565b8381528281019150858301600585901b870184018b1015610ed357600080fd5b600096505b84871015610efd57610ee981610bab565b835260019690960195918301918301610ed8565b5096505086013592505080821115610f1457600080fd5b50610f2185828601610bc7565b9150509250929050565b600060208284031215610f3d57600080fd5b8135610f4881611382565b9392505050565b600060208284031215610f6157600080fd5b8151610f4881611382565b600060208284031215610f7e57600080fd5b5035919050565b600081518084526020808501945080840160005b83811015610fb557815187529582019590820190600101610f99565b509495945050505050565b6000815180845260005b81811015610fe657602081850181015186830182015201610fca565b81811115610ff8576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a06040820181905260009061103990830186610f85565b828103606084015261104b8186610f85565b9050828103608084015261105f8185610fc0565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906110a590830184610fc0565b979650505050505050565b602081526000610f486020830184610f85565b6040815260006110d66040830185610f85565b82810360208401526110e88185610f85565b95945050505050565b602081526000610f486020830184610fc0565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff8211156111f5576111f56112c6565b5060051b60200190565b600082198211156112125761121261129a565b500190565b600181811c9082168061122b57607f821691505b6020821081141561124c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715611278576112786112c6565b6040525050565b60006000198214156112935761129361129a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d11156112f55760046000803e5060005160e01c5b90565b600060443d10156113065790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561133657505050505090565b828501915081518181111561134e5750505050505090565b843d87010160208285010111156113685750505050505090565b61137760208286010187611252565b509095945050505050565b6001600160e01b03198116811461139857600080fd5b5056fea26469706673582212207b55d2559148e89ea6fb4359766ffbab29c39ecd88dcdf837c7f1bde266b2a7664736f6c63430008070033",
  "bytecodeSha1": "44509695476277121b678c94031b9a8f3a199531",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "ERC1155",
  "coverageMap": {
    "branches": {
      "1": {
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "52": [
            14449,
            14509,
            false
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "53": [
            13656,
            13711,
            false
          ]
        },
        "ERC1155._safeBatchTransferFrom": {
          "47": [
            6366,
            6394,
            true
          ],
          "48": [
            6457,
            6473,
            true
          ],
          "49": [
            6832,
            6853,
            true
          ]
        },
        "ERC1155._safeTransferFrom": {
          "50": [
            5198,
            5214,
            true
          ],
          "51": [
            5475,
            5496,
            true
          ]
        },
        "ERC1155.balanceOf": {
          "40": [
            2222,
            2243,
            true
          ]
        },
        "ERC1155.balanceOfBatch": {
          "43": [
            2685,
            2714,
            true
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "41": [
            4362,
            4382,
            true
          ],
          "42": [
            4386,
            4422,
            true
          ]
        },
        "ERC1155.safeTransferFrom": {
          "45": [
            3876,
            3896,
            true
          ],
          "46": [
            3900,
            3936,
            true
          ]
        },
        "ERC1155.setApprovalForAll": {
          "44": [
            3172,
            3196,
            true
          ]
        }
      },
      "18": {},
      "19": {},
      "2": {},
      "21": {},
      "22": {},
      "3": {},
      "4": {}
    },
    "statements": {
      "1": {
        "ERC1155._asSingletonArray": {
          "37": [
            14967,
            14985
          ],
          "38": [
            14996,
            15008
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "34": [
            14669,
            14683
          ],
          "35": [
            14723,
            14785
          ],
          "36": [
            14533,
            14583
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "39": [
            13735,
            13785
          ]
        },
        "ERC1155._safeBatchTransferFrom": {
          "18": [
            6358,
            6439
          ],
          "19": [
            6449,
            6515
          ],
          "20": [
            6824,
            6900
          ],
          "21": [
            6942,
            6984
          ],
          "22": [
            7012,
            7039
          ],
          "23": [
            6675,
            6678
          ],
          "24": [
            7060,
            7112
          ],
          "25": [
            7123,
            7198
          ]
        },
        "ERC1155._safeTransferFrom": {
          "26": [
            5190,
            5256
          ],
          "27": [
            5309,
            5405
          ],
          "28": [
            5467,
            5543
          ],
          "29": [
            5577,
            5619
          ],
          "30": [
            5639,
            5666
          ],
          "31": [
            5677,
            5728
          ],
          "32": [
            5739,
            5807
          ]
        },
        "ERC1155.balanceOf": {
          "1": [
            2214,
            2291
          ],
          "2": [
            2301,
            2330
          ]
        },
        "ERC1155.balanceOfBatch": {
          "9": [
            2677,
            2760
          ],
          "10": [
            2905,
            2954
          ],
          "11": [
            2886,
            2889
          ],
          "12": [
            2975,
            2995
          ]
        },
        "ERC1155.isApprovedForAll": {
          "0": [
            3558,
            3602
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "6": [
            4341,
            4498
          ],
          "8": [
            4508,
            4560
          ]
        },
        "ERC1155.safeTransferFrom": {
          "16": [
            3855,
            4003
          ],
          "17": [
            4013,
            4058
          ]
        },
        "ERC1155.setApprovalForAll": {
          "13": [
            3164,
            3242
          ],
          "14": [
            3253,
            3306
          ],
          "15": [
            3316,
            3369
          ]
        },
        "ERC1155.supportsInterface": {
          "3": [
            1278,
            1458
          ]
        },
        "ERC1155.uri": {
          "5": [
            1949,
            1960
          ]
        }
      },
      "18": {
        "Address.isContract": {
          "33": [
            1073,
            1088
          ]
        }
      },
      "19": {
        "Context._msgSender": {
          "7": [
            659,
            676
          ]
        }
      },
      "2": {},
      "21": {
        "ERC165.supportsInterface": {
          "4": [
            864,
            911
          ]
        }
      },
      "22": {},
      "3": {},
      "4": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC1155MetadataURI",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC165"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "494:14523:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2109:228;;;;;;:::i;:::-;;:::i;:::-;;;13567:25:31;;;13555:2;13540:18;2109:228:1;;;;;;;;1160:305;;;;;;:::i;:::-;;:::i;:::-;;;9053:14:31;;9046:22;9028:41;;9016:2;9001:18;1160:305:1;8888:187:31;1864:103:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4137:430::-;;;;;;:::i;:::-;;:::i;:::-;;2494:508;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3070:306::-;;;;;;:::i;:::-;;:::i;3443:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3565:27:1;;;3542:4;3565:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3443:166;3676:389;;;;;;:::i;:::-;;:::i;2109:228::-;2195:7;-1:-1:-1;;;;;2222:21:1;;2214:77;;;;-1:-1:-1;;;2214:77:1;;10336:2:31;2214:77:1;;;10318:21:31;10375:2;10355:18;;;10348:30;10414:34;10394:18;;;10387:62;-1:-1:-1;;;10465:18:31;;;10458:41;10516:19;;2214:77:1;;;;;;;;;-1:-1:-1;2308:9:1;:13;;;;;;;;;;;-1:-1:-1;;;;;2308:22:1;;;;;;;;;;;;2109:228::o;1160:305::-;1262:4;-1:-1:-1;;;;;;1297:41:1;;-1:-1:-1;;;1297:41:1;;:109;;-1:-1:-1;;;;;;;1354:52:1;;-1:-1:-1;;;1354:52:1;1297:109;:161;;;-1:-1:-1;;;;;;;;;;871:40:21;;;1422:36:1;1278:180;1160:305;-1:-1:-1;;1160:305:1:o;1864:103::-;1924:13;1956:4;1949:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1864:103;;;:::o;4137:430::-;-1:-1:-1;;;;;4362:20:1;;666:10:19;4362:20:1;;:60;;-1:-1:-1;4386:36:1;4403:4;666:10:19;3443:166:1;:::i;4386:36::-;4341:157;;;;-1:-1:-1;;;4341:157:1;;11564:2:31;4341:157:1;;;11546:21:31;11603:2;11583:18;;;11576:30;11642:34;11622:18;;;11615:62;-1:-1:-1;;;11693:18:31;;;11686:48;11751:19;;4341:157:1;11362:414:31;4341:157:1;4508:52;4531:4;4537:2;4541:3;4546:7;4555:4;4508:22;:52::i;:::-;4137:430;;;;;:::o;2494:508::-;2645:16;2704:3;:10;2685:8;:15;:29;2677:83;;;;-1:-1:-1;;;2677:83:1;;12804:2:31;2677:83:1;;;12786:21:31;12843:2;12823:18;;;12816:30;12882:34;12862:18;;;12855:62;-1:-1:-1;;;12933:18:31;;;12926:39;12982:19;;2677:83:1;12602:405:31;2677:83:1;2771:30;2818:8;:15;2804:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2804:30:1;;2771:63;;2850:9;2845:120;2869:8;:15;2865:1;:19;2845:120;;;2924:30;2934:8;2943:1;2934:11;;;;;;;;:::i;:::-;;;;;;;2947:3;2951:1;2947:6;;;;;;;;:::i;:::-;;;;;;;2924:9;:30::i;:::-;2905:13;2919:1;2905:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2886:3;;;:::i;:::-;;;2845:120;;;-1:-1:-1;2982:13:1;2494:508;-1:-1:-1;;;2494:508:1:o;3070:306::-;666:10:19;-1:-1:-1;;;;;3172:24:1;;;;3164:78;;;;-1:-1:-1;;;3164:78:1;;12394:2:31;3164:78:1;;;12376:21:31;12433:2;12413:18;;;12406:30;12472:34;12452:18;;;12445:62;-1:-1:-1;;;12523:18:31;;;12516:39;12572:19;;3164:78:1;12192:405:31;3164:78:1;666:10:19;3253:32:1;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;3253:42:1;;;;;;;;;;;;:53;;-1:-1:-1;;3253:53:1;;;;;;;;;;3321:48;;9028:41:31;;;3253:42:1;;666:10:19;3321:48:1;;9001:18:31;3321:48:1;;;;;;;3070:306;;:::o;3676:389::-;-1:-1:-1;;;;;3876:20:1;;666:10:19;3876:20:1;;:60;;-1:-1:-1;3900:36:1;3917:4;666:10:19;3443:166:1;:::i;3900:36::-;3855:148;;;;-1:-1:-1;;;3855:148:1;;10748:2:31;3855:148:1;;;10730:21:31;10787:2;10767:18;;;10760:30;10826:34;10806:18;;;10799:62;-1:-1:-1;;;10877:18:31;;;10870:39;10926:19;;3855:148:1;10546:405:31;3855:148:1;4013:45;4031:4;4037:2;4041;4045:6;4053:4;4013:17;:45::i;6160:1045::-;6380:7;:14;6366:3;:10;:28;6358:81;;;;-1:-1:-1;;;6358:81:1;;13214:2:31;6358:81:1;;;13196:21:31;13253:2;13233:18;;;13226:30;13292:34;13272:18;;;13265:62;-1:-1:-1;;;13343:18:31;;;13336:38;13391:19;;6358:81:1;13012:404:31;6358:81:1;-1:-1:-1;;;;;6457:16:1;;6449:66;;;;-1:-1:-1;;;6449:66:1;;;;;;;:::i;:::-;666:10:19;6526:16:1;6639:411;6663:3;:10;6659:1;:14;6639:411;;;6694:10;6707:3;6711:1;6707:6;;;;;;;;:::i;:::-;;;;;;;6694:19;;6727:14;6744:7;6752:1;6744:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6769:19;6791:13;;;;;;;;;;-1:-1:-1;;;;;6791:19:1;;;;;;;;;;;;6744:10;;-1:-1:-1;6832:21:1;;;;6824:76;;;;-1:-1:-1;;;6824:76:1;;;;;;;:::i;:::-;6942:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6942:19:1;;;;;;;;;;6964:20;;;6942:42;;7012:17;;;;;;;:27;;6964:20;;6942:9;7012:27;;6964:20;;7012:27;:::i;:::-;;;;;;;;6680:370;;;6675:3;;;;:::i;:::-;;;6639:411;;;;7095:2;-1:-1:-1;;;;;7065:47:1;7089:4;-1:-1:-1;;;;;7065:47:1;7079:8;-1:-1:-1;;;;;7065:47:1;;7099:3;7104:7;7065:47;;;;;;;:::i;:::-;;;;;;;;7123:75;7159:8;7169:4;7175:2;7179:3;7184:7;7193:4;7123:35;:75::i;:::-;6348:857;6160:1045;;;;;:::o;5017:797::-;-1:-1:-1;;;;;5198:16:1;;5190:66;;;;-1:-1:-1;;;5190:66:1;;;;;;;:::i;:::-;666:10:19;5309:96:1;666:10:19;5340:4:1;5346:2;5350:21;5368:2;5350:17;:21::i;:::-;5373:25;5391:6;5373:17;:25::i;5309:96::-;5416:19;5438:13;;;;;;;;;;;-1:-1:-1;;;;;5438:19:1;;;;;;;;;;5475:21;;;;5467:76;;;;-1:-1:-1;;;5467:76:1;;;;;;;:::i;:::-;5577:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5577:19:1;;;;;;;;;;5599:20;;;5577:42;;5639:17;;;;;;;:27;;5599:20;;5577:9;5639:27;;5599:20;;5639:27;:::i;:::-;;;;-1:-1:-1;;5682:46:1;;;13777:25:31;;;13833:2;13818:18;;13811:34;;;-1:-1:-1;;;;;5682:46:1;;;;;;;;;;;;;;13750:18:31;5682:46:1;;;;;;;5739:68;5770:8;5780:4;5786:2;5790;5794:6;5802:4;5739:30;:68::i;:::-;5180:634;;5017:797;;;;;:::o;14024:792::-;-1:-1:-1;;;;;14256:13:1;;1034:20:18;1080:8;14252:558:1;;14291:79;;-1:-1:-1;;;14291:79:1;;-1:-1:-1;;;;;14291:43:1;;;;;:79;;14335:8;;14345:4;;14351:3;;14356:7;;14365:4;;14291:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14291:79:1;;;;;;;;-1:-1:-1;;14291:79:1;;;;;;;;;;;;:::i;:::-;;;14287:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;14676:6;14669:14;;-1:-1:-1;;;14669:14:1;;;;;;;;:::i;14287:513::-;;;14723:62;;-1:-1:-1;;;14723:62:1;;9506:2:31;14723:62:1;;;9488:21:31;9545:2;9525:18;;;9518:30;9584:34;9564:18;;;9557:62;-1:-1:-1;;;9635:18:31;;;9628:50;9695:19;;14723:62:1;9304:416:31;14287:513:1;-1:-1:-1;;;;;;14449:60:1;;-1:-1:-1;;;14449:60:1;14445:157;;14533:50;;-1:-1:-1;;;14533:50:1;;;;;;;:::i;14822:193::-;14941:16;;;14955:1;14941:16;;;;;;;;;14888;;14916:22;;14941:16;;;;;;;;;;;;-1:-1:-1;14941:16:1;14916:41;;14978:7;14967:5;14973:1;14967:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15003:5;14822:193;-1:-1:-1;;14822:193:1:o;13293:725::-;-1:-1:-1;;;;;13500:13:1;;1034:20:18;1080:8;13496:516:1;;13535:72;;-1:-1:-1;;;13535:72:1;;-1:-1:-1;;;;;13535:38:1;;;;;:72;;13574:8;;13584:4;;13590:2;;13594:6;;13602:4;;13535:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13535:72:1;;;;;;;;-1:-1:-1;;13535:72:1;;;;;;;;;;;;:::i;:::-;;;13531:471;;;;:::i;:::-;-1:-1:-1;;;;;;13656:55:1;;-1:-1:-1;;;13656:55:1;13652:152;;13735:50;;-1:-1:-1;;;13735:50:1;;;;;;;:::i;14:173:31:-;82:20;;-1:-1:-1;;;;;131:31:31;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:735::-;246:5;299:3;292:4;284:6;280:17;276:27;266:55;;317:1;314;307:12;266:55;353:6;340:20;379:4;402:43;442:2;402:43;:::i;:::-;474:2;468:9;486:31;514:2;506:6;486:31;:::i;:::-;552:18;;;586:15;;;;-1:-1:-1;621:15:31;;;671:1;667:10;;;655:23;;651:32;;648:41;-1:-1:-1;645:61:31;;;702:1;699;692:12;645:61;724:1;734:163;748:2;745:1;742:9;734:163;;;805:17;;793:30;;843:12;;;;875;;;;766:1;759:9;734:163;;;-1:-1:-1;915:6:31;;192:735;-1:-1:-1;;;;;;;192:735:31:o;932:555::-;974:5;1027:3;1020:4;1012:6;1008:17;1004:27;994:55;;1045:1;1042;1035:12;994:55;1081:6;1068:20;1107:18;1103:2;1100:26;1097:52;;;1129:18;;:::i;:::-;1178:2;1172:9;1190:67;1245:2;1226:13;;-1:-1:-1;;1222:27:31;1251:4;1218:38;1172:9;1190:67;:::i;:::-;1281:2;1273:6;1266:18;1327:3;1320:4;1315:2;1307:6;1303:15;1299:26;1296:35;1293:55;;;1344:1;1341;1334:12;1293:55;1408:2;1401:4;1393:6;1389:17;1382:4;1374:6;1370:17;1357:54;1455:1;1431:15;;;1448:4;1427:26;1420:37;;;;1435:6;932:555;-1:-1:-1;;;932:555:31:o;1492:260::-;1560:6;1568;1621:2;1609:9;1600:7;1596:23;1592:32;1589:52;;;1637:1;1634;1627:12;1589:52;1660:29;1679:9;1660:29;:::i;:::-;1650:39;;1708:38;1742:2;1731:9;1727:18;1708:38;:::i;:::-;1698:48;;1492:260;;;;;:::o;1757:943::-;1911:6;1919;1927;1935;1943;1996:3;1984:9;1975:7;1971:23;1967:33;1964:53;;;2013:1;2010;2003:12;1964:53;2036:29;2055:9;2036:29;:::i;:::-;2026:39;;2084:38;2118:2;2107:9;2103:18;2084:38;:::i;:::-;2074:48;;2173:2;2162:9;2158:18;2145:32;2196:18;2237:2;2229:6;2226:14;2223:34;;;2253:1;2250;2243:12;2223:34;2276:61;2329:7;2320:6;2309:9;2305:22;2276:61;:::i;:::-;2266:71;;2390:2;2379:9;2375:18;2362:32;2346:48;;2419:2;2409:8;2406:16;2403:36;;;2435:1;2432;2425:12;2403:36;2458:63;2513:7;2502:8;2491:9;2487:24;2458:63;:::i;:::-;2448:73;;2574:3;2563:9;2559:19;2546:33;2530:49;;2604:2;2594:8;2591:16;2588:36;;;2620:1;2617;2610:12;2588:36;;2643:51;2686:7;2675:8;2664:9;2660:24;2643:51;:::i;:::-;2633:61;;;1757:943;;;;;;;;:::o;2705:606::-;2809:6;2817;2825;2833;2841;2894:3;2882:9;2873:7;2869:23;2865:33;2862:53;;;2911:1;2908;2901:12;2862:53;2934:29;2953:9;2934:29;:::i;:::-;2924:39;;2982:38;3016:2;3005:9;3001:18;2982:38;:::i;:::-;2972:48;;3067:2;3056:9;3052:18;3039:32;3029:42;;3118:2;3107:9;3103:18;3090:32;3080:42;;3173:3;3162:9;3158:19;3145:33;3201:18;3193:6;3190:30;3187:50;;;3233:1;3230;3223:12;3187:50;3256:49;3297:7;3288:6;3277:9;3273:22;3256:49;:::i;3316:347::-;3381:6;3389;3442:2;3430:9;3421:7;3417:23;3413:32;3410:52;;;3458:1;3455;3448:12;3410:52;3481:29;3500:9;3481:29;:::i;:::-;3471:39;;3560:2;3549:9;3545:18;3532:32;3607:5;3600:13;3593:21;3586:5;3583:32;3573:60;;3629:1;3626;3619:12;3573:60;3652:5;3642:15;;;3316:347;;;;;:::o;3668:254::-;3736:6;3744;3797:2;3785:9;3776:7;3772:23;3768:32;3765:52;;;3813:1;3810;3803:12;3765:52;3836:29;3855:9;3836:29;:::i;:::-;3826:39;3912:2;3897:18;;;;3884:32;;-1:-1:-1;;;3668:254:31:o;3927:1219::-;4045:6;4053;4106:2;4094:9;4085:7;4081:23;4077:32;4074:52;;;4122:1;4119;4112:12;4074:52;4162:9;4149:23;4191:18;4232:2;4224:6;4221:14;4218:34;;;4248:1;4245;4238:12;4218:34;4286:6;4275:9;4271:22;4261:32;;4331:7;4324:4;4320:2;4316:13;4312:27;4302:55;;4353:1;4350;4343:12;4302:55;4389:2;4376:16;4411:4;4434:43;4474:2;4434:43;:::i;:::-;4506:2;4500:9;4518:31;4546:2;4538:6;4518:31;:::i;:::-;4584:18;;;4618:15;;;;-1:-1:-1;4653:11:31;;;4695:1;4691:10;;;4683:19;;4679:28;;4676:41;-1:-1:-1;4673:61:31;;;4730:1;4727;4720:12;4673:61;4752:1;4743:10;;4762:169;4776:2;4773:1;4770:9;4762:169;;;4833:23;4852:3;4833:23;:::i;:::-;4821:36;;4794:1;4787:9;;;;;4877:12;;;;4909;;4762:169;;;-1:-1:-1;4950:6:31;-1:-1:-1;;4994:18:31;;4981:32;;-1:-1:-1;;5025:16:31;;;5022:36;;;5054:1;5051;5044:12;5022:36;;5077:63;5132:7;5121:8;5110:9;5106:24;5077:63;:::i;:::-;5067:73;;;3927:1219;;;;;:::o;5151:245::-;5209:6;5262:2;5250:9;5241:7;5237:23;5233:32;5230:52;;;5278:1;5275;5268:12;5230:52;5317:9;5304:23;5336:30;5360:5;5336:30;:::i;:::-;5385:5;5151:245;-1:-1:-1;;;5151:245:31:o;5401:249::-;5470:6;5523:2;5511:9;5502:7;5498:23;5494:32;5491:52;;;5539:1;5536;5529:12;5491:52;5571:9;5565:16;5590:30;5614:5;5590:30;:::i;5655:180::-;5714:6;5767:2;5755:9;5746:7;5742:23;5738:32;5735:52;;;5783:1;5780;5773:12;5735:52;-1:-1:-1;5806:23:31;;5655:180;-1:-1:-1;5655:180:31:o;5840:435::-;5893:3;5931:5;5925:12;5958:6;5953:3;5946:19;5984:4;6013:2;6008:3;6004:12;5997:19;;6050:2;6043:5;6039:14;6071:1;6081:169;6095:6;6092:1;6089:13;6081:169;;;6156:13;;6144:26;;6190:12;;;;6225:15;;;;6117:1;6110:9;6081:169;;;-1:-1:-1;6266:3:31;;5840:435;-1:-1:-1;;;;;5840:435:31:o;6280:471::-;6321:3;6359:5;6353:12;6386:6;6381:3;6374:19;6411:1;6421:162;6435:6;6432:1;6429:13;6421:162;;;6497:4;6553:13;;;6549:22;;6543:29;6525:11;;;6521:20;;6514:59;6450:12;6421:162;;;6601:6;6598:1;6595:13;6592:87;;;6667:1;6660:4;6651:6;6646:3;6642:16;6638:27;6631:38;6592:87;-1:-1:-1;6733:2:31;6712:15;-1:-1:-1;;6708:29:31;6699:39;;;;6740:4;6695:50;;6280:471;-1:-1:-1;;6280:471:31:o;6756:826::-;-1:-1:-1;;;;;7153:15:31;;;7135:34;;7205:15;;7200:2;7185:18;;7178:43;7115:3;7252:2;7237:18;;7230:31;;;7078:4;;7284:57;;7321:19;;7313:6;7284:57;:::i;:::-;7389:9;7381:6;7377:22;7372:2;7361:9;7357:18;7350:50;7423:44;7460:6;7452;7423:44;:::i;:::-;7409:58;;7516:9;7508:6;7504:22;7498:3;7487:9;7483:19;7476:51;7544:32;7569:6;7561;7544:32;:::i;:::-;7536:40;6756:826;-1:-1:-1;;;;;;;;6756:826:31:o;7587:560::-;-1:-1:-1;;;;;7884:15:31;;;7866:34;;7936:15;;7931:2;7916:18;;7909:43;7983:2;7968:18;;7961:34;;;8026:2;8011:18;;8004:34;;;7846:3;8069;8054:19;;8047:32;;;7809:4;;8096:45;;8121:19;;8113:6;8096:45;:::i;:::-;8088:53;7587:560;-1:-1:-1;;;;;;;7587:560:31:o;8152:261::-;8331:2;8320:9;8313:21;8294:4;8351:56;8403:2;8392:9;8388:18;8380:6;8351:56;:::i;8418:465::-;8675:2;8664:9;8657:21;8638:4;8701:56;8753:2;8742:9;8738:18;8730:6;8701:56;:::i;:::-;8805:9;8797:6;8793:22;8788:2;8777:9;8773:18;8766:50;8833:44;8870:6;8862;8833:44;:::i;:::-;8825:52;8418:465;-1:-1:-1;;;;;8418:465:31:o;9080:219::-;9229:2;9218:9;9211:21;9192:4;9249:44;9289:2;9278:9;9274:18;9266:6;9249:44;:::i;9725:404::-;9927:2;9909:21;;;9966:2;9946:18;;;9939:30;10005:34;10000:2;9985:18;;9978:62;-1:-1:-1;;;10071:2:31;10056:18;;10049:38;10119:3;10104:19;;9725:404::o;10956:401::-;11158:2;11140:21;;;11197:2;11177:18;;;11170:30;11236:34;11231:2;11216:18;;11209:62;-1:-1:-1;;;11302:2:31;11287:18;;11280:35;11347:3;11332:19;;10956:401::o;11781:406::-;11983:2;11965:21;;;12022:2;12002:18;;;11995:30;12061:34;12056:2;12041:18;;12034:62;-1:-1:-1;;;12127:2:31;12112:18;;12105:40;12177:3;12162:19;;11781:406::o;13856:183::-;13916:4;13949:18;13941:6;13938:30;13935:56;;;13971:18;;:::i;:::-;-1:-1:-1;14016:1:31;14012:14;14028:4;14008:25;;13856:183::o;14044:128::-;14084:3;14115:1;14111:6;14108:1;14105:13;14102:39;;;14121:18;;:::i;:::-;-1:-1:-1;14157:9:31;;14044:128::o;14177:380::-;14256:1;14252:12;;;;14299;;;14320:61;;14374:4;14366:6;14362:17;14352:27;;14320:61;14427:2;14419:6;14416:14;14396:18;14393:38;14390:161;;;14473:10;14468:3;14464:20;14461:1;14454:31;14508:4;14505:1;14498:15;14536:4;14533:1;14526:15;14390:161;;14177:380;;;:::o;14562:249::-;14672:2;14653:13;;-1:-1:-1;;14649:27:31;14637:40;;14707:18;14692:34;;14728:22;;;14689:62;14686:88;;;14754:18;;:::i;:::-;14790:2;14783:22;-1:-1:-1;;14562:249:31:o;14816:135::-;14855:3;-1:-1:-1;;14876:17:31;;14873:43;;;14896:18;;:::i;:::-;-1:-1:-1;14943:1:31;14932:13;;14816:135::o;14956:127::-;15017:10;15012:3;15008:20;15005:1;14998:31;15048:4;15045:1;15038:15;15072:4;15069:1;15062:15;15088:127;15149:10;15144:3;15140:20;15137:1;15130:31;15180:4;15177:1;15170:15;15204:4;15201:1;15194:15;15220:127;15281:10;15276:3;15272:20;15269:1;15262:31;15312:4;15309:1;15302:15;15336:4;15333:1;15326:15;15352:179;15387:3;15429:1;15411:16;15408:23;15405:120;;;15475:1;15472;15469;15454:23;-1:-1:-1;15512:1:31;15506:8;15501:3;15497:18;15405:120;15352:179;:::o;15536:671::-;15575:3;15617:4;15599:16;15596:26;15593:39;;;15536:671;:::o;15593:39::-;15659:2;15653:9;-1:-1:-1;;15724:16:31;15720:25;;15717:1;15653:9;15696:50;15775:4;15769:11;15799:16;15834:18;15905:2;15898:4;15890:6;15886:17;15883:25;15878:2;15870:6;15867:14;15864:45;15861:58;;;15912:5;;;;;15536:671;:::o;15861:58::-;15949:6;15943:4;15939:17;15928:28;;15985:3;15979:10;16012:2;16004:6;16001:14;15998:27;;;16018:5;;;;;;15536:671;:::o;15998:27::-;16102:2;16083:16;16077:4;16073:27;16069:36;16062:4;16053:6;16048:3;16044:16;16040:27;16037:69;16034:82;;;16109:5;;;;;;15536:671;:::o;16034:82::-;16125:57;16176:4;16167:6;16159;16155:19;16151:30;16145:4;16125:57;:::i;:::-;-1:-1:-1;16198:3:31;;15536:671;-1:-1:-1;;;;;15536:671:31:o;16212:131::-;-1:-1:-1;;;;;;16286:32:31;;16276:43;;16266:71;;16333:1;16330;16323:12;16266:71;16212:131;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "constructor": {
        "details": "See {_setURI}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "version": 1
  },
  "offset": [
    494,
    15017
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xE30 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xF2B JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF6C JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1217 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1217 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x628 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x421 PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x495 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BB DUP2 PUSH2 0x127F JUMP JUMPDEST SWAP1 POP PUSH2 0x450 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x535 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x5BD JUMPI POP PUSH2 0x5BD DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x61B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x805 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x114C JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x797 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6D1 JUMPI PUSH2 0x6D1 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6EF JUMPI PUSH2 0x6EF PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x73F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x77C SWAP1 DUP5 SWAP1 PUSH2 0x11FF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x790 SWAP1 PUSH2 0x127F JUMP JUMPDEST SWAP1 POP PUSH2 0x6B4 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7E7 SWAP3 SWAP2 SWAP1 PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x7FD DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x92B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x114C JUMP JUMPDEST CALLER PUSH2 0x844 DUP2 DUP8 DUP8 PUSH2 0x83B DUP9 PUSH2 0xA96 JUMP JUMPDEST PUSH2 0x399 DUP9 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x885 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x8C2 SWAP1 DUP5 SWAP1 PUSH2 0x11FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x922 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAE1 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x7FD JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x96F SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x100D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x989 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9B9 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9B6 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA66 JUMPI PUSH2 0x9C5 PUSH2 0x12DC JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x9FF JUMPI POP PUSH2 0x9DA PUSH2 0x12F8 JUMP JUMPDEST DUP1 PUSH2 0x9E5 JUMPI POP PUSH2 0xA01 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x922 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAD0 JUMPI PUSH2 0xAD0 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x7FD JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB25 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x106B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB6F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB6C SWAP2 DUP2 ADD SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB7B JUMPI PUSH2 0x9C5 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x922 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1104 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xBE5 DUP3 PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF2 DUP3 DUP3 PUSH2 0x1252 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xC12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC31 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xC15 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC69 JUMPI PUSH2 0xC69 PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC80 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1252 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xC95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCCE DUP4 PUSH2 0xBAB JUMP JUMPDEST SWAP2 POP PUSH2 0xCDC PUSH1 0x20 DUP5 ADD PUSH2 0xBAB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xCFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD06 DUP7 PUSH2 0xBAB JUMP JUMPDEST SWAP5 POP PUSH2 0xD14 PUSH1 0x20 DUP8 ADD PUSH2 0xBAB JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3D DUP10 DUP4 DUP11 ADD PUSH2 0xBC7 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5F DUP10 DUP4 DUP11 ADD PUSH2 0xBC7 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD82 DUP9 DUP3 DUP10 ADD PUSH2 0xC3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB0 DUP7 PUSH2 0xBAB JUMP JUMPDEST SWAP5 POP PUSH2 0xDBE PUSH1 0x20 DUP8 ADD PUSH2 0xBAB JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD82 DUP9 DUP3 DUP10 ADD PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE10 DUP4 PUSH2 0xBAB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4C DUP4 PUSH2 0xBAB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEA6 DUP3 PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB3 DUP3 DUP3 PUSH2 0x1252 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0xED3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0xEFD JUMPI PUSH2 0xEE9 DUP2 PUSH2 0xBAB JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xED8 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF21 DUP6 DUP3 DUP7 ADD PUSH2 0xBC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF48 DUP2 PUSH2 0x1382 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF48 DUP2 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFB5 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF99 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFE6 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xFCA JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xFF8 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1039 SWAP1 DUP4 ADD DUP7 PUSH2 0xF85 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x104B DUP2 DUP7 PUSH2 0xF85 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x105F DUP2 DUP6 PUSH2 0xFC0 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x10A5 SWAP1 DUP4 ADD DUP5 PUSH2 0xFC0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF48 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x10D6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF85 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x10E8 DUP2 DUP6 PUSH2 0xF85 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF48 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x11F5 JUMPI PUSH2 0x11F5 PUSH2 0x12C6 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1212 JUMPI PUSH2 0x1212 PUSH2 0x129A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x122B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x124C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1278 JUMPI PUSH2 0x1278 PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1293 JUMPI PUSH2 0x1293 PUSH2 0x129A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x12F5 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1306 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1336 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x134E JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1368 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1377 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1252 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x55D2559148E89EA6FB4359766FFBAB29C39ECD88DCDF837C7F1BDE26 PUSH12 0x2A7664736F6C634300080700 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        494,
        15017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x87"
    },
    "25": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4E1273F4"
    },
    "38": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4E1273F4"
    },
    "49": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10A"
    },
    "53": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12A"
    },
    "64": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE985E9C5"
    },
    "71": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13D"
    },
    "75": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF242432A"
    },
    "82": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x179"
    },
    "86": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "1"
    },
    "90": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "REVERT",
      "path": "1"
    },
    "91": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "92": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "1"
    },
    "93": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xFDD58E"
    },
    "97": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "EQ",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C"
    },
    "101": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "102": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "1"
    },
    "103": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1FFC9A7"
    },
    "108": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "EQ",
      "path": "1"
    },
    "109": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB2"
    },
    "112": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "113": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE89341C"
    },
    "119": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "EQ",
      "path": "1"
    },
    "120": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD5"
    },
    "123": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "124": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x2EB2C2D6"
    },
    "130": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "EQ",
      "path": "1"
    },
    "131": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF5"
    },
    "134": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "135": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "DUP1",
      "path": "1"
    },
    "139": {
      "first_revert": true,
      "fn": null,
      "offset": [
        494,
        15017
      ],
      "op": "REVERT",
      "path": "1"
    },
    "140": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "141": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9F"
    },
    "144": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9A"
    },
    "147": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "148": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "150": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE30"
    },
    "153": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMP",
      "path": "1"
    },
    "154": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "155": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18C"
    },
    "158": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMP",
      "path": "1"
    },
    "159": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "160": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "162": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "163": {
      "op": "SWAP1"
    },
    "164": {
      "op": "DUP2"
    },
    "165": {
      "op": "MSTORE"
    },
    "166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "168": {
      "op": "ADD"
    },
    "169": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "170": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "172": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "173": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "DUP1",
      "path": "1"
    },
    "174": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "175": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SUB",
      "path": "1"
    },
    "176": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "177": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "RETURN",
      "path": "1"
    },
    "178": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "179": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC5"
    },
    "182": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC0"
    },
    "185": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "186": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "188": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF2B"
    },
    "191": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMP",
      "path": "1"
    },
    "192": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "193": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x223"
    },
    "196": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMP",
      "path": "1"
    },
    "197": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "198": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "200": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "201": {
      "op": "SWAP1"
    },
    "202": {
      "op": "ISZERO"
    },
    "203": {
      "op": "ISZERO"
    },
    "204": {
      "op": "DUP2"
    },
    "205": {
      "op": "MSTORE"
    },
    "206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "208": {
      "op": "ADD"
    },
    "209": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA9"
    },
    "212": {
      "op": "JUMP"
    },
    "213": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "214": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE8"
    },
    "217": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE3"
    },
    "220": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "221": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "223": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF6C"
    },
    "226": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMP",
      "path": "1"
    },
    "227": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "228": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x275"
    },
    "231": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMP",
      "path": "1"
    },
    "232": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "233": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "235": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "236": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA9"
    },
    "239": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "240": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "241": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10F1"
    },
    "244": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMP",
      "path": "1"
    },
    "245": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "246": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x108"
    },
    "249": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x103"
    },
    "252": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "253": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "255": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCE5"
    },
    "258": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMP",
      "path": "1"
    },
    "259": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "260": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x309"
    },
    "263": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMP",
      "path": "1"
    },
    "264": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "265": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "STOP",
      "path": "1"
    },
    "266": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "267": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11D"
    },
    "270": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x118"
    },
    "273": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "274": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "276": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE5A"
    },
    "279": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "1"
    },
    "280": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "281": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A0"
    },
    "284": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "1"
    },
    "285": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "286": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "288": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "289": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA9"
    },
    "292": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "293": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "294": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10B0"
    },
    "297": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "1"
    },
    "298": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "299": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x108"
    },
    "302": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x138"
    },
    "305": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "306": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "308": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDF4"
    },
    "311": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMP",
      "path": "1"
    },
    "312": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "313": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4CA"
    },
    "316": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMP",
      "path": "1"
    },
    "317": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "318": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC5"
    },
    "321": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14B"
    },
    "324": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "325": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "327": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCB2"
    },
    "330": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "1"
    },
    "331": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "338": {
      "op": "SHL"
    },
    "339": {
      "op": "SUB"
    },
    "340": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 0
    },
    "341": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "342": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "AND",
      "path": "1"
    },
    "343": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3542,
        3546
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "345": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "346": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "347": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "348": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3583
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "350": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "352": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "353": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP2",
      "path": "1"
    },
    "354": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "355": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "357": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP1",
      "path": "1"
    },
    "358": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP4",
      "path": "1"
    },
    "359": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "360": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "361": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "362": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "363": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "AND",
      "path": "1"
    },
    "364": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "DUP3",
      "path": "1"
    },
    "365": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "366": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "367": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "368": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "369": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "370": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "371": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "372": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "374": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "AND",
      "path": "1"
    },
    "375": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "376": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "1"
    },
    "377": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "378": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x108"
    },
    "381": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x187"
    },
    "384": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "385": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "387": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD8F"
    },
    "390": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMP",
      "path": "1"
    },
    "391": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "392": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A1"
    },
    "395": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMP",
      "path": "1"
    },
    "396": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "397": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2195,
        2202
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "405": {
      "op": "SHL"
    },
    "406": {
      "op": "SUB"
    },
    "407": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2222,
        2243
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 1
    },
    "408": {
      "branch": 40,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2222,
        2243
      ],
      "op": "AND",
      "path": "1"
    },
    "409": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FD"
    },
    "412": {
      "branch": 40,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "413": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "415": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "416": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "420": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "422": {
      "op": "SHL"
    },
    "423": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "DUP2",
      "path": "1"
    },
    "424": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "427": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "429": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "DUP3",
      "path": "1"
    },
    "430": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "ADD",
      "path": "1"
    },
    "431": {
      "op": "MSTORE"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "434": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "436": {
      "op": "DUP3"
    },
    "437": {
      "op": "ADD"
    },
    "438": {
      "op": "MSTORE"
    },
    "439": {
      "op": "PUSH32",
      "value": "0x455243313135353A2062616C616E636520717565727920666F7220746865207A"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "474": {
      "op": "DUP3"
    },
    "475": {
      "op": "ADD"
    },
    "476": {
      "op": "MSTORE"
    },
    "477": {
      "op": "PUSH11",
      "value": "0x65726F2061646472657373"
    },
    "489": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "491": {
      "op": "SHL"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "494": {
      "op": "DUP3"
    },
    "495": {
      "op": "ADD"
    },
    "496": {
      "op": "MSTORE"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "499": {
      "op": "ADD"
    },
    "500": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "501": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "503": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "504": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "DUP1",
      "path": "1"
    },
    "505": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "506": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "SUB",
      "path": "1"
    },
    "507": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "508": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "509": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "510": {
      "op": "POP"
    },
    "511": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2317
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 2,
      "value": "0x0"
    },
    "513": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "514": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP2",
      "path": "1"
    },
    "515": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "516": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "518": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP2",
      "path": "1"
    },
    "519": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP2",
      "path": "1"
    },
    "520": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "521": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "523": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP1",
      "path": "1"
    },
    "524": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP4",
      "path": "1"
    },
    "525": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "532": {
      "op": "SHL"
    },
    "533": {
      "op": "SUB"
    },
    "534": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "535": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "536": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "537": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "AND",
      "path": "1"
    },
    "538": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "DUP4",
      "path": "1"
    },
    "539": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "540": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "541": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "542": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "543": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "544": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "545": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "546": {
      "fn": "ERC1155.balanceOf",
      "jump": "o",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMP",
      "path": "1"
    },
    "547": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "548": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1262,
        1266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "554": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "556": {
      "op": "SHL"
    },
    "557": {
      "op": "SUB"
    },
    "558": {
      "op": "NOT"
    },
    "559": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 3
    },
    "560": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "AND",
      "path": "1"
    },
    "561": {
      "op": "PUSH4",
      "value": "0x6CDB3D13"
    },
    "566": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "568": {
      "op": "SHL"
    },
    "569": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "EQ",
      "path": "1"
    },
    "570": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "DUP1",
      "path": "1"
    },
    "571": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1406
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x254"
    },
    "574": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1406
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "575": {
      "op": "POP"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "580": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "582": {
      "op": "SHL"
    },
    "583": {
      "op": "SUB"
    },
    "584": {
      "op": "NOT"
    },
    "585": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1354,
        1406
      ],
      "op": "DUP3",
      "path": "1"
    },
    "586": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1354,
        1406
      ],
      "op": "AND",
      "path": "1"
    },
    "587": {
      "op": "PUSH4",
      "value": "0x3A24D07"
    },
    "592": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "594": {
      "op": "SHL"
    },
    "595": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1354,
        1406
      ],
      "op": "EQ",
      "path": "1"
    },
    "596": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1406
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "597": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1458
      ],
      "op": "DUP1",
      "path": "1"
    },
    "598": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1458
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26F"
    },
    "601": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1458
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "602": {
      "op": "POP"
    },
    "603": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "608": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "610": {
      "op": "SHL"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "615": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "617": {
      "op": "SHL"
    },
    "618": {
      "op": "SUB"
    },
    "619": {
      "op": "NOT"
    },
    "620": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "21",
      "statement": 4
    },
    "621": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "21"
    },
    "622": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "21"
    },
    "623": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1422,
        1458
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "624": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1278,
        1458
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "625": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "626": {
      "op": "POP"
    },
    "627": {
      "op": "POP"
    },
    "628": {
      "fn": "ERC1155.supportsInterface",
      "jump": "o",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMP",
      "path": "1"
    },
    "629": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "630": {
      "fn": "ERC1155.uri",
      "offset": [
        1924,
        1937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "632": {
      "fn": "ERC1155.uri",
      "offset": [
        1956,
        1960
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0x2"
    },
    "634": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "1"
    },
    "635": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "636": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x284"
    },
    "639": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "640": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1217"
    },
    "643": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMP",
      "path": "1"
    },
    "644": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "645": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "1"
    },
    "646": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "648": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "1"
    },
    "649": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "651": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "1"
    },
    "652": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "653": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DIV",
      "path": "1"
    },
    "654": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MUL",
      "path": "1"
    },
    "655": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "657": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "1"
    },
    "658": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "660": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "661": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "662": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "1"
    },
    "663": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "1"
    },
    "664": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "666": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "667": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "1"
    },
    "668": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "669": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "670": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "671": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "1"
    },
    "672": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "1"
    },
    "673": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "674": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "676": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "1"
    },
    "677": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "1"
    },
    "678": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "1"
    },
    "679": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "680": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B0"
    },
    "683": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "684": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1217"
    },
    "687": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMP",
      "path": "1"
    },
    "688": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "689": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "1"
    },
    "690": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "691": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FD"
    },
    "694": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "695": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "1"
    },
    "696": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "698": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "LT",
      "path": "1"
    },
    "699": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D2"
    },
    "702": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "703": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "706": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "1"
    },
    "707": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP4",
      "path": "1"
    },
    "708": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "709": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DIV",
      "path": "1"
    },
    "710": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MUL",
      "path": "1"
    },
    "711": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP4",
      "path": "1"
    },
    "712": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "713": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "714": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "716": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "1"
    },
    "717": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "718": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FD"
    },
    "721": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMP",
      "path": "1"
    },
    "722": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "723": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "1"
    },
    "724": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "1"
    },
    "725": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "726": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "727": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "729": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "730": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "732": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "734": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "735": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "736": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "737": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "1"
    },
    "738": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "739": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "1"
    },
    "740": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "741": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "742": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "744": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "1"
    },
    "745": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "746": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "748": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "1"
    },
    "749": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "1"
    },
    "750": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP4",
      "path": "1"
    },
    "751": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "GT",
      "path": "1"
    },
    "752": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E0"
    },
    "755": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "756": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "1"
    },
    "757": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "758": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SUB",
      "path": "1"
    },
    "759": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "761": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "AND",
      "path": "1"
    },
    "762": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "1"
    },
    "763": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "1"
    },
    "764": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "765": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "766": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "1"
    },
    "767": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "1"
    },
    "768": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "1"
    },
    "769": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "1"
    },
    "770": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "1"
    },
    "771": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "772": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "1"
    },
    "773": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "774": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "775": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "POP",
      "path": "1"
    },
    "776": {
      "fn": "ERC1155.uri",
      "jump": "o",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMP",
      "path": "1"
    },
    "777": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "784": {
      "op": "SHL"
    },
    "785": {
      "op": "SUB"
    },
    "786": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 6
    },
    "787": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "AND",
      "path": "1"
    },
    "788": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "19",
      "statement": 7
    },
    "789": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "EQ",
      "path": "1"
    },
    "790": {
      "branch": 41,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "DUP1",
      "path": "1"
    },
    "791": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4422
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x325"
    },
    "794": {
      "branch": 41,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4422
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "795": {
      "op": "POP"
    },
    "796": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4386,
        4422
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x325"
    },
    "799": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4403,
        4407
      ],
      "op": "DUP6",
      "path": "1"
    },
    "800": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "19"
    },
    "801": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14B"
    },
    "804": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "1"
    },
    "805": {
      "branch": 42,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4386,
        4422
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "806": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x38C"
    },
    "809": {
      "branch": 42,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "810": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "812": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "813": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "817": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "819": {
      "op": "SHL"
    },
    "820": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "DUP2",
      "path": "1"
    },
    "821": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "824": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "826": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "DUP3",
      "path": "1"
    },
    "827": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "ADD",
      "path": "1"
    },
    "828": {
      "op": "MSTORE"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "833": {
      "op": "DUP3"
    },
    "834": {
      "op": "ADD"
    },
    "835": {
      "op": "MSTORE"
    },
    "836": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "871": {
      "op": "DUP3"
    },
    "872": {
      "op": "ADD"
    },
    "873": {
      "op": "MSTORE"
    },
    "874": {
      "op": "PUSH18",
      "value": "0x1BDDDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "895": {
      "op": "SHL"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "898": {
      "op": "DUP3"
    },
    "899": {
      "op": "ADD"
    },
    "900": {
      "op": "MSTORE"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "903": {
      "op": "ADD"
    },
    "904": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4"
    },
    "907": {
      "op": "JUMP"
    },
    "908": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "909": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4508,
        4560
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 8,
      "value": "0x399"
    },
    "912": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4531,
        4535
      ],
      "op": "DUP6",
      "path": "1"
    },
    "913": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4537,
        4539
      ],
      "op": "DUP6",
      "path": "1"
    },
    "914": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4541,
        4544
      ],
      "op": "DUP6",
      "path": "1"
    },
    "915": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4546,
        4553
      ],
      "op": "DUP6",
      "path": "1"
    },
    "916": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4555,
        4559
      ],
      "op": "DUP6",
      "path": "1"
    },
    "917": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4508,
        4530
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x628"
    },
    "920": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4508,
        4560
      ],
      "op": "JUMP",
      "path": "1"
    },
    "921": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4508,
        4560
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "922": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "1"
    },
    "923": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "1"
    },
    "924": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "1"
    },
    "925": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "1"
    },
    "926": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "1"
    },
    "927": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMP",
      "path": "1"
    },
    "928": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "929": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2645,
        2661
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "931": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2704,
        2707
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 9
    },
    "932": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2704,
        2714
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "933": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2685,
        2693
      ],
      "op": "DUP4",
      "path": "1"
    },
    "934": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2685,
        2700
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "935": {
      "branch": 43,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2685,
        2714
      ],
      "op": "EQ",
      "path": "1"
    },
    "936": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x405"
    },
    "939": {
      "branch": 43,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "940": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "942": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "943": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "947": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "949": {
      "op": "SHL"
    },
    "950": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "DUP2",
      "path": "1"
    },
    "951": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "954": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "956": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "DUP3",
      "path": "1"
    },
    "957": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "ADD",
      "path": "1"
    },
    "958": {
      "op": "MSTORE"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "963": {
      "op": "DUP3"
    },
    "964": {
      "op": "ADD"
    },
    "965": {
      "op": "MSTORE"
    },
    "966": {
      "op": "PUSH32",
      "value": "0x455243313135353A206163636F756E747320616E6420696473206C656E677468"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1001": {
      "op": "DUP3"
    },
    "1002": {
      "op": "ADD"
    },
    "1003": {
      "op": "MSTORE"
    },
    "1004": {
      "op": "PUSH9",
      "value": "0x40DAD2E6DAC2E8C6D"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "1016": {
      "op": "SHL"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1019": {
      "op": "DUP3"
    },
    "1020": {
      "op": "ADD"
    },
    "1021": {
      "op": "MSTORE"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1024": {
      "op": "ADD"
    },
    "1025": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4"
    },
    "1028": {
      "op": "JUMP"
    },
    "1029": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1030": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2771,
        2801
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1032": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2818,
        2826
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1033": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2818,
        2833
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1034": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1043": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1044": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "GT",
      "path": "1"
    },
    "1045": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1046": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x421"
    },
    "1049": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1050": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x421"
    },
    "1053": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12C6"
    },
    "1056": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1057": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1058": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1060": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1061": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1062": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1063": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1064": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1065": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1066": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1068": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MUL",
      "path": "1"
    },
    "1069": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1071": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "1"
    },
    "1072": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1073": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "1"
    },
    "1074": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1076": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1077": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1078": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1079": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x44A"
    },
    "1082": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1083": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1084": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1086": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "1"
    },
    "1087": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1089": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1090": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MUL",
      "path": "1"
    },
    "1091": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1092": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1093": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1094": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "CALLDATACOPY",
      "path": "1"
    },
    "1095": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "1"
    },
    "1096": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1097": {
      "op": "POP"
    },
    "1098": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1099": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "POP",
      "path": "1"
    },
    "1100": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2771,
        2834
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1101": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2771,
        2834
      ],
      "op": "POP",
      "path": "1"
    },
    "1102": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2850,
        2859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1104": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1105": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2869,
        2877
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1106": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2869,
        2884
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1107": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1108": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2884
      ],
      "op": "LT",
      "path": "1"
    },
    "1109": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1110": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4C2"
    },
    "1113": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1114": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2924,
        2954
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 10,
      "value": "0x495"
    },
    "1117": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2942
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1118": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2943,
        2944
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1119": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1120": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1121": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1122": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "LT",
      "path": "1"
    },
    "1123": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x46E"
    },
    "1126": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1127": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x46E"
    },
    "1130": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B0"
    },
    "1133": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2934,
        2945
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1134": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1135": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1137": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MUL",
      "path": "1"
    },
    "1138": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1140": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "ADD",
      "path": "1"
    },
    "1141": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "ADD",
      "path": "1"
    },
    "1142": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1143": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1144": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2951,
        2952
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1145": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1146": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1147": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1148": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "LT",
      "path": "1"
    },
    "1149": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x488"
    },
    "1152": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1153": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x488"
    },
    "1156": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B0"
    },
    "1159": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2947,
        2953
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1160": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1161": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1163": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MUL",
      "path": "1"
    },
    "1164": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1166": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "ADD",
      "path": "1"
    },
    "1167": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "ADD",
      "path": "1"
    },
    "1168": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1169": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2924,
        2933
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18C"
    },
    "1172": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2924,
        2954
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1173": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2924,
        2954
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1174": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2918
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1175": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2919,
        2920
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1176": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1177": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1178": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1179": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "LT",
      "path": "1"
    },
    "1180": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4A7"
    },
    "1183": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1184": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4A7"
    },
    "1187": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B0"
    },
    "1190": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2905,
        2921
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1191": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1192": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1194": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1195": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1196": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "MUL",
      "path": "1"
    },
    "1197": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1198": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1199": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1200": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "ADD",
      "path": "1"
    },
    "1201": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "ADD",
      "path": "1"
    },
    "1202": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2954
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1203": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 11,
      "value": "0x4BB"
    },
    "1206": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1207": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x127F"
    },
    "1210": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2886,
        2889
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1211": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1212": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1213": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "POP",
      "path": "1"
    },
    "1214": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x450"
    },
    "1217": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1218": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1219": {
      "op": "POP"
    },
    "1220": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2982,
        2995
      ],
      "op": "SWAP4",
      "path": "1",
      "statement": 12
    },
    "1221": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1222": {
      "op": "POP"
    },
    "1223": {
      "op": "POP"
    },
    "1224": {
      "op": "POP"
    },
    "1225": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "o",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1226": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1227": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "19"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1234": {
      "op": "SHL"
    },
    "1235": {
      "op": "SUB"
    },
    "1236": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 13
    },
    "1237": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "AND",
      "path": "1"
    },
    "1238": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "EQ",
      "path": "1"
    },
    "1239": {
      "branch": 44,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1240": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x535"
    },
    "1243": {
      "branch": 44,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1244": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1246": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1247": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1253": {
      "op": "SHL"
    },
    "1254": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1255": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1258": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1260": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1261": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "ADD",
      "path": "1"
    },
    "1262": {
      "op": "MSTORE"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1267": {
      "op": "DUP3"
    },
    "1268": {
      "op": "ADD"
    },
    "1269": {
      "op": "MSTORE"
    },
    "1270": {
      "op": "PUSH32",
      "value": "0x455243313135353A2073657474696E6720617070726F76616C20737461747573"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1305": {
      "op": "DUP3"
    },
    "1306": {
      "op": "ADD"
    },
    "1307": {
      "op": "MSTORE"
    },
    "1308": {
      "op": "PUSH9",
      "value": "0x103337B91039B2B633"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1320": {
      "op": "SHL"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1323": {
      "op": "DUP3"
    },
    "1324": {
      "op": "ADD"
    },
    "1325": {
      "op": "MSTORE"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1328": {
      "op": "ADD"
    },
    "1329": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4"
    },
    "1332": {
      "op": "JUMP"
    },
    "1333": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1334": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "19"
    },
    "1335": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 14,
      "value": "0x0"
    },
    "1337": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1338": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1339": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1340": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3271
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1342": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1344": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1345": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1346": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1347": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1349": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1350": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1351": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1358": {
      "op": "SHL"
    },
    "1359": {
      "op": "SUB"
    },
    "1360": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1361": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "AND",
      "path": "1"
    },
    "1362": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1363": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1364": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1365": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1366": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1367": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1368": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1369": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1370": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1371": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1372": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1373": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1376": {
      "op": "NOT"
    },
    "1377": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "AND",
      "path": "1"
    },
    "1378": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1379": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1380": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1381": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1382": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1383": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "OR",
      "path": "1"
    },
    "1384": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1385": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1386": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1387": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 15
    },
    "1388": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1389": {
      "op": "SWAP1"
    },
    "1390": {
      "op": "DUP2"
    },
    "1391": {
      "op": "MSTORE"
    },
    "1392": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1393": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1394": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1395": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "1428": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1429": {
      "op": "ADD"
    },
    "1430": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1432": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1433": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1434": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1435": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SUB",
      "path": "1"
    },
    "1436": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1437": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1438": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "POP",
      "path": "1"
    },
    "1439": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "POP",
      "path": "1"
    },
    "1440": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "o",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1441": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1448": {
      "op": "SHL"
    },
    "1449": {
      "op": "SUB"
    },
    "1450": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 16
    },
    "1451": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "AND",
      "path": "1"
    },
    "1452": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "19"
    },
    "1453": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "EQ",
      "path": "1"
    },
    "1454": {
      "branch": 45,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1455": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3936
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5BD"
    },
    "1458": {
      "branch": 45,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3936
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1459": {
      "op": "POP"
    },
    "1460": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3900,
        3936
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5BD"
    },
    "1463": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3917,
        3921
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1464": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "19"
    },
    "1465": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14B"
    },
    "1468": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1469": {
      "branch": 46,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3900,
        3936
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1470": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x61B"
    },
    "1473": {
      "branch": 46,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1474": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1476": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1477": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1483": {
      "op": "SHL"
    },
    "1484": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1485": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1488": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1490": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1491": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "ADD",
      "path": "1"
    },
    "1492": {
      "op": "MSTORE"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1497": {
      "op": "DUP3"
    },
    "1498": {
      "op": "ADD"
    },
    "1499": {
      "op": "MSTORE"
    },
    "1500": {
      "op": "PUSH32",
      "value": "0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1535": {
      "op": "DUP3"
    },
    "1536": {
      "op": "ADD"
    },
    "1537": {
      "op": "MSTORE"
    },
    "1538": {
      "op": "PUSH9",
      "value": "0x8185C1C1C9BDD9959"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "1550": {
      "op": "SHL"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1553": {
      "op": "DUP3"
    },
    "1554": {
      "op": "ADD"
    },
    "1555": {
      "op": "MSTORE"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1558": {
      "op": "ADD"
    },
    "1559": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4"
    },
    "1562": {
      "op": "JUMP"
    },
    "1563": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1564": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4013,
        4058
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 17,
      "value": "0x399"
    },
    "1567": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4031,
        4035
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1568": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4037,
        4039
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1569": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4041,
        4043
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1570": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4045,
        4051
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1571": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4053,
        4057
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1572": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4013,
        4030
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x805"
    },
    "1575": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4013,
        4058
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1576": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1577": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6380,
        6387
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 18
    },
    "1578": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6380,
        6394
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1579": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6366,
        6369
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1580": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6366,
        6376
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1581": {
      "branch": 47,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6366,
        6394
      ],
      "op": "EQ",
      "path": "1"
    },
    "1582": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x68A"
    },
    "1585": {
      "branch": 47,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1586": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1588": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1589": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1595": {
      "op": "SHL"
    },
    "1596": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1597": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1600": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1602": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1603": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "ADD",
      "path": "1"
    },
    "1604": {
      "op": "MSTORE"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1609": {
      "op": "DUP3"
    },
    "1610": {
      "op": "ADD"
    },
    "1611": {
      "op": "MSTORE"
    },
    "1612": {
      "op": "PUSH32",
      "value": "0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1647": {
      "op": "DUP3"
    },
    "1648": {
      "op": "ADD"
    },
    "1649": {
      "op": "MSTORE"
    },
    "1650": {
      "op": "PUSH8",
      "value": "0xDAD2E6DAC2E8C6D"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "1661": {
      "op": "SHL"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1664": {
      "op": "DUP3"
    },
    "1665": {
      "op": "ADD"
    },
    "1666": {
      "op": "MSTORE"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1669": {
      "op": "ADD"
    },
    "1670": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4"
    },
    "1673": {
      "op": "JUMP"
    },
    "1674": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1681": {
      "op": "SHL"
    },
    "1682": {
      "op": "SUB"
    },
    "1683": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6457,
        6473
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 19
    },
    "1684": {
      "branch": 48,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6457,
        6473
      ],
      "op": "AND",
      "path": "1"
    },
    "1685": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6B0"
    },
    "1688": {
      "branch": 48,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1689": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1691": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1692": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1698": {
      "op": "SHL"
    },
    "1699": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1700": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1701": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1703": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "ADD",
      "path": "1"
    },
    "1704": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4"
    },
    "1707": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1708": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x114C"
    },
    "1711": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6449,
        6515
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1712": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1713": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "19"
    },
    "1714": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6526,
        6542
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1716": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1717": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6663,
        6666
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1718": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6663,
        6673
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1719": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6659,
        6660
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1720": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6659,
        6673
      ],
      "op": "LT",
      "path": "1"
    },
    "1721": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1722": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x797"
    },
    "1725": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1726": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6694,
        6704
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1728": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6710
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1729": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6711,
        6712
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1730": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1731": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1732": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1733": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "LT",
      "path": "1"
    },
    "1734": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6D1"
    },
    "1737": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1738": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6D1"
    },
    "1741": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B0"
    },
    "1744": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6707,
        6713
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1745": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1746": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1748": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MUL",
      "path": "1"
    },
    "1749": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1751": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "ADD",
      "path": "1"
    },
    "1752": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "ADD",
      "path": "1"
    },
    "1753": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1754": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6694,
        6713
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1755": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6694,
        6713
      ],
      "op": "POP",
      "path": "1"
    },
    "1756": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6727,
        6741
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1758": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6751
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1759": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6752,
        6753
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1760": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1761": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1762": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1763": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "LT",
      "path": "1"
    },
    "1764": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6EF"
    },
    "1767": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1768": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6EF"
    },
    "1771": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B0"
    },
    "1774": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6744,
        6754
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1775": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1776": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1778": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1779": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1780": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MUL",
      "path": "1"
    },
    "1781": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1782": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1783": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1784": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "ADD",
      "path": "1"
    },
    "1785": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1786": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "ADD",
      "path": "1"
    },
    "1787": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1788": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6769,
        6788
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1790": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1791": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1792": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1793": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1794": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1795": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1796": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1798": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1799": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1800": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "op": "SUB"
    },
    "1809": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "DUP15",
      "path": "1"
    },
    "1810": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "AND",
      "path": "1"
    },
    "1811": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1812": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1813": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1814": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1815": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1816": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1817": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1818": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1819": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1820": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1821": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1822": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1823": {
      "op": "POP"
    },
    "1824": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 20
    },
    "1825": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1826": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "LT",
      "path": "1"
    },
    "1827": {
      "branch": 49,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1828": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x73F"
    },
    "1831": {
      "branch": 49,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1832": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1834": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1835": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1841": {
      "op": "SHL"
    },
    "1842": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1843": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1844": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1846": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "ADD",
      "path": "1"
    },
    "1847": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4"
    },
    "1850": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1851": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1191"
    },
    "1854": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6824,
        6900
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1855": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1856": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6951
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 21,
      "value": "0x0"
    },
    "1858": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1859": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1860": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1861": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1863": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1864": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1865": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1866": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1868": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1869": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1870": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1877": {
      "op": "SHL"
    },
    "1878": {
      "op": "SUB"
    },
    "1879": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP15",
      "path": "1"
    },
    "1880": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1881": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "AND",
      "path": "1"
    },
    "1882": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1883": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1884": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1885": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1886": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1887": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1888": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1889": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1890": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1891": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "SUB",
      "path": "1"
    },
    "1892": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1893": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6984
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1894": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 22
    },
    "1895": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "DUP12",
      "path": "1"
    },
    "1896": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "AND",
      "path": "1"
    },
    "1897": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1898": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1899": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1900": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1901": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1902": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1903": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1904": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1905": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6951
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1906": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x77C"
    },
    "1909": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1910": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1911": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1912": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11FF"
    },
    "1915": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7012,
        7039
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1916": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1917": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1918": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "POP",
      "path": "1"
    },
    "1919": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "POP",
      "path": "1"
    },
    "1920": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1921": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1922": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1923": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "POP",
      "path": "1"
    },
    "1924": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6680,
        7050
      ],
      "op": "POP",
      "path": "1"
    },
    "1925": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6680,
        7050
      ],
      "op": "POP",
      "path": "1"
    },
    "1926": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6680,
        7050
      ],
      "op": "POP",
      "path": "1"
    },
    "1927": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 23
    },
    "1928": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x790"
    },
    "1931": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1932": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x127F"
    },
    "1935": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6675,
        6678
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1936": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1937": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1938": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "POP",
      "path": "1"
    },
    "1939": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6B4"
    },
    "1942": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1943": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1944": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "POP",
      "path": "1"
    },
    "1945": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7095,
        7097
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 24
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1952": {
      "op": "SHL"
    },
    "1953": {
      "op": "SUB"
    },
    "1954": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "AND",
      "path": "1"
    },
    "1955": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7089,
        7093
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1962": {
      "op": "SHL"
    },
    "1963": {
      "op": "SUB"
    },
    "1964": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "AND",
      "path": "1"
    },
    "1965": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7079,
        7087
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1972": {
      "op": "SHL"
    },
    "1973": {
      "op": "SUB"
    },
    "1974": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "AND",
      "path": "1"
    },
    "1975": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "2008": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7099,
        7102
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2009": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7104,
        7111
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2010": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2012": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2013": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7E7"
    },
    "2016": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2017": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2018": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2019": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10C3"
    },
    "2022": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7065,
        7112
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2023": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2024": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2026": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2027": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2028": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2029": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SUB",
      "path": "1"
    },
    "2030": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2031": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "LOG4",
      "path": "1"
    },
    "2032": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7123,
        7198
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 25,
      "value": "0x7FD"
    },
    "2035": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7159,
        7167
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2036": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7169,
        7173
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2037": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7175,
        7177
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2038": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7179,
        7182
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2039": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7184,
        7191
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2040": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7193,
        7197
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2041": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7123,
        7158
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x92B"
    },
    "2044": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7123,
        7198
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2045": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7123,
        7198
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2046": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6348,
        7205
      ],
      "op": "POP",
      "path": "1"
    },
    "2047": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "1"
    },
    "2048": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "1"
    },
    "2049": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "1"
    },
    "2050": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "1"
    },
    "2051": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "1"
    },
    "2052": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        6160,
        7205
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2053": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2060": {
      "op": "SHL"
    },
    "2061": {
      "op": "SUB"
    },
    "2062": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5198,
        5214
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 26
    },
    "2063": {
      "branch": 50,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5198,
        5214
      ],
      "op": "AND",
      "path": "1"
    },
    "2064": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x82B"
    },
    "2067": {
      "branch": 50,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2068": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2070": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2071": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2077": {
      "op": "SHL"
    },
    "2078": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2079": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2080": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2082": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "ADD",
      "path": "1"
    },
    "2083": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4"
    },
    "2086": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2087": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x114C"
    },
    "2090": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5190,
        5256
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2091": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2092": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "19"
    },
    "2093": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5309,
        5405
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 27,
      "value": "0x844"
    },
    "2096": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2097": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5340,
        5344
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2098": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5348
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2099": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5350,
        5371
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x83B"
    },
    "2102": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5368,
        5370
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2103": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5350,
        5367
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA96"
    },
    "2106": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5350,
        5371
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2107": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5350,
        5371
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2108": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5373,
        5398
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x399"
    },
    "2111": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5391,
        5397
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2112": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5373,
        5390
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA96"
    },
    "2115": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5373,
        5398
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2116": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5309,
        5405
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2117": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5416,
        5435
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2119": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2120": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2121": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2122": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2124": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2125": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2126": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2127": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2129": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2130": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2131": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2138": {
      "op": "SHL"
    },
    "2139": {
      "op": "SUB"
    },
    "2140": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "DUP11",
      "path": "1"
    },
    "2141": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "AND",
      "path": "1"
    },
    "2142": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2143": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2144": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2145": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2146": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2147": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2148": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2149": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2150": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 28
    },
    "2151": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2152": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "LT",
      "path": "1"
    },
    "2153": {
      "branch": 51,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2154": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x885"
    },
    "2157": {
      "branch": 51,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2158": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2160": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2161": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2167": {
      "op": "SHL"
    },
    "2168": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2169": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2170": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2172": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "ADD",
      "path": "1"
    },
    "2173": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4"
    },
    "2176": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2177": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1191"
    },
    "2180": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5467,
        5543
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2181": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2182": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5586
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 29,
      "value": "0x0"
    },
    "2184": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2185": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2186": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2187": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2189": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2190": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2191": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2192": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2194": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2195": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2196": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2203": {
      "op": "SHL"
    },
    "2204": {
      "op": "SUB"
    },
    "2205": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP12",
      "path": "1"
    },
    "2206": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2207": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "AND",
      "path": "1"
    },
    "2208": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2209": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2210": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2211": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2212": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2213": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2214": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2215": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2216": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2217": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "SUB",
      "path": "1"
    },
    "2218": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5619
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2219": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5619
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2220": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 30
    },
    "2221": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2222": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "AND",
      "path": "1"
    },
    "2223": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2224": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2225": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2226": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2227": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2228": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2229": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2230": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2231": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5586
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2232": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C2"
    },
    "2235": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2236": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2237": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2238": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11FF"
    },
    "2241": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5639,
        5666
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2242": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2243": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2244": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2245": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2246": {
      "op": "POP"
    },
    "2247": {
      "op": "POP"
    },
    "2248": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 31,
      "value": "0x40"
    },
    "2250": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2251": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2252": {
      "op": "DUP7"
    },
    "2253": {
      "op": "DUP2"
    },
    "2254": {
      "op": "MSTORE"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2257": {
      "op": "DUP2"
    },
    "2258": {
      "op": "ADD"
    },
    "2259": {
      "op": "DUP7"
    },
    "2260": {
      "op": "SWAP1"
    },
    "2261": {
      "op": "MSTORE"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2268": {
      "op": "SHL"
    },
    "2269": {
      "op": "SUB"
    },
    "2270": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2271": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP10",
      "path": "1"
    },
    "2272": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "AND",
      "path": "1"
    },
    "2273": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2274": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP11",
      "path": "1"
    },
    "2275": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2276": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "AND",
      "path": "1"
    },
    "2277": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2278": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2279": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2280": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "AND",
      "path": "1"
    },
    "2281": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2282": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "2315": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2316": {
      "op": "ADD"
    },
    "2317": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2319": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2320": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2321": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2322": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SUB",
      "path": "1"
    },
    "2323": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2324": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "LOG4",
      "path": "1"
    },
    "2325": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5739,
        5807
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 32,
      "value": "0x922"
    },
    "2328": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5770,
        5778
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2329": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5780,
        5784
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2330": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5786,
        5788
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2331": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5790,
        5792
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2332": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5794,
        5800
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2333": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5802,
        5806
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2334": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5739,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAE1"
    },
    "2337": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5739,
        5807
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2338": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5739,
        5807
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2339": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5180,
        5814
      ],
      "op": "POP",
      "path": "1"
    },
    "2340": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5180,
        5814
      ],
      "op": "POP",
      "path": "1"
    },
    "2341": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "1"
    },
    "2342": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "1"
    },
    "2343": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "1"
    },
    "2344": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "1"
    },
    "2345": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "1"
    },
    "2346": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "o",
      "offset": [
        5017,
        5814
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2347": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14024,
        14816
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2354": {
      "op": "SHL"
    },
    "2355": {
      "op": "SUB"
    },
    "2356": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14256,
        14269
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2357": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14256,
        14269
      ],
      "op": "AND",
      "path": "1"
    },
    "2358": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "2359": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "18",
      "statement": 33
    },
    "2360": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14252,
        14810
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7FD"
    },
    "2363": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14252,
        14810
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2364": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2366": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2367": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2374": {
      "op": "SHL"
    },
    "2375": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2376": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2383": {
      "op": "SHL"
    },
    "2384": {
      "op": "SUB"
    },
    "2385": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2386": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "AND",
      "path": "1"
    },
    "2387": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2388": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xBC197C81"
    },
    "2393": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2394": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x96F"
    },
    "2397": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2398": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14335,
        14343
      ],
      "op": "DUP10",
      "path": "1"
    },
    "2399": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14335,
        14343
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2400": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14345,
        14349
      ],
      "op": "DUP10",
      "path": "1"
    },
    "2401": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14345,
        14349
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2402": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14351,
        14354
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2403": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14351,
        14354
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2404": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14356,
        14363
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2405": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14356,
        14363
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2406": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14365,
        14369
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2407": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14365,
        14369
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2408": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2410": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "1"
    },
    "2411": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100D"
    },
    "2414": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2415": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2416": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2418": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2420": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2421": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2422": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2423": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SUB",
      "path": "1"
    },
    "2424": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2425": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2427": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2428": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2429": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "2430": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2431": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2432": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2433": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x989"
    },
    "2436": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2437": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2439": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2440": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2441": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2442": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "POP",
      "path": "1"
    },
    "2443": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "GAS",
      "path": "1"
    },
    "2444": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "CALL",
      "path": "1"
    },
    "2445": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2446": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "POP",
      "path": "1"
    },
    "2447": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "POP",
      "path": "1"
    },
    "2448": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "POP",
      "path": "1"
    },
    "2449": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2450": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2451": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B9"
    },
    "2454": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2455": {
      "op": "POP"
    },
    "2456": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2458": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2459": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2460": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2462": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2463": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2464": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2465": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "1"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2468": {
      "op": "NOT"
    },
    "2469": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "AND",
      "path": "1"
    },
    "2470": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2471": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "1"
    },
    "2472": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2473": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2474": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2475": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B6"
    },
    "2478": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2479": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2480": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "1"
    },
    "2481": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2482": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF4F"
    },
    "2485": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2486": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2487": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2489": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2490": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA66"
    },
    "2493": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2494": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9C5"
    },
    "2497": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12DC"
    },
    "2500": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2501": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2502": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2503": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8C379A0"
    },
    "2508": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "EQ",
      "path": "1"
    },
    "2509": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2510": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9FF"
    },
    "2513": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2514": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "POP",
      "path": "1"
    },
    "2515": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9DA"
    },
    "2518": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12F8"
    },
    "2521": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2522": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2523": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2524": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9E5"
    },
    "2527": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2528": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "POP",
      "path": "1"
    },
    "2529": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA01"
    },
    "2532": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2533": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2534": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14676,
        14682
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 34
    },
    "2535": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2537": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2538": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2544": {
      "op": "SHL"
    },
    "2545": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2546": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2547": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2549": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "ADD",
      "path": "1"
    },
    "2550": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4"
    },
    "2553": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2554": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2555": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10F1"
    },
    "2558": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14669,
        14683
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2559": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2560": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "POP",
      "path": "1"
    },
    "2561": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2562": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 35,
      "value": "0x40"
    },
    "2564": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2565": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2571": {
      "op": "SHL"
    },
    "2572": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2573": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2576": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2578": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2579": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "ADD",
      "path": "1"
    },
    "2580": {
      "op": "MSTORE"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2585": {
      "op": "DUP3"
    },
    "2586": {
      "op": "ADD"
    },
    "2587": {
      "op": "MSTORE"
    },
    "2588": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
    },
    "2621": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2623": {
      "op": "DUP3"
    },
    "2624": {
      "op": "ADD"
    },
    "2625": {
      "op": "MSTORE"
    },
    "2626": {
      "op": "PUSH20",
      "value": "0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "2649": {
      "op": "SHL"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2652": {
      "op": "DUP3"
    },
    "2653": {
      "op": "ADD"
    },
    "2654": {
      "op": "MSTORE"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2657": {
      "op": "ADD"
    },
    "2658": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4"
    },
    "2661": {
      "op": "JUMP"
    },
    "2662": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2669": {
      "op": "SHL"
    },
    "2670": {
      "op": "SUB"
    },
    "2671": {
      "op": "NOT"
    },
    "2672": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14449,
        14509
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2673": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14449,
        14509
      ],
      "op": "AND",
      "path": "1"
    },
    "2674": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2681": {
      "op": "SHL"
    },
    "2682": {
      "branch": 52,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14449,
        14509
      ],
      "op": "EQ",
      "path": "1"
    },
    "2683": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14445,
        14602
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x922"
    },
    "2686": {
      "branch": 52,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14445,
        14602
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2687": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 36,
      "value": "0x40"
    },
    "2689": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2690": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2696": {
      "op": "SHL"
    },
    "2697": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2698": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2699": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2701": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "ADD",
      "path": "1"
    },
    "2702": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4"
    },
    "2705": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2706": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1104"
    },
    "2709": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14533,
        14583
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2710": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14822,
        15015
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2711": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2713": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2714": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2715": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14955,
        14956
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2717": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2718": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2719": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2720": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2721": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2722": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "ADD",
      "path": "1"
    },
    "2723": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2724": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2725": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2726": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14888,
        14904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2728": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14888,
        14904
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2729": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2731": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14938
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2732": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2733": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2735": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2736": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2737": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "ADD",
      "path": "1"
    },
    "2738": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2739": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2740": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "2741": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2742": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "CALLDATACOPY",
      "path": "1"
    },
    "2743": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "ADD",
      "path": "1"
    },
    "2744": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2745": {
      "op": "POP"
    },
    "2746": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "POP",
      "path": "1"
    },
    "2747": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14957
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2748": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14957
      ],
      "op": "POP",
      "path": "1"
    },
    "2749": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14978,
        14985
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 37
    },
    "2750": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14972
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2751": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14973,
        14974
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2753": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2754": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2755": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2756": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "LT",
      "path": "1"
    },
    "2757": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAD0"
    },
    "2760": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2761": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAD0"
    },
    "2764": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B0"
    },
    "2767": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "i",
      "offset": [
        14967,
        14975
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2768": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2769": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2771": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2772": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2773": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "MUL",
      "path": "1"
    },
    "2774": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2775": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2776": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2777": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "ADD",
      "path": "1"
    },
    "2778": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "ADD",
      "path": "1"
    },
    "2779": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14985
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2780": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15003,
        15008
      ],
      "op": "SWAP3",
      "path": "1",
      "statement": 38
    },
    "2781": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14822,
        15015
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2782": {
      "op": "POP"
    },
    "2783": {
      "op": "POP"
    },
    "2784": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "o",
      "offset": [
        14822,
        15015
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2785": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13293,
        14018
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2792": {
      "op": "SHL"
    },
    "2793": {
      "op": "SUB"
    },
    "2794": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13500,
        13513
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2795": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13500,
        13513
      ],
      "op": "AND",
      "path": "1"
    },
    "2796": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "2797": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2798": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13496,
        14012
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7FD"
    },
    "2801": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13496,
        14012
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2802": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2804": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2805": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "2810": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2812": {
      "op": "SHL"
    },
    "2813": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2814": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2821": {
      "op": "SHL"
    },
    "2822": {
      "op": "SUB"
    },
    "2823": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2824": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "AND",
      "path": "1"
    },
    "2825": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2826": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF23A6E61"
    },
    "2831": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2832": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB25"
    },
    "2835": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2836": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13574,
        13582
      ],
      "op": "DUP10",
      "path": "1"
    },
    "2837": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13574,
        13582
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2838": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13584,
        13588
      ],
      "op": "DUP10",
      "path": "1"
    },
    "2839": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13584,
        13588
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2840": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13590,
        13592
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2841": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13590,
        13592
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2842": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13594,
        13600
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2843": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13594,
        13600
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2844": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13602,
        13606
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2845": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13602,
        13606
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2846": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2848": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "1"
    },
    "2849": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x106B"
    },
    "2852": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2853": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2854": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2856": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2858": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2859": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2860": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2861": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SUB",
      "path": "1"
    },
    "2862": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2863": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2865": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2866": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2867": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "2868": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2869": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2870": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2871": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB3F"
    },
    "2874": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2875": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2877": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2878": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2879": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2880": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "1"
    },
    "2881": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "GAS",
      "path": "1"
    },
    "2882": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "CALL",
      "path": "1"
    },
    "2883": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2884": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "1"
    },
    "2885": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "1"
    },
    "2886": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "1"
    },
    "2887": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2888": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2889": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB6F"
    },
    "2892": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2893": {
      "op": "POP"
    },
    "2894": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2896": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2897": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2898": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2900": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2901": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2902": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2903": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "1"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2906": {
      "op": "NOT"
    },
    "2907": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "AND",
      "path": "1"
    },
    "2908": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2909": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "1"
    },
    "2910": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2911": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2912": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2913": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB6C"
    },
    "2916": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2917": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2918": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "1"
    },
    "2919": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2920": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF4F"
    },
    "2923": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2924": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2925": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2927": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2928": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB7B"
    },
    "2931": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2932": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9C5"
    },
    "2935": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12DC"
    },
    "2938": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2939": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2946": {
      "op": "SHL"
    },
    "2947": {
      "op": "SUB"
    },
    "2948": {
      "op": "NOT"
    },
    "2949": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13656,
        13711
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2950": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13656,
        13711
      ],
      "op": "AND",
      "path": "1"
    },
    "2951": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2958": {
      "op": "SHL"
    },
    "2959": {
      "branch": 53,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13656,
        13711
      ],
      "op": "EQ",
      "path": "1"
    },
    "2960": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13652,
        13804
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x922"
    },
    "2963": {
      "branch": 53,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13652,
        13804
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2964": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 39,
      "value": "0x40"
    },
    "2966": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2967": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2971": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2973": {
      "op": "SHL"
    },
    "2974": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2975": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2976": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2978": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "1"
    },
    "2979": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F4"
    },
    "2982": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2983": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1104"
    },
    "2986": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13735,
        13785
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2987": {
      "op": "JUMPDEST"
    },
    "2988": {
      "op": "DUP1"
    },
    "2989": {
      "op": "CALLDATALOAD"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2996": {
      "op": "SHL"
    },
    "2997": {
      "op": "SUB"
    },
    "2998": {
      "op": "DUP2"
    },
    "2999": {
      "op": "AND"
    },
    "3000": {
      "op": "DUP2"
    },
    "3001": {
      "op": "EQ"
    },
    "3002": {
      "op": "PUSH2",
      "value": "0xBC2"
    },
    "3005": {
      "op": "JUMPI"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3008": {
      "op": "DUP1"
    },
    "3009": {
      "op": "REVERT"
    },
    "3010": {
      "op": "JUMPDEST"
    },
    "3011": {
      "op": "SWAP2"
    },
    "3012": {
      "op": "SWAP1"
    },
    "3013": {
      "op": "POP"
    },
    "3014": {
      "jump": "o",
      "op": "JUMP"
    },
    "3015": {
      "op": "JUMPDEST"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3018": {
      "op": "DUP3"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3021": {
      "op": "DUP4"
    },
    "3022": {
      "op": "ADD"
    },
    "3023": {
      "op": "SLT"
    },
    "3024": {
      "op": "PUSH2",
      "value": "0xBD8"
    },
    "3027": {
      "op": "JUMPI"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3030": {
      "op": "DUP1"
    },
    "3031": {
      "op": "REVERT"
    },
    "3032": {
      "op": "JUMPDEST"
    },
    "3033": {
      "op": "DUP2"
    },
    "3034": {
      "op": "CALLDATALOAD"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3037": {
      "op": "PUSH2",
      "value": "0xBE5"
    },
    "3040": {
      "op": "DUP3"
    },
    "3041": {
      "op": "PUSH2",
      "value": "0x11DB"
    },
    "3044": {
      "jump": "i",
      "op": "JUMP"
    },
    "3045": {
      "op": "JUMPDEST"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3048": {
      "op": "MLOAD"
    },
    "3049": {
      "op": "PUSH2",
      "value": "0xBF2"
    },
    "3052": {
      "op": "DUP3"
    },
    "3053": {
      "op": "DUP3"
    },
    "3054": {
      "op": "PUSH2",
      "value": "0x1252"
    },
    "3057": {
      "jump": "i",
      "op": "JUMP"
    },
    "3058": {
      "op": "JUMPDEST"
    },
    "3059": {
      "op": "DUP4"
    },
    "3060": {
      "op": "DUP2"
    },
    "3061": {
      "op": "MSTORE"
    },
    "3062": {
      "op": "DUP3"
    },
    "3063": {
      "op": "DUP2"
    },
    "3064": {
      "op": "ADD"
    },
    "3065": {
      "op": "SWAP2"
    },
    "3066": {
      "op": "POP"
    },
    "3067": {
      "op": "DUP6"
    },
    "3068": {
      "op": "DUP4"
    },
    "3069": {
      "op": "ADD"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3072": {
      "op": "DUP6"
    },
    "3073": {
      "op": "SWAP1"
    },
    "3074": {
      "op": "SHL"
    },
    "3075": {
      "op": "DUP8"
    },
    "3076": {
      "op": "ADD"
    },
    "3077": {
      "op": "DUP5"
    },
    "3078": {
      "op": "ADD"
    },
    "3079": {
      "op": "DUP9"
    },
    "3080": {
      "op": "LT"
    },
    "3081": {
      "op": "ISZERO"
    },
    "3082": {
      "op": "PUSH2",
      "value": "0xC12"
    },
    "3085": {
      "op": "JUMPI"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3088": {
      "op": "DUP1"
    },
    "3089": {
      "op": "REVERT"
    },
    "3090": {
      "op": "JUMPDEST"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3093": {
      "op": "JUMPDEST"
    },
    "3094": {
      "op": "DUP6"
    },
    "3095": {
      "op": "DUP2"
    },
    "3096": {
      "op": "LT"
    },
    "3097": {
      "op": "ISZERO"
    },
    "3098": {
      "op": "PUSH2",
      "value": "0xC31"
    },
    "3101": {
      "op": "JUMPI"
    },
    "3102": {
      "op": "DUP2"
    },
    "3103": {
      "op": "CALLDATALOAD"
    },
    "3104": {
      "op": "DUP5"
    },
    "3105": {
      "op": "MSTORE"
    },
    "3106": {
      "op": "SWAP3"
    },
    "3107": {
      "op": "DUP5"
    },
    "3108": {
      "op": "ADD"
    },
    "3109": {
      "op": "SWAP3"
    },
    "3110": {
      "op": "SWAP1"
    },
    "3111": {
      "op": "DUP5"
    },
    "3112": {
      "op": "ADD"
    },
    "3113": {
      "op": "SWAP1"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3116": {
      "op": "ADD"
    },
    "3117": {
      "op": "PUSH2",
      "value": "0xC15"
    },
    "3120": {
      "op": "JUMP"
    },
    "3121": {
      "op": "JUMPDEST"
    },
    "3122": {
      "op": "POP"
    },
    "3123": {
      "op": "SWAP1"
    },
    "3124": {
      "op": "SWAP8"
    },
    "3125": {
      "op": "SWAP7"
    },
    "3126": {
      "op": "POP"
    },
    "3127": {
      "op": "POP"
    },
    "3128": {
      "op": "POP"
    },
    "3129": {
      "op": "POP"
    },
    "3130": {
      "op": "POP"
    },
    "3131": {
      "op": "POP"
    },
    "3132": {
      "op": "POP"
    },
    "3133": {
      "jump": "o",
      "op": "JUMP"
    },
    "3134": {
      "op": "JUMPDEST"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3137": {
      "op": "DUP3"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3140": {
      "op": "DUP4"
    },
    "3141": {
      "op": "ADD"
    },
    "3142": {
      "op": "SLT"
    },
    "3143": {
      "op": "PUSH2",
      "value": "0xC4F"
    },
    "3146": {
      "op": "JUMPI"
    },
    "3147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3149": {
      "op": "DUP1"
    },
    "3150": {
      "op": "REVERT"
    },
    "3151": {
      "op": "JUMPDEST"
    },
    "3152": {
      "op": "DUP2"
    },
    "3153": {
      "op": "CALLDATALOAD"
    },
    "3154": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3163": {
      "op": "DUP2"
    },
    "3164": {
      "op": "GT"
    },
    "3165": {
      "op": "ISZERO"
    },
    "3166": {
      "op": "PUSH2",
      "value": "0xC69"
    },
    "3169": {
      "op": "JUMPI"
    },
    "3170": {
      "op": "PUSH2",
      "value": "0xC69"
    },
    "3173": {
      "op": "PUSH2",
      "value": "0x12C6"
    },
    "3176": {
      "jump": "i",
      "op": "JUMP"
    },
    "3177": {
      "op": "JUMPDEST"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3180": {
      "op": "MLOAD"
    },
    "3181": {
      "op": "PUSH2",
      "value": "0xC80"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3186": {
      "op": "DUP4"
    },
    "3187": {
      "op": "ADD"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3190": {
      "op": "NOT"
    },
    "3191": {
      "op": "AND"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3194": {
      "op": "ADD"
    },
    "3195": {
      "op": "DUP3"
    },
    "3196": {
      "op": "PUSH2",
      "value": "0x1252"
    },
    "3199": {
      "jump": "i",
      "op": "JUMP"
    },
    "3200": {
      "op": "JUMPDEST"
    },
    "3201": {
      "op": "DUP2"
    },
    "3202": {
      "op": "DUP2"
    },
    "3203": {
      "op": "MSTORE"
    },
    "3204": {
      "op": "DUP5"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3207": {
      "op": "DUP4"
    },
    "3208": {
      "op": "DUP7"
    },
    "3209": {
      "op": "ADD"
    },
    "3210": {
      "op": "ADD"
    },
    "3211": {
      "op": "GT"
    },
    "3212": {
      "op": "ISZERO"
    },
    "3213": {
      "op": "PUSH2",
      "value": "0xC95"
    },
    "3216": {
      "op": "JUMPI"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3219": {
      "op": "DUP1"
    },
    "3220": {
      "op": "REVERT"
    },
    "3221": {
      "op": "JUMPDEST"
    },
    "3222": {
      "op": "DUP2"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3225": {
      "op": "DUP6"
    },
    "3226": {
      "op": "ADD"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3229": {
      "op": "DUP4"
    },
    "3230": {
      "op": "ADD"
    },
    "3231": {
      "op": "CALLDATACOPY"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3234": {
      "op": "SWAP2"
    },
    "3235": {
      "op": "DUP2"
    },
    "3236": {
      "op": "ADD"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3239": {
      "op": "ADD"
    },
    "3240": {
      "op": "SWAP2"
    },
    "3241": {
      "op": "SWAP1"
    },
    "3242": {
      "op": "SWAP2"
    },
    "3243": {
      "op": "MSTORE"
    },
    "3244": {
      "op": "SWAP4"
    },
    "3245": {
      "op": "SWAP3"
    },
    "3246": {
      "op": "POP"
    },
    "3247": {
      "op": "POP"
    },
    "3248": {
      "op": "POP"
    },
    "3249": {
      "jump": "o",
      "op": "JUMP"
    },
    "3250": {
      "op": "JUMPDEST"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3253": {
      "op": "DUP1"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3256": {
      "op": "DUP4"
    },
    "3257": {
      "op": "DUP6"
    },
    "3258": {
      "op": "SUB"
    },
    "3259": {
      "op": "SLT"
    },
    "3260": {
      "op": "ISZERO"
    },
    "3261": {
      "op": "PUSH2",
      "value": "0xCC5"
    },
    "3264": {
      "op": "JUMPI"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3267": {
      "op": "DUP1"
    },
    "3268": {
      "op": "REVERT"
    },
    "3269": {
      "op": "JUMPDEST"
    },
    "3270": {
      "op": "PUSH2",
      "value": "0xCCE"
    },
    "3273": {
      "op": "DUP4"
    },
    "3274": {
      "op": "PUSH2",
      "value": "0xBAB"
    },
    "3277": {
      "jump": "i",
      "op": "JUMP"
    },
    "3278": {
      "op": "JUMPDEST"
    },
    "3279": {
      "op": "SWAP2"
    },
    "3280": {
      "op": "POP"
    },
    "3281": {
      "op": "PUSH2",
      "value": "0xCDC"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3286": {
      "op": "DUP5"
    },
    "3287": {
      "op": "ADD"
    },
    "3288": {
      "op": "PUSH2",
      "value": "0xBAB"
    },
    "3291": {
      "jump": "i",
      "op": "JUMP"
    },
    "3292": {
      "op": "JUMPDEST"
    },
    "3293": {
      "op": "SWAP1"
    },
    "3294": {
      "op": "POP"
    },
    "3295": {
      "op": "SWAP3"
    },
    "3296": {
      "op": "POP"
    },
    "3297": {
      "op": "SWAP3"
    },
    "3298": {
      "op": "SWAP1"
    },
    "3299": {
      "op": "POP"
    },
    "3300": {
      "jump": "o",
      "op": "JUMP"
    },
    "3301": {
      "op": "JUMPDEST"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3304": {
      "op": "DUP1"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3307": {
      "op": "DUP1"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3312": {
      "op": "DUP7"
    },
    "3313": {
      "op": "DUP9"
    },
    "3314": {
      "op": "SUB"
    },
    "3315": {
      "op": "SLT"
    },
    "3316": {
      "op": "ISZERO"
    },
    "3317": {
      "op": "PUSH2",
      "value": "0xCFD"
    },
    "3320": {
      "op": "JUMPI"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3323": {
      "op": "DUP1"
    },
    "3324": {
      "op": "REVERT"
    },
    "3325": {
      "op": "JUMPDEST"
    },
    "3326": {
      "op": "PUSH2",
      "value": "0xD06"
    },
    "3329": {
      "op": "DUP7"
    },
    "3330": {
      "op": "PUSH2",
      "value": "0xBAB"
    },
    "3333": {
      "jump": "i",
      "op": "JUMP"
    },
    "3334": {
      "op": "JUMPDEST"
    },
    "3335": {
      "op": "SWAP5"
    },
    "3336": {
      "op": "POP"
    },
    "3337": {
      "op": "PUSH2",
      "value": "0xD14"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3342": {
      "op": "DUP8"
    },
    "3343": {
      "op": "ADD"
    },
    "3344": {
      "op": "PUSH2",
      "value": "0xBAB"
    },
    "3347": {
      "jump": "i",
      "op": "JUMP"
    },
    "3348": {
      "op": "JUMPDEST"
    },
    "3349": {
      "op": "SWAP4"
    },
    "3350": {
      "op": "POP"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3353": {
      "op": "DUP7"
    },
    "3354": {
      "op": "ADD"
    },
    "3355": {
      "op": "CALLDATALOAD"
    },
    "3356": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3365": {
      "op": "DUP1"
    },
    "3366": {
      "op": "DUP3"
    },
    "3367": {
      "op": "GT"
    },
    "3368": {
      "op": "ISZERO"
    },
    "3369": {
      "op": "PUSH2",
      "value": "0xD31"
    },
    "3372": {
      "op": "JUMPI"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3375": {
      "op": "DUP1"
    },
    "3376": {
      "op": "REVERT"
    },
    "3377": {
      "op": "JUMPDEST"
    },
    "3378": {
      "op": "PUSH2",
      "value": "0xD3D"
    },
    "3381": {
      "op": "DUP10"
    },
    "3382": {
      "op": "DUP4"
    },
    "3383": {
      "op": "DUP11"
    },
    "3384": {
      "op": "ADD"
    },
    "3385": {
      "op": "PUSH2",
      "value": "0xBC7"
    },
    "3388": {
      "jump": "i",
      "op": "JUMP"
    },
    "3389": {
      "op": "JUMPDEST"
    },
    "3390": {
      "op": "SWAP5"
    },
    "3391": {
      "op": "POP"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3394": {
      "op": "DUP9"
    },
    "3395": {
      "op": "ADD"
    },
    "3396": {
      "op": "CALLDATALOAD"
    },
    "3397": {
      "op": "SWAP2"
    },
    "3398": {
      "op": "POP"
    },
    "3399": {
      "op": "DUP1"
    },
    "3400": {
      "op": "DUP3"
    },
    "3401": {
      "op": "GT"
    },
    "3402": {
      "op": "ISZERO"
    },
    "3403": {
      "op": "PUSH2",
      "value": "0xD53"
    },
    "3406": {
      "op": "JUMPI"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3409": {
      "op": "DUP1"
    },
    "3410": {
      "op": "REVERT"
    },
    "3411": {
      "op": "JUMPDEST"
    },
    "3412": {
      "op": "PUSH2",
      "value": "0xD5F"
    },
    "3415": {
      "op": "DUP10"
    },
    "3416": {
      "op": "DUP4"
    },
    "3417": {
      "op": "DUP11"
    },
    "3418": {
      "op": "ADD"
    },
    "3419": {
      "op": "PUSH2",
      "value": "0xBC7"
    },
    "3422": {
      "jump": "i",
      "op": "JUMP"
    },
    "3423": {
      "op": "JUMPDEST"
    },
    "3424": {
      "op": "SWAP4"
    },
    "3425": {
      "op": "POP"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3428": {
      "op": "DUP9"
    },
    "3429": {
      "op": "ADD"
    },
    "3430": {
      "op": "CALLDATALOAD"
    },
    "3431": {
      "op": "SWAP2"
    },
    "3432": {
      "op": "POP"
    },
    "3433": {
      "op": "DUP1"
    },
    "3434": {
      "op": "DUP3"
    },
    "3435": {
      "op": "GT"
    },
    "3436": {
      "op": "ISZERO"
    },
    "3437": {
      "op": "PUSH2",
      "value": "0xD75"
    },
    "3440": {
      "op": "JUMPI"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3443": {
      "op": "DUP1"
    },
    "3444": {
      "op": "REVERT"
    },
    "3445": {
      "op": "JUMPDEST"
    },
    "3446": {
      "op": "POP"
    },
    "3447": {
      "op": "PUSH2",
      "value": "0xD82"
    },
    "3450": {
      "op": "DUP9"
    },
    "3451": {
      "op": "DUP3"
    },
    "3452": {
      "op": "DUP10"
    },
    "3453": {
      "op": "ADD"
    },
    "3454": {
      "op": "PUSH2",
      "value": "0xC3E"
    },
    "3457": {
      "jump": "i",
      "op": "JUMP"
    },
    "3458": {
      "op": "JUMPDEST"
    },
    "3459": {
      "op": "SWAP2"
    },
    "3460": {
      "op": "POP"
    },
    "3461": {
      "op": "POP"
    },
    "3462": {
      "op": "SWAP3"
    },
    "3463": {
      "op": "SWAP6"
    },
    "3464": {
      "op": "POP"
    },
    "3465": {
      "op": "SWAP3"
    },
    "3466": {
      "op": "SWAP6"
    },
    "3467": {
      "op": "SWAP1"
    },
    "3468": {
      "op": "SWAP4"
    },
    "3469": {
      "op": "POP"
    },
    "3470": {
      "jump": "o",
      "op": "JUMP"
    },
    "3471": {
      "op": "JUMPDEST"
    },
    "3472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3474": {
      "op": "DUP1"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3477": {
      "op": "DUP1"
    },
    "3478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3482": {
      "op": "DUP7"
    },
    "3483": {
      "op": "DUP9"
    },
    "3484": {
      "op": "SUB"
    },
    "3485": {
      "op": "SLT"
    },
    "3486": {
      "op": "ISZERO"
    },
    "3487": {
      "op": "PUSH2",
      "value": "0xDA7"
    },
    "3490": {
      "op": "JUMPI"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3493": {
      "op": "DUP1"
    },
    "3494": {
      "op": "REVERT"
    },
    "3495": {
      "op": "JUMPDEST"
    },
    "3496": {
      "op": "PUSH2",
      "value": "0xDB0"
    },
    "3499": {
      "op": "DUP7"
    },
    "3500": {
      "op": "PUSH2",
      "value": "0xBAB"
    },
    "3503": {
      "jump": "i",
      "op": "JUMP"
    },
    "3504": {
      "op": "JUMPDEST"
    },
    "3505": {
      "op": "SWAP5"
    },
    "3506": {
      "op": "POP"
    },
    "3507": {
      "op": "PUSH2",
      "value": "0xDBE"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3512": {
      "op": "DUP8"
    },
    "3513": {
      "op": "ADD"
    },
    "3514": {
      "op": "PUSH2",
      "value": "0xBAB"
    },
    "3517": {
      "jump": "i",
      "op": "JUMP"
    },
    "3518": {
      "op": "JUMPDEST"
    },
    "3519": {
      "op": "SWAP4"
    },
    "3520": {
      "op": "POP"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3523": {
      "op": "DUP7"
    },
    "3524": {
      "op": "ADD"
    },
    "3525": {
      "op": "CALLDATALOAD"
    },
    "3526": {
      "op": "SWAP3"
    },
    "3527": {
      "op": "POP"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3530": {
      "op": "DUP7"
    },
    "3531": {
      "op": "ADD"
    },
    "3532": {
      "op": "CALLDATALOAD"
    },
    "3533": {
      "op": "SWAP2"
    },
    "3534": {
      "op": "POP"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3537": {
      "op": "DUP7"
    },
    "3538": {
      "op": "ADD"
    },
    "3539": {
      "op": "CALLDATALOAD"
    },
    "3540": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3549": {
      "op": "DUP2"
    },
    "3550": {
      "op": "GT"
    },
    "3551": {
      "op": "ISZERO"
    },
    "3552": {
      "op": "PUSH2",
      "value": "0xDE8"
    },
    "3555": {
      "op": "JUMPI"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3558": {
      "op": "DUP1"
    },
    "3559": {
      "op": "REVERT"
    },
    "3560": {
      "op": "JUMPDEST"
    },
    "3561": {
      "op": "PUSH2",
      "value": "0xD82"
    },
    "3564": {
      "op": "DUP9"
    },
    "3565": {
      "op": "DUP3"
    },
    "3566": {
      "op": "DUP10"
    },
    "3567": {
      "op": "ADD"
    },
    "3568": {
      "op": "PUSH2",
      "value": "0xC3E"
    },
    "3571": {
      "jump": "i",
      "op": "JUMP"
    },
    "3572": {
      "op": "JUMPDEST"
    },
    "3573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3575": {
      "op": "DUP1"
    },
    "3576": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3578": {
      "op": "DUP4"
    },
    "3579": {
      "op": "DUP6"
    },
    "3580": {
      "op": "SUB"
    },
    "3581": {
      "op": "SLT"
    },
    "3582": {
      "op": "ISZERO"
    },
    "3583": {
      "op": "PUSH2",
      "value": "0xE07"
    },
    "3586": {
      "op": "JUMPI"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3589": {
      "op": "DUP1"
    },
    "3590": {
      "op": "REVERT"
    },
    "3591": {
      "op": "JUMPDEST"
    },
    "3592": {
      "op": "PUSH2",
      "value": "0xE10"
    },
    "3595": {
      "op": "DUP4"
    },
    "3596": {
      "op": "PUSH2",
      "value": "0xBAB"
    },
    "3599": {
      "jump": "i",
      "op": "JUMP"
    },
    "3600": {
      "op": "JUMPDEST"
    },
    "3601": {
      "op": "SWAP2"
    },
    "3602": {
      "op": "POP"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3605": {
      "op": "DUP4"
    },
    "3606": {
      "op": "ADD"
    },
    "3607": {
      "op": "CALLDATALOAD"
    },
    "3608": {
      "op": "DUP1"
    },
    "3609": {
      "op": "ISZERO"
    },
    "3610": {
      "op": "ISZERO"
    },
    "3611": {
      "op": "DUP2"
    },
    "3612": {
      "op": "EQ"
    },
    "3613": {
      "op": "PUSH2",
      "value": "0xE25"
    },
    "3616": {
      "op": "JUMPI"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3619": {
      "op": "DUP1"
    },
    "3620": {
      "op": "REVERT"
    },
    "3621": {
      "op": "JUMPDEST"
    },
    "3622": {
      "op": "DUP1"
    },
    "3623": {
      "op": "SWAP2"
    },
    "3624": {
      "op": "POP"
    },
    "3625": {
      "op": "POP"
    },
    "3626": {
      "op": "SWAP3"
    },
    "3627": {
      "op": "POP"
    },
    "3628": {
      "op": "SWAP3"
    },
    "3629": {
      "op": "SWAP1"
    },
    "3630": {
      "op": "POP"
    },
    "3631": {
      "jump": "o",
      "op": "JUMP"
    },
    "3632": {
      "op": "JUMPDEST"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3635": {
      "op": "DUP1"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3638": {
      "op": "DUP4"
    },
    "3639": {
      "op": "DUP6"
    },
    "3640": {
      "op": "SUB"
    },
    "3641": {
      "op": "SLT"
    },
    "3642": {
      "op": "ISZERO"
    },
    "3643": {
      "op": "PUSH2",
      "value": "0xE43"
    },
    "3646": {
      "op": "JUMPI"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3649": {
      "op": "DUP1"
    },
    "3650": {
      "op": "REVERT"
    },
    "3651": {
      "op": "JUMPDEST"
    },
    "3652": {
      "op": "PUSH2",
      "value": "0xE4C"
    },
    "3655": {
      "op": "DUP4"
    },
    "3656": {
      "op": "PUSH2",
      "value": "0xBAB"
    },
    "3659": {
      "jump": "i",
      "op": "JUMP"
    },
    "3660": {
      "op": "JUMPDEST"
    },
    "3661": {
      "op": "SWAP5"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3664": {
      "op": "SWAP4"
    },
    "3665": {
      "op": "SWAP1"
    },
    "3666": {
      "op": "SWAP4"
    },
    "3667": {
      "op": "ADD"
    },
    "3668": {
      "op": "CALLDATALOAD"
    },
    "3669": {
      "op": "SWAP4"
    },
    "3670": {
      "op": "POP"
    },
    "3671": {
      "op": "POP"
    },
    "3672": {
      "op": "POP"
    },
    "3673": {
      "jump": "o",
      "op": "JUMP"
    },
    "3674": {
      "op": "JUMPDEST"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3677": {
      "op": "DUP1"
    },
    "3678": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3680": {
      "op": "DUP4"
    },
    "3681": {
      "op": "DUP6"
    },
    "3682": {
      "op": "SUB"
    },
    "3683": {
      "op": "SLT"
    },
    "3684": {
      "op": "ISZERO"
    },
    "3685": {
      "op": "PUSH2",
      "value": "0xE6D"
    },
    "3688": {
      "op": "JUMPI"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3691": {
      "op": "DUP1"
    },
    "3692": {
      "op": "REVERT"
    },
    "3693": {
      "op": "JUMPDEST"
    },
    "3694": {
      "op": "DUP3"
    },
    "3695": {
      "op": "CALLDATALOAD"
    },
    "3696": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3705": {
      "op": "DUP1"
    },
    "3706": {
      "op": "DUP3"
    },
    "3707": {
      "op": "GT"
    },
    "3708": {
      "op": "ISZERO"
    },
    "3709": {
      "op": "PUSH2",
      "value": "0xE85"
    },
    "3712": {
      "op": "JUMPI"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3715": {
      "op": "DUP1"
    },
    "3716": {
      "op": "REVERT"
    },
    "3717": {
      "op": "JUMPDEST"
    },
    "3718": {
      "op": "DUP2"
    },
    "3719": {
      "op": "DUP6"
    },
    "3720": {
      "op": "ADD"
    },
    "3721": {
      "op": "SWAP2"
    },
    "3722": {
      "op": "POP"
    },
    "3723": {
      "op": "DUP6"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3726": {
      "op": "DUP4"
    },
    "3727": {
      "op": "ADD"
    },
    "3728": {
      "op": "SLT"
    },
    "3729": {
      "op": "PUSH2",
      "value": "0xE99"
    },
    "3732": {
      "op": "JUMPI"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3735": {
      "op": "DUP1"
    },
    "3736": {
      "op": "REVERT"
    },
    "3737": {
      "op": "JUMPDEST"
    },
    "3738": {
      "op": "DUP2"
    },
    "3739": {
      "op": "CALLDATALOAD"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3742": {
      "op": "PUSH2",
      "value": "0xEA6"
    },
    "3745": {
      "op": "DUP3"
    },
    "3746": {
      "op": "PUSH2",
      "value": "0x11DB"
    },
    "3749": {
      "jump": "i",
      "op": "JUMP"
    },
    "3750": {
      "op": "JUMPDEST"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3753": {
      "op": "MLOAD"
    },
    "3754": {
      "op": "PUSH2",
      "value": "0xEB3"
    },
    "3757": {
      "op": "DUP3"
    },
    "3758": {
      "op": "DUP3"
    },
    "3759": {
      "op": "PUSH2",
      "value": "0x1252"
    },
    "3762": {
      "jump": "i",
      "op": "JUMP"
    },
    "3763": {
      "op": "JUMPDEST"
    },
    "3764": {
      "op": "DUP4"
    },
    "3765": {
      "op": "DUP2"
    },
    "3766": {
      "op": "MSTORE"
    },
    "3767": {
      "op": "DUP3"
    },
    "3768": {
      "op": "DUP2"
    },
    "3769": {
      "op": "ADD"
    },
    "3770": {
      "op": "SWAP2"
    },
    "3771": {
      "op": "POP"
    },
    "3772": {
      "op": "DUP6"
    },
    "3773": {
      "op": "DUP4"
    },
    "3774": {
      "op": "ADD"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3777": {
      "op": "DUP6"
    },
    "3778": {
      "op": "SWAP1"
    },
    "3779": {
      "op": "SHL"
    },
    "3780": {
      "op": "DUP8"
    },
    "3781": {
      "op": "ADD"
    },
    "3782": {
      "op": "DUP5"
    },
    "3783": {
      "op": "ADD"
    },
    "3784": {
      "op": "DUP12"
    },
    "3785": {
      "op": "LT"
    },
    "3786": {
      "op": "ISZERO"
    },
    "3787": {
      "op": "PUSH2",
      "value": "0xED3"
    },
    "3790": {
      "op": "JUMPI"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3793": {
      "op": "DUP1"
    },
    "3794": {
      "op": "REVERT"
    },
    "3795": {
      "op": "JUMPDEST"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3798": {
      "op": "SWAP7"
    },
    "3799": {
      "op": "POP"
    },
    "3800": {
      "op": "JUMPDEST"
    },
    "3801": {
      "op": "DUP5"
    },
    "3802": {
      "op": "DUP8"
    },
    "3803": {
      "op": "LT"
    },
    "3804": {
      "op": "ISZERO"
    },
    "3805": {
      "op": "PUSH2",
      "value": "0xEFD"
    },
    "3808": {
      "op": "JUMPI"
    },
    "3809": {
      "op": "PUSH2",
      "value": "0xEE9"
    },
    "3812": {
      "op": "DUP2"
    },
    "3813": {
      "op": "PUSH2",
      "value": "0xBAB"
    },
    "3816": {
      "jump": "i",
      "op": "JUMP"
    },
    "3817": {
      "op": "JUMPDEST"
    },
    "3818": {
      "op": "DUP4"
    },
    "3819": {
      "op": "MSTORE"
    },
    "3820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3822": {
      "op": "SWAP7"
    },
    "3823": {
      "op": "SWAP1"
    },
    "3824": {
      "op": "SWAP7"
    },
    "3825": {
      "op": "ADD"
    },
    "3826": {
      "op": "SWAP6"
    },
    "3827": {
      "op": "SWAP2"
    },
    "3828": {
      "op": "DUP4"
    },
    "3829": {
      "op": "ADD"
    },
    "3830": {
      "op": "SWAP2"
    },
    "3831": {
      "op": "DUP4"
    },
    "3832": {
      "op": "ADD"
    },
    "3833": {
      "op": "PUSH2",
      "value": "0xED8"
    },
    "3836": {
      "op": "JUMP"
    },
    "3837": {
      "op": "JUMPDEST"
    },
    "3838": {
      "op": "POP"
    },
    "3839": {
      "op": "SWAP7"
    },
    "3840": {
      "op": "POP"
    },
    "3841": {
      "op": "POP"
    },
    "3842": {
      "op": "DUP7"
    },
    "3843": {
      "op": "ADD"
    },
    "3844": {
      "op": "CALLDATALOAD"
    },
    "3845": {
      "op": "SWAP3"
    },
    "3846": {
      "op": "POP"
    },
    "3847": {
      "op": "POP"
    },
    "3848": {
      "op": "DUP1"
    },
    "3849": {
      "op": "DUP3"
    },
    "3850": {
      "op": "GT"
    },
    "3851": {
      "op": "ISZERO"
    },
    "3852": {
      "op": "PUSH2",
      "value": "0xF14"
    },
    "3855": {
      "op": "JUMPI"
    },
    "3856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3858": {
      "op": "DUP1"
    },
    "3859": {
      "op": "REVERT"
    },
    "3860": {
      "op": "JUMPDEST"
    },
    "3861": {
      "op": "POP"
    },
    "3862": {
      "op": "PUSH2",
      "value": "0xF21"
    },
    "3865": {
      "op": "DUP6"
    },
    "3866": {
      "op": "DUP3"
    },
    "3867": {
      "op": "DUP7"
    },
    "3868": {
      "op": "ADD"
    },
    "3869": {
      "op": "PUSH2",
      "value": "0xBC7"
    },
    "3872": {
      "jump": "i",
      "op": "JUMP"
    },
    "3873": {
      "op": "JUMPDEST"
    },
    "3874": {
      "op": "SWAP2"
    },
    "3875": {
      "op": "POP"
    },
    "3876": {
      "op": "POP"
    },
    "3877": {
      "op": "SWAP3"
    },
    "3878": {
      "op": "POP"
    },
    "3879": {
      "op": "SWAP3"
    },
    "3880": {
      "op": "SWAP1"
    },
    "3881": {
      "op": "POP"
    },
    "3882": {
      "jump": "o",
      "op": "JUMP"
    },
    "3883": {
      "op": "JUMPDEST"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3886": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3888": {
      "op": "DUP3"
    },
    "3889": {
      "op": "DUP5"
    },
    "3890": {
      "op": "SUB"
    },
    "3891": {
      "op": "SLT"
    },
    "3892": {
      "op": "ISZERO"
    },
    "3893": {
      "op": "PUSH2",
      "value": "0xF3D"
    },
    "3896": {
      "op": "JUMPI"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3899": {
      "op": "DUP1"
    },
    "3900": {
      "op": "REVERT"
    },
    "3901": {
      "op": "JUMPDEST"
    },
    "3902": {
      "op": "DUP2"
    },
    "3903": {
      "op": "CALLDATALOAD"
    },
    "3904": {
      "op": "PUSH2",
      "value": "0xF48"
    },
    "3907": {
      "op": "DUP2"
    },
    "3908": {
      "op": "PUSH2",
      "value": "0x1382"
    },
    "3911": {
      "jump": "i",
      "op": "JUMP"
    },
    "3912": {
      "op": "JUMPDEST"
    },
    "3913": {
      "op": "SWAP4"
    },
    "3914": {
      "op": "SWAP3"
    },
    "3915": {
      "op": "POP"
    },
    "3916": {
      "op": "POP"
    },
    "3917": {
      "op": "POP"
    },
    "3918": {
      "jump": "o",
      "op": "JUMP"
    },
    "3919": {
      "op": "JUMPDEST"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3924": {
      "op": "DUP3"
    },
    "3925": {
      "op": "DUP5"
    },
    "3926": {
      "op": "SUB"
    },
    "3927": {
      "op": "SLT"
    },
    "3928": {
      "op": "ISZERO"
    },
    "3929": {
      "op": "PUSH2",
      "value": "0xF61"
    },
    "3932": {
      "op": "JUMPI"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3935": {
      "op": "DUP1"
    },
    "3936": {
      "op": "REVERT"
    },
    "3937": {
      "op": "JUMPDEST"
    },
    "3938": {
      "op": "DUP2"
    },
    "3939": {
      "op": "MLOAD"
    },
    "3940": {
      "op": "PUSH2",
      "value": "0xF48"
    },
    "3943": {
      "op": "DUP2"
    },
    "3944": {
      "op": "PUSH2",
      "value": "0x1382"
    },
    "3947": {
      "jump": "i",
      "op": "JUMP"
    },
    "3948": {
      "op": "JUMPDEST"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3953": {
      "op": "DUP3"
    },
    "3954": {
      "op": "DUP5"
    },
    "3955": {
      "op": "SUB"
    },
    "3956": {
      "op": "SLT"
    },
    "3957": {
      "op": "ISZERO"
    },
    "3958": {
      "op": "PUSH2",
      "value": "0xF7E"
    },
    "3961": {
      "op": "JUMPI"
    },
    "3962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3964": {
      "op": "DUP1"
    },
    "3965": {
      "op": "REVERT"
    },
    "3966": {
      "op": "JUMPDEST"
    },
    "3967": {
      "op": "POP"
    },
    "3968": {
      "op": "CALLDATALOAD"
    },
    "3969": {
      "op": "SWAP2"
    },
    "3970": {
      "op": "SWAP1"
    },
    "3971": {
      "op": "POP"
    },
    "3972": {
      "jump": "o",
      "op": "JUMP"
    },
    "3973": {
      "op": "JUMPDEST"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3976": {
      "op": "DUP2"
    },
    "3977": {
      "op": "MLOAD"
    },
    "3978": {
      "op": "DUP1"
    },
    "3979": {
      "op": "DUP5"
    },
    "3980": {
      "op": "MSTORE"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3983": {
      "op": "DUP1"
    },
    "3984": {
      "op": "DUP6"
    },
    "3985": {
      "op": "ADD"
    },
    "3986": {
      "op": "SWAP5"
    },
    "3987": {
      "op": "POP"
    },
    "3988": {
      "op": "DUP1"
    },
    "3989": {
      "op": "DUP5"
    },
    "3990": {
      "op": "ADD"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3993": {
      "op": "JUMPDEST"
    },
    "3994": {
      "op": "DUP4"
    },
    "3995": {
      "op": "DUP2"
    },
    "3996": {
      "op": "LT"
    },
    "3997": {
      "op": "ISZERO"
    },
    "3998": {
      "op": "PUSH2",
      "value": "0xFB5"
    },
    "4001": {
      "op": "JUMPI"
    },
    "4002": {
      "op": "DUP2"
    },
    "4003": {
      "op": "MLOAD"
    },
    "4004": {
      "op": "DUP8"
    },
    "4005": {
      "op": "MSTORE"
    },
    "4006": {
      "op": "SWAP6"
    },
    "4007": {
      "op": "DUP3"
    },
    "4008": {
      "op": "ADD"
    },
    "4009": {
      "op": "SWAP6"
    },
    "4010": {
      "op": "SWAP1"
    },
    "4011": {
      "op": "DUP3"
    },
    "4012": {
      "op": "ADD"
    },
    "4013": {
      "op": "SWAP1"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4016": {
      "op": "ADD"
    },
    "4017": {
      "op": "PUSH2",
      "value": "0xF99"
    },
    "4020": {
      "op": "JUMP"
    },
    "4021": {
      "op": "JUMPDEST"
    },
    "4022": {
      "op": "POP"
    },
    "4023": {
      "op": "SWAP5"
    },
    "4024": {
      "op": "SWAP6"
    },
    "4025": {
      "op": "SWAP5"
    },
    "4026": {
      "op": "POP"
    },
    "4027": {
      "op": "POP"
    },
    "4028": {
      "op": "POP"
    },
    "4029": {
      "op": "POP"
    },
    "4030": {
      "op": "POP"
    },
    "4031": {
      "jump": "o",
      "op": "JUMP"
    },
    "4032": {
      "op": "JUMPDEST"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4035": {
      "op": "DUP2"
    },
    "4036": {
      "op": "MLOAD"
    },
    "4037": {
      "op": "DUP1"
    },
    "4038": {
      "op": "DUP5"
    },
    "4039": {
      "op": "MSTORE"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4042": {
      "op": "JUMPDEST"
    },
    "4043": {
      "op": "DUP2"
    },
    "4044": {
      "op": "DUP2"
    },
    "4045": {
      "op": "LT"
    },
    "4046": {
      "op": "ISZERO"
    },
    "4047": {
      "op": "PUSH2",
      "value": "0xFE6"
    },
    "4050": {
      "op": "JUMPI"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4053": {
      "op": "DUP2"
    },
    "4054": {
      "op": "DUP6"
    },
    "4055": {
      "op": "ADD"
    },
    "4056": {
      "op": "DUP2"
    },
    "4057": {
      "op": "ADD"
    },
    "4058": {
      "op": "MLOAD"
    },
    "4059": {
      "op": "DUP7"
    },
    "4060": {
      "op": "DUP4"
    },
    "4061": {
      "op": "ADD"
    },
    "4062": {
      "op": "DUP3"
    },
    "4063": {
      "op": "ADD"
    },
    "4064": {
      "op": "MSTORE"
    },
    "4065": {
      "op": "ADD"
    },
    "4066": {
      "op": "PUSH2",
      "value": "0xFCA"
    },
    "4069": {
      "op": "JUMP"
    },
    "4070": {
      "op": "JUMPDEST"
    },
    "4071": {
      "op": "DUP2"
    },
    "4072": {
      "op": "DUP2"
    },
    "4073": {
      "op": "GT"
    },
    "4074": {
      "op": "ISZERO"
    },
    "4075": {
      "op": "PUSH2",
      "value": "0xFF8"
    },
    "4078": {
      "op": "JUMPI"
    },
    "4079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4083": {
      "op": "DUP4"
    },
    "4084": {
      "op": "DUP8"
    },
    "4085": {
      "op": "ADD"
    },
    "4086": {
      "op": "ADD"
    },
    "4087": {
      "op": "MSTORE"
    },
    "4088": {
      "op": "JUMPDEST"
    },
    "4089": {
      "op": "POP"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4092": {
      "op": "ADD"
    },
    "4093": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4095": {
      "op": "NOT"
    },
    "4096": {
      "op": "AND"
    },
    "4097": {
      "op": "SWAP3"
    },
    "4098": {
      "op": "SWAP1"
    },
    "4099": {
      "op": "SWAP3"
    },
    "4100": {
      "op": "ADD"
    },
    "4101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4103": {
      "op": "ADD"
    },
    "4104": {
      "op": "SWAP3"
    },
    "4105": {
      "op": "SWAP2"
    },
    "4106": {
      "op": "POP"
    },
    "4107": {
      "op": "POP"
    },
    "4108": {
      "jump": "o",
      "op": "JUMP"
    },
    "4109": {
      "op": "JUMPDEST"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4116": {
      "op": "SHL"
    },
    "4117": {
      "op": "SUB"
    },
    "4118": {
      "op": "DUP7"
    },
    "4119": {
      "op": "DUP2"
    },
    "4120": {
      "op": "AND"
    },
    "4121": {
      "op": "DUP3"
    },
    "4122": {
      "op": "MSTORE"
    },
    "4123": {
      "op": "DUP6"
    },
    "4124": {
      "op": "AND"
    },
    "4125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4127": {
      "op": "DUP3"
    },
    "4128": {
      "op": "ADD"
    },
    "4129": {
      "op": "MSTORE"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4132": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4134": {
      "op": "DUP3"
    },
    "4135": {
      "op": "ADD"
    },
    "4136": {
      "op": "DUP2"
    },
    "4137": {
      "op": "SWAP1"
    },
    "4138": {
      "op": "MSTORE"
    },
    "4139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4141": {
      "op": "SWAP1"
    },
    "4142": {
      "op": "PUSH2",
      "value": "0x1039"
    },
    "4145": {
      "op": "SWAP1"
    },
    "4146": {
      "op": "DUP4"
    },
    "4147": {
      "op": "ADD"
    },
    "4148": {
      "op": "DUP7"
    },
    "4149": {
      "op": "PUSH2",
      "value": "0xF85"
    },
    "4152": {
      "jump": "i",
      "op": "JUMP"
    },
    "4153": {
      "op": "JUMPDEST"
    },
    "4154": {
      "op": "DUP3"
    },
    "4155": {
      "op": "DUP2"
    },
    "4156": {
      "op": "SUB"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4159": {
      "op": "DUP5"
    },
    "4160": {
      "op": "ADD"
    },
    "4161": {
      "op": "MSTORE"
    },
    "4162": {
      "op": "PUSH2",
      "value": "0x104B"
    },
    "4165": {
      "op": "DUP2"
    },
    "4166": {
      "op": "DUP7"
    },
    "4167": {
      "op": "PUSH2",
      "value": "0xF85"
    },
    "4170": {
      "jump": "i",
      "op": "JUMP"
    },
    "4171": {
      "op": "JUMPDEST"
    },
    "4172": {
      "op": "SWAP1"
    },
    "4173": {
      "op": "POP"
    },
    "4174": {
      "op": "DUP3"
    },
    "4175": {
      "op": "DUP2"
    },
    "4176": {
      "op": "SUB"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4179": {
      "op": "DUP5"
    },
    "4180": {
      "op": "ADD"
    },
    "4181": {
      "op": "MSTORE"
    },
    "4182": {
      "op": "PUSH2",
      "value": "0x105F"
    },
    "4185": {
      "op": "DUP2"
    },
    "4186": {
      "op": "DUP6"
    },
    "4187": {
      "op": "PUSH2",
      "value": "0xFC0"
    },
    "4190": {
      "jump": "i",
      "op": "JUMP"
    },
    "4191": {
      "op": "JUMPDEST"
    },
    "4192": {
      "op": "SWAP9"
    },
    "4193": {
      "op": "SWAP8"
    },
    "4194": {
      "op": "POP"
    },
    "4195": {
      "op": "POP"
    },
    "4196": {
      "op": "POP"
    },
    "4197": {
      "op": "POP"
    },
    "4198": {
      "op": "POP"
    },
    "4199": {
      "op": "POP"
    },
    "4200": {
      "op": "POP"
    },
    "4201": {
      "op": "POP"
    },
    "4202": {
      "jump": "o",
      "op": "JUMP"
    },
    "4203": {
      "op": "JUMPDEST"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4210": {
      "op": "SHL"
    },
    "4211": {
      "op": "SUB"
    },
    "4212": {
      "op": "DUP7"
    },
    "4213": {
      "op": "DUP2"
    },
    "4214": {
      "op": "AND"
    },
    "4215": {
      "op": "DUP3"
    },
    "4216": {
      "op": "MSTORE"
    },
    "4217": {
      "op": "DUP6"
    },
    "4218": {
      "op": "AND"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4221": {
      "op": "DUP3"
    },
    "4222": {
      "op": "ADD"
    },
    "4223": {
      "op": "MSTORE"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4226": {
      "op": "DUP2"
    },
    "4227": {
      "op": "ADD"
    },
    "4228": {
      "op": "DUP5"
    },
    "4229": {
      "op": "SWAP1"
    },
    "4230": {
      "op": "MSTORE"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4233": {
      "op": "DUP2"
    },
    "4234": {
      "op": "ADD"
    },
    "4235": {
      "op": "DUP4"
    },
    "4236": {
      "op": "SWAP1"
    },
    "4237": {
      "op": "MSTORE"
    },
    "4238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4242": {
      "op": "DUP3"
    },
    "4243": {
      "op": "ADD"
    },
    "4244": {
      "op": "DUP2"
    },
    "4245": {
      "op": "SWAP1"
    },
    "4246": {
      "op": "MSTORE"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4249": {
      "op": "SWAP1"
    },
    "4250": {
      "op": "PUSH2",
      "value": "0x10A5"
    },
    "4253": {
      "op": "SWAP1"
    },
    "4254": {
      "op": "DUP4"
    },
    "4255": {
      "op": "ADD"
    },
    "4256": {
      "op": "DUP5"
    },
    "4257": {
      "op": "PUSH2",
      "value": "0xFC0"
    },
    "4260": {
      "jump": "i",
      "op": "JUMP"
    },
    "4261": {
      "op": "JUMPDEST"
    },
    "4262": {
      "op": "SWAP8"
    },
    "4263": {
      "op": "SWAP7"
    },
    "4264": {
      "op": "POP"
    },
    "4265": {
      "op": "POP"
    },
    "4266": {
      "op": "POP"
    },
    "4267": {
      "op": "POP"
    },
    "4268": {
      "op": "POP"
    },
    "4269": {
      "op": "POP"
    },
    "4270": {
      "op": "POP"
    },
    "4271": {
      "jump": "o",
      "op": "JUMP"
    },
    "4272": {
      "op": "JUMPDEST"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4275": {
      "op": "DUP2"
    },
    "4276": {
      "op": "MSTORE"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4279": {
      "op": "PUSH2",
      "value": "0xF48"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4284": {
      "op": "DUP4"
    },
    "4285": {
      "op": "ADD"
    },
    "4286": {
      "op": "DUP5"
    },
    "4287": {
      "op": "PUSH2",
      "value": "0xF85"
    },
    "4290": {
      "jump": "i",
      "op": "JUMP"
    },
    "4291": {
      "op": "JUMPDEST"
    },
    "4292": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4294": {
      "op": "DUP2"
    },
    "4295": {
      "op": "MSTORE"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4298": {
      "op": "PUSH2",
      "value": "0x10D6"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4303": {
      "op": "DUP4"
    },
    "4304": {
      "op": "ADD"
    },
    "4305": {
      "op": "DUP6"
    },
    "4306": {
      "op": "PUSH2",
      "value": "0xF85"
    },
    "4309": {
      "jump": "i",
      "op": "JUMP"
    },
    "4310": {
      "op": "JUMPDEST"
    },
    "4311": {
      "op": "DUP3"
    },
    "4312": {
      "op": "DUP2"
    },
    "4313": {
      "op": "SUB"
    },
    "4314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4316": {
      "op": "DUP5"
    },
    "4317": {
      "op": "ADD"
    },
    "4318": {
      "op": "MSTORE"
    },
    "4319": {
      "op": "PUSH2",
      "value": "0x10E8"
    },
    "4322": {
      "op": "DUP2"
    },
    "4323": {
      "op": "DUP6"
    },
    "4324": {
      "op": "PUSH2",
      "value": "0xF85"
    },
    "4327": {
      "jump": "i",
      "op": "JUMP"
    },
    "4328": {
      "op": "JUMPDEST"
    },
    "4329": {
      "op": "SWAP6"
    },
    "4330": {
      "op": "SWAP5"
    },
    "4331": {
      "op": "POP"
    },
    "4332": {
      "op": "POP"
    },
    "4333": {
      "op": "POP"
    },
    "4334": {
      "op": "POP"
    },
    "4335": {
      "op": "POP"
    },
    "4336": {
      "jump": "o",
      "op": "JUMP"
    },
    "4337": {
      "op": "JUMPDEST"
    },
    "4338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4340": {
      "op": "DUP2"
    },
    "4341": {
      "op": "MSTORE"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4344": {
      "op": "PUSH2",
      "value": "0xF48"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4349": {
      "op": "DUP4"
    },
    "4350": {
      "op": "ADD"
    },
    "4351": {
      "op": "DUP5"
    },
    "4352": {
      "op": "PUSH2",
      "value": "0xFC0"
    },
    "4355": {
      "jump": "i",
      "op": "JUMP"
    },
    "4356": {
      "op": "JUMPDEST"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4359": {
      "op": "DUP1"
    },
    "4360": {
      "op": "DUP3"
    },
    "4361": {
      "op": "MSTORE"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "4364": {
      "op": "SWAP1"
    },
    "4365": {
      "op": "DUP3"
    },
    "4366": {
      "op": "ADD"
    },
    "4367": {
      "op": "MSTORE"
    },
    "4368": {
      "op": "PUSH32",
      "value": "0x455243313135353A204552433131353552656365697665722072656A65637465"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4403": {
      "op": "DUP3"
    },
    "4404": {
      "op": "ADD"
    },
    "4405": {
      "op": "MSTORE"
    },
    "4406": {
      "op": "PUSH8",
      "value": "0x6420746F6B656E73"
    },
    "4415": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4417": {
      "op": "SHL"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4420": {
      "op": "DUP3"
    },
    "4421": {
      "op": "ADD"
    },
    "4422": {
      "op": "MSTORE"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4425": {
      "op": "ADD"
    },
    "4426": {
      "op": "SWAP1"
    },
    "4427": {
      "jump": "o",
      "op": "JUMP"
    },
    "4428": {
      "op": "JUMPDEST"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4431": {
      "op": "DUP1"
    },
    "4432": {
      "op": "DUP3"
    },
    "4433": {
      "op": "MSTORE"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4436": {
      "op": "SWAP1"
    },
    "4437": {
      "op": "DUP3"
    },
    "4438": {
      "op": "ADD"
    },
    "4439": {
      "op": "MSTORE"
    },
    "4440": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F20746865207A65726F206164"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4475": {
      "op": "DUP3"
    },
    "4476": {
      "op": "ADD"
    },
    "4477": {
      "op": "MSTORE"
    },
    "4478": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4486": {
      "op": "SHL"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4489": {
      "op": "DUP3"
    },
    "4490": {
      "op": "ADD"
    },
    "4491": {
      "op": "MSTORE"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4494": {
      "op": "ADD"
    },
    "4495": {
      "op": "SWAP1"
    },
    "4496": {
      "jump": "o",
      "op": "JUMP"
    },
    "4497": {
      "op": "JUMPDEST"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4500": {
      "op": "DUP1"
    },
    "4501": {
      "op": "DUP3"
    },
    "4502": {
      "op": "MSTORE"
    },
    "4503": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4505": {
      "op": "SWAP1"
    },
    "4506": {
      "op": "DUP3"
    },
    "4507": {
      "op": "ADD"
    },
    "4508": {
      "op": "MSTORE"
    },
    "4509": {
      "op": "PUSH32",
      "value": "0x455243313135353A20696E73756666696369656E742062616C616E636520666F"
    },
    "4542": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4544": {
      "op": "DUP3"
    },
    "4545": {
      "op": "ADD"
    },
    "4546": {
      "op": "MSTORE"
    },
    "4547": {
      "op": "PUSH10",
      "value": "0x39103A3930B739B332B9"
    },
    "4558": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "4560": {
      "op": "SHL"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4563": {
      "op": "DUP3"
    },
    "4564": {
      "op": "ADD"
    },
    "4565": {
      "op": "MSTORE"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4568": {
      "op": "ADD"
    },
    "4569": {
      "op": "SWAP1"
    },
    "4570": {
      "jump": "o",
      "op": "JUMP"
    },
    "4571": {
      "op": "JUMPDEST"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4574": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4583": {
      "op": "DUP3"
    },
    "4584": {
      "op": "GT"
    },
    "4585": {
      "op": "ISZERO"
    },
    "4586": {
      "op": "PUSH2",
      "value": "0x11F5"
    },
    "4589": {
      "op": "JUMPI"
    },
    "4590": {
      "op": "PUSH2",
      "value": "0x11F5"
    },
    "4593": {
      "op": "PUSH2",
      "value": "0x12C6"
    },
    "4596": {
      "jump": "i",
      "op": "JUMP"
    },
    "4597": {
      "op": "JUMPDEST"
    },
    "4598": {
      "op": "POP"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4601": {
      "op": "SHL"
    },
    "4602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4604": {
      "op": "ADD"
    },
    "4605": {
      "op": "SWAP1"
    },
    "4606": {
      "jump": "o",
      "op": "JUMP"
    },
    "4607": {
      "op": "JUMPDEST"
    },
    "4608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4610": {
      "op": "DUP3"
    },
    "4611": {
      "op": "NOT"
    },
    "4612": {
      "op": "DUP3"
    },
    "4613": {
      "op": "GT"
    },
    "4614": {
      "op": "ISZERO"
    },
    "4615": {
      "op": "PUSH2",
      "value": "0x1212"
    },
    "4618": {
      "op": "JUMPI"
    },
    "4619": {
      "op": "PUSH2",
      "value": "0x1212"
    },
    "4622": {
      "op": "PUSH2",
      "value": "0x129A"
    },
    "4625": {
      "jump": "i",
      "op": "JUMP"
    },
    "4626": {
      "op": "JUMPDEST"
    },
    "4627": {
      "op": "POP"
    },
    "4628": {
      "op": "ADD"
    },
    "4629": {
      "op": "SWAP1"
    },
    "4630": {
      "jump": "o",
      "op": "JUMP"
    },
    "4631": {
      "op": "JUMPDEST"
    },
    "4632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4634": {
      "op": "DUP2"
    },
    "4635": {
      "op": "DUP2"
    },
    "4636": {
      "op": "SHR"
    },
    "4637": {
      "op": "SWAP1"
    },
    "4638": {
      "op": "DUP3"
    },
    "4639": {
      "op": "AND"
    },
    "4640": {
      "op": "DUP1"
    },
    "4641": {
      "op": "PUSH2",
      "value": "0x122B"
    },
    "4644": {
      "op": "JUMPI"
    },
    "4645": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4647": {
      "op": "DUP3"
    },
    "4648": {
      "op": "AND"
    },
    "4649": {
      "op": "SWAP2"
    },
    "4650": {
      "op": "POP"
    },
    "4651": {
      "op": "JUMPDEST"
    },
    "4652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4654": {
      "op": "DUP3"
    },
    "4655": {
      "op": "LT"
    },
    "4656": {
      "op": "DUP2"
    },
    "4657": {
      "op": "EQ"
    },
    "4658": {
      "op": "ISZERO"
    },
    "4659": {
      "op": "PUSH2",
      "value": "0x124C"
    },
    "4662": {
      "op": "JUMPI"
    },
    "4663": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4668": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4670": {
      "op": "SHL"
    },
    "4671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4673": {
      "op": "MSTORE"
    },
    "4674": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4678": {
      "op": "MSTORE"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4683": {
      "op": "REVERT"
    },
    "4684": {
      "op": "JUMPDEST"
    },
    "4685": {
      "op": "POP"
    },
    "4686": {
      "op": "SWAP2"
    },
    "4687": {
      "op": "SWAP1"
    },
    "4688": {
      "op": "POP"
    },
    "4689": {
      "jump": "o",
      "op": "JUMP"
    },
    "4690": {
      "op": "JUMPDEST"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4693": {
      "op": "DUP3"
    },
    "4694": {
      "op": "ADD"
    },
    "4695": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4697": {
      "op": "NOT"
    },
    "4698": {
      "op": "AND"
    },
    "4699": {
      "op": "DUP2"
    },
    "4700": {
      "op": "ADD"
    },
    "4701": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4710": {
      "op": "DUP2"
    },
    "4711": {
      "op": "GT"
    },
    "4712": {
      "op": "DUP3"
    },
    "4713": {
      "op": "DUP3"
    },
    "4714": {
      "op": "LT"
    },
    "4715": {
      "op": "OR"
    },
    "4716": {
      "op": "ISZERO"
    },
    "4717": {
      "op": "PUSH2",
      "value": "0x1278"
    },
    "4720": {
      "op": "JUMPI"
    },
    "4721": {
      "op": "PUSH2",
      "value": "0x1278"
    },
    "4724": {
      "op": "PUSH2",
      "value": "0x12C6"
    },
    "4727": {
      "jump": "i",
      "op": "JUMP"
    },
    "4728": {
      "op": "JUMPDEST"
    },
    "4729": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4731": {
      "op": "MSTORE"
    },
    "4732": {
      "op": "POP"
    },
    "4733": {
      "op": "POP"
    },
    "4734": {
      "jump": "o",
      "op": "JUMP"
    },
    "4735": {
      "op": "JUMPDEST"
    },
    "4736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4740": {
      "op": "NOT"
    },
    "4741": {
      "op": "DUP3"
    },
    "4742": {
      "op": "EQ"
    },
    "4743": {
      "op": "ISZERO"
    },
    "4744": {
      "op": "PUSH2",
      "value": "0x1293"
    },
    "4747": {
      "op": "JUMPI"
    },
    "4748": {
      "op": "PUSH2",
      "value": "0x1293"
    },
    "4751": {
      "op": "PUSH2",
      "value": "0x129A"
    },
    "4754": {
      "jump": "i",
      "op": "JUMP"
    },
    "4755": {
      "op": "JUMPDEST"
    },
    "4756": {
      "op": "POP"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4759": {
      "op": "ADD"
    },
    "4760": {
      "op": "SWAP1"
    },
    "4761": {
      "jump": "o",
      "op": "JUMP"
    },
    "4762": {
      "op": "JUMPDEST"
    },
    "4763": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4768": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4770": {
      "op": "SHL"
    },
    "4771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4773": {
      "op": "MSTORE"
    },
    "4774": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4778": {
      "op": "MSTORE"
    },
    "4779": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4783": {
      "op": "REVERT"
    },
    "4784": {
      "op": "JUMPDEST"
    },
    "4785": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4790": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4792": {
      "op": "SHL"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4795": {
      "op": "MSTORE"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4800": {
      "op": "MSTORE"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4805": {
      "op": "REVERT"
    },
    "4806": {
      "op": "JUMPDEST"
    },
    "4807": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4812": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4814": {
      "op": "SHL"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4817": {
      "op": "MSTORE"
    },
    "4818": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4820": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4822": {
      "op": "MSTORE"
    },
    "4823": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4827": {
      "op": "REVERT"
    },
    "4828": {
      "op": "JUMPDEST"
    },
    "4829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4833": {
      "op": "RETURNDATASIZE"
    },
    "4834": {
      "op": "GT"
    },
    "4835": {
      "op": "ISZERO"
    },
    "4836": {
      "op": "PUSH2",
      "value": "0x12F5"
    },
    "4839": {
      "op": "JUMPI"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4844": {
      "op": "DUP1"
    },
    "4845": {
      "op": "RETURNDATACOPY"
    },
    "4846": {
      "op": "POP"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4849": {
      "op": "MLOAD"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4852": {
      "op": "SHR"
    },
    "4853": {
      "op": "JUMPDEST"
    },
    "4854": {
      "op": "SWAP1"
    },
    "4855": {
      "jump": "o",
      "op": "JUMP"
    },
    "4856": {
      "op": "JUMPDEST"
    },
    "4857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4859": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4861": {
      "op": "RETURNDATASIZE"
    },
    "4862": {
      "op": "LT"
    },
    "4863": {
      "op": "ISZERO"
    },
    "4864": {
      "op": "PUSH2",
      "value": "0x1306"
    },
    "4867": {
      "op": "JUMPI"
    },
    "4868": {
      "op": "SWAP1"
    },
    "4869": {
      "jump": "o",
      "op": "JUMP"
    },
    "4870": {
      "op": "JUMPDEST"
    },
    "4871": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4873": {
      "op": "MLOAD"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4876": {
      "op": "NOT"
    },
    "4877": {
      "op": "RETURNDATASIZE"
    },
    "4878": {
      "op": "DUP2"
    },
    "4879": {
      "op": "ADD"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4882": {
      "op": "DUP4"
    },
    "4883": {
      "op": "RETURNDATACOPY"
    },
    "4884": {
      "op": "DUP2"
    },
    "4885": {
      "op": "MLOAD"
    },
    "4886": {
      "op": "RETURNDATASIZE"
    },
    "4887": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4896": {
      "op": "DUP2"
    },
    "4897": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4899": {
      "op": "DUP5"
    },
    "4900": {
      "op": "ADD"
    },
    "4901": {
      "op": "GT"
    },
    "4902": {
      "op": "DUP2"
    },
    "4903": {
      "op": "DUP5"
    },
    "4904": {
      "op": "GT"
    },
    "4905": {
      "op": "OR"
    },
    "4906": {
      "op": "ISZERO"
    },
    "4907": {
      "op": "PUSH2",
      "value": "0x1336"
    },
    "4910": {
      "op": "JUMPI"
    },
    "4911": {
      "op": "POP"
    },
    "4912": {
      "op": "POP"
    },
    "4913": {
      "op": "POP"
    },
    "4914": {
      "op": "POP"
    },
    "4915": {
      "op": "POP"
    },
    "4916": {
      "op": "SWAP1"
    },
    "4917": {
      "jump": "o",
      "op": "JUMP"
    },
    "4918": {
      "op": "JUMPDEST"
    },
    "4919": {
      "op": "DUP3"
    },
    "4920": {
      "op": "DUP6"
    },
    "4921": {
      "op": "ADD"
    },
    "4922": {
      "op": "SWAP2"
    },
    "4923": {
      "op": "POP"
    },
    "4924": {
      "op": "DUP2"
    },
    "4925": {
      "op": "MLOAD"
    },
    "4926": {
      "op": "DUP2"
    },
    "4927": {
      "op": "DUP2"
    },
    "4928": {
      "op": "GT"
    },
    "4929": {
      "op": "ISZERO"
    },
    "4930": {
      "op": "PUSH2",
      "value": "0x134E"
    },
    "4933": {
      "op": "JUMPI"
    },
    "4934": {
      "op": "POP"
    },
    "4935": {
      "op": "POP"
    },
    "4936": {
      "op": "POP"
    },
    "4937": {
      "op": "POP"
    },
    "4938": {
      "op": "POP"
    },
    "4939": {
      "op": "POP"
    },
    "4940": {
      "op": "SWAP1"
    },
    "4941": {
      "jump": "o",
      "op": "JUMP"
    },
    "4942": {
      "op": "JUMPDEST"
    },
    "4943": {
      "op": "DUP5"
    },
    "4944": {
      "op": "RETURNDATASIZE"
    },
    "4945": {
      "op": "DUP8"
    },
    "4946": {
      "op": "ADD"
    },
    "4947": {
      "op": "ADD"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4950": {
      "op": "DUP3"
    },
    "4951": {
      "op": "DUP6"
    },
    "4952": {
      "op": "ADD"
    },
    "4953": {
      "op": "ADD"
    },
    "4954": {
      "op": "GT"
    },
    "4955": {
      "op": "ISZERO"
    },
    "4956": {
      "op": "PUSH2",
      "value": "0x1368"
    },
    "4959": {
      "op": "JUMPI"
    },
    "4960": {
      "op": "POP"
    },
    "4961": {
      "op": "POP"
    },
    "4962": {
      "op": "POP"
    },
    "4963": {
      "op": "POP"
    },
    "4964": {
      "op": "POP"
    },
    "4965": {
      "op": "POP"
    },
    "4966": {
      "op": "SWAP1"
    },
    "4967": {
      "jump": "o",
      "op": "JUMP"
    },
    "4968": {
      "op": "JUMPDEST"
    },
    "4969": {
      "op": "PUSH2",
      "value": "0x1377"
    },
    "4972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4974": {
      "op": "DUP3"
    },
    "4975": {
      "op": "DUP7"
    },
    "4976": {
      "op": "ADD"
    },
    "4977": {
      "op": "ADD"
    },
    "4978": {
      "op": "DUP8"
    },
    "4979": {
      "op": "PUSH2",
      "value": "0x1252"
    },
    "4982": {
      "jump": "i",
      "op": "JUMP"
    },
    "4983": {
      "op": "JUMPDEST"
    },
    "4984": {
      "op": "POP"
    },
    "4985": {
      "op": "SWAP1"
    },
    "4986": {
      "op": "SWAP6"
    },
    "4987": {
      "op": "SWAP5"
    },
    "4988": {
      "op": "POP"
    },
    "4989": {
      "op": "POP"
    },
    "4990": {
      "op": "POP"
    },
    "4991": {
      "op": "POP"
    },
    "4992": {
      "op": "POP"
    },
    "4993": {
      "jump": "o",
      "op": "JUMP"
    },
    "4994": {
      "op": "JUMPDEST"
    },
    "4995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5001": {
      "op": "SHL"
    },
    "5002": {
      "op": "SUB"
    },
    "5003": {
      "op": "NOT"
    },
    "5004": {
      "op": "DUP2"
    },
    "5005": {
      "op": "AND"
    },
    "5006": {
      "op": "DUP2"
    },
    "5007": {
      "op": "EQ"
    },
    "5008": {
      "op": "PUSH2",
      "value": "0x1398"
    },
    "5011": {
      "op": "JUMPI"
    },
    "5012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5014": {
      "op": "DUP1"
    },
    "5015": {
      "op": "REVERT"
    },
    "5016": {
      "op": "JUMPDEST"
    },
    "5017": {
      "op": "POP"
    },
    "5018": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "369425f65125a250ff5e286a0a56ed292a68a920",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(_msgSender() != operator, \"ERC1155: setting approval status for self\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address account,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(account != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][account] += amount;\n        emit TransferSingle(operator, address(0), account, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `account`\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        uint256 accountBalance = _balances[id][account];\n        require(accountBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][account] = accountBalance - amount;\n        }\n\n        emit TransferSingle(operator, account, address(0), id, amount);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, account, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 accountBalance = _balances[id][account];\n            require(accountBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][account] = accountBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, account, address(0), ids, amounts);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n",
  "sourceMap": "494:14523:1:-:0;;;1031:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1073:13;1081:4;1073:7;:13::i;:::-;1031:62;494:14523;;8028:86;8094:13;;;;:4;;:13;;;;;:::i;:::-;;8028:86;:::o;494:14523::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;494:14523:1;;;-1:-1:-1;494:14523:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1087:31;94:6;125:2;168;156:9;147:7;143:23;139:32;136:52;;;184:1;181;174:12;136:52;211:16;;-1:-1:-1;;;;;276:14:31;;;273:34;;;303:1;300;293:12;273:34;341:6;330:9;326:22;316:32;;386:7;379:4;375:2;371:13;367:27;357:55;;408:1;405;398:12;357:55;437:2;431:9;459:2;455;452:10;449:36;;;465:18;;:::i;:::-;540:2;534:9;508:2;594:13;;-1:-1:-1;;590:22:31;;;614:2;586:31;582:40;570:53;;;638:18;;;658:22;;;635:46;632:72;;;684:18;;:::i;:::-;724:10;720:2;713:22;759:2;751:6;744:18;799:7;794:2;789;785;781:11;777:20;774:33;771:53;;;820:1;817;810:12;771:53;842:1;833:10;;852:129;866:2;863:1;860:9;852:129;;;954:10;;;950:19;;944:26;923:14;;;919:23;;912:59;877:10;;;;852:129;;;999:2;996:1;993:9;990:80;;;1058:1;1053:2;1048;1040:6;1036:15;1032:24;1025:35;990:80;1089:6;14:1087;-1:-1:-1;;;;;;;;14:1087:31:o;1106:380::-;1185:1;1181:12;;;;1228;;;1249:61;;1303:4;1295:6;1291:17;1281:27;;1249:61;1356:2;1348:6;1345:14;1325:18;1322:38;1319:161;;;1402:10;1397:3;1393:20;1390:1;1383:31;1437:4;1434:1;1427:15;1465:4;1462:1;1455:15;1319:161;;1106:380;;;:::o;1491:127::-;1552:10;1547:3;1543:20;1540:1;1533:31;1583:4;1580:1;1573:15;1607:4;1604:1;1597:15;1491:127;494:14523:1;;;;;;",
  "sourcePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/ERC1155.sol",
  "type": "contract"
}